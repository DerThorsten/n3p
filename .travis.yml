language: generic
dist: trusty
sudo: required
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - deadsnakes
    packages:
      - cmake

matrix:
  include:
    - os: linux
      env: 
        - USE_CONDA=true
        - CONDA_PYTHON_VERSION=3.6
        - COMPILER=gcc6
      before_script:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH";
        - hash -r;
        - conda config --set always_yes yes --set changeps1 no;
        - conda update -q conda;
        - conda info -a;
        #
        - conda create -q -n dev -c conda-forge/label/gcc7 -c defaults python=$CONDA_PYTHON_VERSION cmake gcc_linux-64 gxx_linux-64
        - source activate dev
        - conda install -c conda-forge/label/gcc7 glpk xtensor-python boost-cpp scikit-image vigra

      script:

        ###############################################
        # shortcuts
        ###############################################
        - export PATH="$HOME/miniconda/bin:$PATH"
        - source activate dev
        - export ENV_ROOT="$HOME/miniconda/envs/dev"
        - export ENV_INCLUDE="$ENV_ROOT/include"
        - export ENV_BIN=$ENV_ROOT/bin
        - export ROOT_BIN="$HOME/miniconda/bin"
        


        ###############################################
        # setup compiler
        ###############################################
        - export CXX="$ENV_BIN/g++";
        - export CC="$ENV_BIN/gcc";
        
        #-DCMAKE_C_COMPILER=$C_COMPILER_PATH
        #-DCMAKE_CXX_COMPILER=$COMPILER_PATH
        ###############################################
        # configure cmake
        ###############################################
        - $ENV_BIN/cmake 
                -DWITHIN_TRAVIS=ON 
                -DWITH_QPBO=OFF
                -DWITH_HDF5=OFF
                -DWITH_GLPK=ON 
                -DWITH_CPLEX=OFF 
                -DWITH_GUROBI=OFF
                -DBUILD_CPP_TEST=OFF
                -DBUILD_PYTHON_TEST=ON 
                -DBUILD_NIFTY_PYTHON=ON 
                -DNOSETESTS_PATH=$ENV_BIN 
                -DHDF5_INCLUDE_DIR=$ENV_INCLUDE 
                -DGLPK_INCLUDE_DIR=$ENV_INCLUDE 
                -DBoost_INCLUDE_DIR=$ENV_INCLUDE  
                -DPYTHON_EXECUTABLE=$ENV_BIN/python$CONDA_PYTHON_VERSION
                -DPYTHON_NUMPY_INCLUDE_DIR=/home/travis/miniconda/envs/dev/lib/python$CONDA_PYTHON_VERSION/site-packages/numpy/core/include
                -DPYTHON_MODULE_INSTALL_DIR=/home/travis/miniconda/envs/dev/lib/python$CONDA_PYTHON_VERSION/site-packages/
                -DCMAKE_INSTALL_PREFIX=/home/travis/miniconda/envs/dev/
               
        ###############################################
        # the actual build
        ###############################################
        - make -j 2

        ###############################################
        # cpp tests
        ###############################################
        - make test
        - CTEST_OUTPUT_ON_FAILURE=TRUE make test
        
        ###############################################
        # install and test the project
        ###############################################
        - make install
        # TODO use unittest discover
        - cd src/python/test
        # this is a fucked up way of running python test
        # pls, if someone could fix this =)
        - nosetests  cgp/*.py
        - nosetests  graph/lifted_multicut/*.py
        - nosetests  graph/multicut/*.py
        - nosetests  graph/mincut/*.py
        - nosetests  graph/agglo/*.py
        - nosetests  hdf5/*.py
        - nosetests  tools/*.py
        # back to the root
        - cd ../../..
        # run the python examples with nose?
        - $ENV_BIN/python src/python/examples/nifty_configuration.py

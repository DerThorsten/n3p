<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacenifty_1_1tools" kind="namespace" language="C++">
    <compoundname>nifty::tools</compoundname>
    <innerclass refid="classnifty_1_1tools_1_1Block" prot="public">nifty::tools::Block</innerclass>
    <innerclass refid="classnifty_1_1tools_1_1Blocking" prot="public">nifty::tools::Blocking</innerclass>
    <innerclass refid="classnifty_1_1tools_1_1BlockStorage" prot="public">nifty::tools::BlockStorage</innerclass>
    <innerclass refid="structnifty_1_1tools_1_1BlockStorageSelector" prot="public">nifty::tools::BlockStorageSelector</innerclass>
    <innerclass refid="structnifty_1_1tools_1_1BlockStorageSelector_3_01hdf5_1_1Hdf5Array_3_01T_01_4_01_4" prot="public">nifty::tools::BlockStorageSelector&lt; hdf5::Hdf5Array&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structnifty_1_1tools_1_1BlockStorageSelector_3_01marray_1_1Marray_3_01T_00_01A_01_4_01_4" prot="public">nifty::tools::BlockStorageSelector&lt; marray::Marray&lt; T, A &gt; &gt;</innerclass>
    <innerclass refid="structnifty_1_1tools_1_1BlockStorageSelector_3_01marray_1_1PyView_3_01T_00_01DIM_00_01AUTO__CAST__TYPE_01_4_01_4" prot="public">nifty::tools::BlockStorageSelector&lt; marray::PyView&lt; T, DIM, AUTO_CAST_TYPE &gt; &gt;</innerclass>
    <innerclass refid="structnifty_1_1tools_1_1BlockStorageSelector_3_01marray_1_1View_3_01T_00_01C_00_01A_01_4_01_4" prot="public">nifty::tools::BlockStorageSelector&lt; marray::View&lt; T, C, A &gt; &gt;</innerclass>
    <innerclass refid="classnifty_1_1tools_1_1BlockView" prot="public">nifty::tools::BlockView</innerclass>
    <innerclass refid="classnifty_1_1tools_1_1BlockWithHalo" prot="public">nifty::tools::BlockWithHalo</innerclass>
    <innerclass refid="classnifty_1_1tools_1_1ChangeablePriorityQueue" prot="public">nifty::tools::ChangeablePriorityQueue</innerclass>
    <innerclass refid="classnifty_1_1tools_1_1ConstIteratorRange" prot="public">nifty::tools::ConstIteratorRange</innerclass>
    <innerclass refid="classnifty_1_1tools_1_1Timer" prot="public">nifty::tools::Timer</innerclass>
    <innerclass refid="classnifty_1_1tools_1_1VerboseTimer" prot="public">nifty::tools::VerboseTimer</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacenifty_1_1tools_1a5d64102d01cdba610156da964f4b2581" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LABEL_TYPE</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>DIM</declname>
            <defname>DIM</defname>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::readSubarray</definition>
        <argsstring>(const graph::ExplicitLabels&lt; DIM, LABEL_TYPE &gt; &amp;labels, const COORD &amp;beginCoord, const COORD &amp;endCoord, marray::View&lt; LABEL_TYPE &gt; &amp;subarray)</argsstring>
        <name>readSubarray</name>
        <param>
          <type>const <ref refid="classnifty_1_1graph_1_1ExplicitLabels" kindref="compound">graph::ExplicitLabels</ref>&lt; DIM, LABEL_TYPE &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; LABEL_TYPE &gt; &amp;</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_labels.hxx" line="94" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_labels.hxx" bodystart="94" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a32fca5240a87f007e50dac403671cfa0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LABEL_TYPE</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>DIM</declname>
            <defname>DIM</defname>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::readSubarray</definition>
        <argsstring>(const graph::Hdf5Labels&lt; DIM, LABEL_TYPE &gt; &amp;labels, const COORD &amp;beginCoord, const COORD &amp;endCoord, marray::View&lt; LABEL_TYPE &gt; &amp;subarray)</argsstring>
        <name>readSubarray</name>
        <param>
          <type>const <ref refid="classnifty_1_1graph_1_1Hdf5Labels" kindref="compound">graph::Hdf5Labels</ref>&lt; DIM, LABEL_TYPE &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; LABEL_TYPE &gt; &amp;</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_labels_hdf5.hxx" line="75" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_labels_hdf5.hxx" bodystart="75" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a8b0e46da1e0ed94de12c1ea0b89a07d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::readSubarray</definition>
        <argsstring>(const hdf5::Hdf5Array&lt; T &gt; &amp;array, const COORD &amp;beginCoord, const COORD &amp;endCoord, marray::View&lt; T &gt; &amp;subarray)</argsstring>
        <name>readSubarray</name>
        <param>
          <type>const hdf5::Hdf5Array&lt; T &gt; &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/hdf5/hdf5_array.hxx" line="437" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/hdf5/hdf5_array.hxx" bodystart="437" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a46fa9e03448a433ba5ca485435b540b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::writeSubarray</definition>
        <argsstring>(hdf5::Hdf5Array&lt; T &gt; &amp;array, const COORD &amp;beginCoord, const COORD &amp;endCoord, const marray::View&lt; T &gt; &amp;subarray)</argsstring>
        <name>writeSubarray</name>
        <param>
          <type>hdf5::Hdf5Array&lt; T &gt; &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type>const <ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/hdf5/hdf5_array.hxx" line="447" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/hdf5/hdf5_array.hxx" bodystart="447" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a562317b7926e706fa893b03ad3bfdfda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::readSubarrayLocked</definition>
        <argsstring>(const hdf5::Hdf5Array&lt; T &gt; &amp;array, const COORD &amp;beginCoord, const COORD &amp;endCoord, marray::View&lt; T &gt; &amp;subarray)</argsstring>
        <name>readSubarrayLocked</name>
        <param>
          <type>const hdf5::Hdf5Array&lt; T &gt; &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/hdf5/hdf5_array.hxx" line="457" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/hdf5/hdf5_array.hxx" bodystart="457" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a102fca55b5880c5b398205f0b438fbfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::writeSubarrayLocked</definition>
        <argsstring>(hdf5::Hdf5Array&lt; T &gt; &amp;array, const COORD &amp;beginCoord, const COORD &amp;endCoord, const marray::View&lt; T &gt; &amp;subarray)</argsstring>
        <name>writeSubarrayLocked</name>
        <param>
          <type>hdf5::Hdf5Array&lt; T &gt; &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type>const <ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/hdf5/hdf5_array.hxx" line="467" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/hdf5/hdf5_array.hxx" bodystart="467" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1ab1a49786aa1d421ff8801c6659ada142" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::readSubarray</definition>
        <argsstring>(const marray::View&lt; T &gt; array, const COORD &amp;beginCoord, const COORD &amp;endCoord, marray::View&lt; T &gt; &amp;subarray)</argsstring>
        <name>readSubarray</name>
        <param>
          <type>const <ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/marray/marray.hxx" line="18" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/marray/marray.hxx" bodystart="18" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1ace36c8be6273f83864c4b1b261eb25d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::writeSubarray</definition>
        <argsstring>(marray::View&lt; T &gt; array, const COORD &amp;beginCoord, const COORD &amp;endCoord, const marray::View&lt; T &gt; &amp;data)</argsstring>
        <name>writeSubarray</name>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type>const <ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/marray/marray.hxx" line="34" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/marray/marray.hxx" bodystart="34" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1ad9c06ed1bf5a27481583971a28bf9142" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::readSubarrayLocked</definition>
        <argsstring>(const marray::View&lt; T &gt; array, const COORD &amp;beginCoord, const COORD &amp;endCoord, marray::View&lt; T &gt; &amp;subarray)</argsstring>
        <name>readSubarrayLocked</name>
        <param>
          <type>const <ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/marray/marray.hxx" line="66" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/marray/marray.hxx" bodystart="66" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a0d4355b32819ca638b88af283797bc92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class COORD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::writeSubarrayLocked</definition>
        <argsstring>(marray::View&lt; T &gt; array, const COORD &amp;beginCoord, const COORD &amp;endCoord, const marray::View&lt; T &gt; &amp;data)</argsstring>
        <name>writeSubarrayLocked</name>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>beginCoord</declname>
        </param>
        <param>
          <type>const COORD &amp;</type>
          <declname>endCoord</declname>
        </param>
        <param>
          <type>const <ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/marray/marray.hxx" line="76" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/marray/marray.hxx" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1ac5e8d4b06486a3d603cdbb7314f8dd75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>DIM</declname>
            <defname>DIM</defname>
          </param>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class BLOCK_SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::parallelForEachBlock</definition>
        <argsstring>(parallel::ThreadPool &amp;threadpool, const array::StaticArray&lt; SHAPE_T, DIM &gt; &amp;shape, const array::StaticArray&lt; BLOCK_SHAPE_T, DIM &gt; &amp;blockShape, F &amp;&amp;f)</argsstring>
        <name>parallelForEachBlock</name>
        <param>
          <type><ref refid="classnifty_1_1parallel_1_1ThreadPool" kindref="compound">parallel::ThreadPool</ref> &amp;</type>
          <declname>threadpool</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, DIM &gt; &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; BLOCK_SHAPE_T, DIM &gt; &amp;</type>
          <declname>blockShape</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_block.hxx" line="16" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_block.hxx" bodystart="16" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1af942eef6747790a4f8d6868b1f95c3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>DIM</declname>
            <defname>DIM</defname>
          </param>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class BLOCK_SHAPE_T</type>
          </param>
          <param>
            <type>class OVERLAP_SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::parallelForEachBlockWithOverlap</definition>
        <argsstring>(parallel::ThreadPool &amp;threadpool, const array::StaticArray&lt; SHAPE_T, DIM &gt; &amp;shape, const array::StaticArray&lt; BLOCK_SHAPE_T, DIM &gt; &amp;blockShape, const array::StaticArray&lt; OVERLAP_SHAPE_T, DIM &gt; &amp;overlapBegin, const array::StaticArray&lt; OVERLAP_SHAPE_T, DIM &gt; &amp;overlapEnd, F &amp;&amp;f)</argsstring>
        <name>parallelForEachBlockWithOverlap</name>
        <param>
          <type><ref refid="classnifty_1_1parallel_1_1ThreadPool" kindref="compound">parallel::ThreadPool</ref> &amp;</type>
          <declname>threadpool</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, DIM &gt; &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; BLOCK_SHAPE_T, DIM &gt; &amp;</type>
          <declname>blockShape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; OVERLAP_SHAPE_T, DIM &gt; &amp;</type>
          <declname>overlapBegin</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; OVERLAP_SHAPE_T, DIM &gt; &amp;</type>
          <declname>overlapEnd</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_block.hxx" line="43" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_block.hxx" bodystart="43" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a2f0a7c111de3217482567849aecac6b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinateImpl</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, 1 &gt; &amp;shape, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinateImpl</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 1 &gt; &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="23" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="23" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1ade4cdd4e464112baf195beda9d662a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinateImpl</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, 1 &gt; &amp;shapeBegin, const array::StaticArray&lt; SHAPE_T, 1 &gt; &amp;shapeEnd, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinateImpl</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 1 &gt; &amp;</type>
          <declname>shapeBegin</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 1 &gt; &amp;</type>
          <declname>shapeEnd</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="35" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="35" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1ad2a256c13ab9dfa6bdd0a1d32ecf49fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinateImpl</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, 2 &gt; &amp;shape, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinateImpl</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 2 &gt; &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="48" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="48" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a4d10b12dbebf89f9ad6f38e644547778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinateImpl</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, 2 &gt; &amp;shapeBegin, const array::StaticArray&lt; SHAPE_T, 2 &gt; &amp;shapeEnd, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinateImpl</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 2 &gt; &amp;</type>
          <declname>shapeBegin</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 2 &gt; &amp;</type>
          <declname>shapeEnd</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="69" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="69" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1ade659d2c15de2ffed10783e9f1602e59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinateImpl</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, 3 &gt; &amp;shape, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinateImpl</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 3 &gt; &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="91" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="91" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a0d8157dba40263adc2077ffac352ff76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinateImpl</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, 3 &gt; &amp;shapeBegin, const array::StaticArray&lt; SHAPE_T, 3 &gt; &amp;shapeEnd, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinateImpl</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 3 &gt; &amp;</type>
          <declname>shapeBegin</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 3 &gt; &amp;</type>
          <declname>shapeEnd</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="114" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="114" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a581fe3925f44b138d984f032f007ea30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinateImpl</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, 4 &gt; &amp;shape, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinateImpl</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 4 &gt; &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="140" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="140" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1aad393bfeb324d5a484bb50a2dd0ac9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinateImpl</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, 4 &gt; &amp;shapeBegin, const array::StaticArray&lt; SHAPE_T, 4 &gt; &amp;shapeEnd, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinateImpl</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 4 &gt; &amp;</type>
          <declname>shapeBegin</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, 4 &gt; &amp;</type>
          <declname>shapeEnd</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="166" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="166" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a81df2669bba7acc0ad9a253669a28ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>DIMENSIONS</declname>
            <defname>DIMENSIONS</defname>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinate</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, DIMENSIONS &gt; &amp;shape, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinate</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, DIMENSIONS &gt; &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="192" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a757aec65ec994397f40a807952edd219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>DIMENSIONS</declname>
            <defname>DIMENSIONS</defname>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::forEachCoordinate</definition>
        <argsstring>(const array::StaticArray&lt; SHAPE_T, DIMENSIONS &gt; &amp;shapeBegin, const array::StaticArray&lt; SHAPE_T, DIMENSIONS &gt; &amp;shapeEnd, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>forEachCoordinate</name>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, DIMENSIONS &gt; &amp;</type>
          <declname>shapeBegin</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, DIMENSIONS &gt; &amp;</type>
          <declname>shapeEnd</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="201" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="201" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a34595523082dffa3f21d4b40cc13cfae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SHAPE_T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>DIM</declname>
            <defname>DIM</defname>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::parallelForEachCoordinate</definition>
        <argsstring>(nifty::parallel::ThreadPool &amp;threadpool, const array::StaticArray&lt; SHAPE_T, DIM &gt; &amp;shape, F &amp;&amp;f, bool firstCoordinateMajorOrder=true)</argsstring>
        <name>parallelForEachCoordinate</name>
        <param>
          <type><ref refid="classnifty_1_1parallel_1_1ThreadPool" kindref="compound">nifty::parallel::ThreadPool</ref> &amp;</type>
          <declname>threadpool</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenifty_1_1array_1a683f151f19c851754e0c6d55ed16a0c2" kindref="member">array::StaticArray</ref>&lt; SHAPE_T, DIM &gt; &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCoordinateMajorOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" line="214" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/for_each_coordinate.hxx" bodystart="214" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a2c8c36d25cd0360146bec83f981de045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::makeDense</definition>
        <argsstring>(marray::View&lt; T &gt; &amp;data)</argsstring>
        <name>makeDense</name>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/make_dense.hxx" line="12" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/make_dense.hxx" bodystart="12" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1a0fba3a0bb159e35a054e7ea8f258c4c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::tools::makeDense</definition>
        <argsstring>(const marray::View&lt; T &gt; &amp;dataIn, marray::View&lt; T &gt; &amp;dataOut)</argsstring>
        <name>makeDense</name>
        <param>
          <type>const <ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>dataIn</declname>
        </param>
        <param>
          <type><ref refid="classandres_1_1View" kindref="compound">marray::View</ref>&lt; T &gt; &amp;</type>
          <declname>dataOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/make_dense.hxx" line="32" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/make_dense.hxx" bodystart="32" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1tools_1abefcf35b4e6658bb8179a41a2de97d9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T nifty::tools::makeFinite</definition>
        <argsstring>(const T &amp;val, const U &amp;replaceVal)</argsstring>
        <name>makeFinite</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const U &amp;</type>
          <declname>replaceVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/tools/make_finite.hxx" line="13" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/tools/make_finite.hxx" bodystart="13" bodyend="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_labels.hxx" line="91" column="1"/>
  </compounddef>
</doxygen>

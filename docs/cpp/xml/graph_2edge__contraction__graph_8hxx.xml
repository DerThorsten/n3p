<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="graph_2edge__contraction__graph_8hxx" kind="file" language="C++">
    <compoundname>edge_contraction_graph.hxx</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">type_traits</includes>
    <includes refid="boost__flat__set_8hxx" local="no">nifty/container/boost_flat_set.hxx</includes>
    <includes refid="undirected__graph__base_8hxx" local="yes">nifty/graph/undirected_graph_base.hxx</includes>
    <includes refid="flat__set_8hxx" local="yes">nifty/container/flat_set.hxx</includes>
    <includes refid="runtime__check_8hxx" local="yes">nifty/tools/runtime_check.hxx</includes>
    <includes refid="ufd_8hxx" local="yes">nifty/ufd/ufd.hxx</includes>
    <includes refid="adjacency_8hxx" local="yes">nifty/graph/detail/adjacency.hxx</includes>
    <includedby refid="dual__cluster__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/dual_cluster_policy.hxx</includedby>
    <includedby refid="edge__weighted__cluster__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/edge_weighted_cluster_policy.hxx</includedby>
    <includedby refid="fixation__cluster__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/fixation_cluster_policy.hxx</includedby>
    <includedby refid="lifted__agglo__cluster__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/lifted_agglo_cluster_policy.hxx</includedby>
    <includedby refid="lifted__edge__weighted__cluster__policy2_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/lifted_edge_weighted_cluster_policy2.hxx</includedby>
    <includedby refid="lifted__graph__edge__weighted__cluster__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/lifted_graph_edge_weighted_cluster_policy.hxx</includedby>
    <includedby refid="mala__cluster__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/mala_cluster_policy.hxx</includedby>
    <includedby refid="minimum__node__size__cluster__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/minimum_node_size_cluster_policy.hxx</includedby>
    <includedby refid="new__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/new_policy.hxx</includedby>
    <includedby refid="node__and__edge__weighted__cluster__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/node_and_edge_weighted_cluster_policy.hxx</includedby>
    <includedby refid="probabilistic__lifted__cluster__policy_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/probabilistic_lifted_cluster_policy.hxx</includedby>
    <includedby refid="cc__fusion__move__based__impl_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/common/cc_fusion_move_based_impl.hxx</includedby>
    <includedby refid="lifted__twocut__kernighan__lin_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/detail/lifted_twocut_kernighan_lin.hxx</includedby>
    <includedby refid="lifted__multicut_2fusion__move__based_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/fusion_move_based.hxx</includedby>
    <includedby refid="lifted__multicut__andres__greedy__additive_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_andres_greedy_additive.hxx</includedby>
    <includedby refid="lifted__multicut__andres__kernighan__lin_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_andres_kernighan_lin.hxx</includedby>
    <includedby refid="lifted__multicut__greedy__additive_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_greedy_additive.hxx</includedby>
    <includedby refid="lifted__multicut__kernighan__lin_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_kernighan_lin.hxx</includedby>
    <includedby refid="mincut__greedy__additive_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/mincut/mincut_greedy_additive.hxx</includedby>
    <includedby refid="cgc_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/multicut/cgc.hxx</includedby>
    <includedby refid="multicut__greedy__additive_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/opt/multicut/multicut_greedy_additive.hxx</includedby>
    <includedby refid="python_2graph_2edge__contraction__graph_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/python/graph/edge_contraction_graph.hxx</includedby>
    <incdepgraph>
      <node id="1513">
        <label>nifty/tools/const_iterator_range.hxx</label>
        <link refid="const__iterator__range_8hxx"/>
      </node>
      <node id="1487">
        <label>functional</label>
      </node>
      <node id="1500">
        <label>limits</label>
      </node>
      <node id="1504">
        <label>iterator</label>
      </node>
      <node id="1511">
        <label>cstdint</label>
      </node>
      <node id="1486">
        <label>/home/tbeier/src/nifty/include/nifty/graph/edge_contraction_graph.hxx</label>
        <link refid="graph_2edge__contraction__graph_8hxx"/>
        <childnode refid="1487" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1519" relation="include">
        </childnode>
      </node>
      <node id="1512">
        <label>cmath</label>
      </node>
      <node id="1497">
        <label>cassert</label>
      </node>
      <node id="1492">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="1499">
        <label>stdexcept</label>
      </node>
      <node id="1509">
        <label>numeric</label>
      </node>
      <node id="1491">
        <label>nifty/graph/undirected_graph_base.hxx</label>
        <link refid="undirected__graph__base_8hxx"/>
        <childnode refid="1492" relation="include">
        </childnode>
        <childnode refid="1493" relation="include">
        </childnode>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1513" relation="include">
        </childnode>
      </node>
      <node id="1519">
        <label>nifty/graph/detail/adjacency.hxx</label>
        <link refid="adjacency_8hxx"/>
      </node>
      <node id="1501">
        <label>string</label>
      </node>
      <node id="1518">
        <label>map</label>
      </node>
      <node id="1496">
        <label>nifty/marray/andres/marray.hxx</label>
        <link refid="andres_2marray_8hxx"/>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1501" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
        <childnode refid="1508" relation="include">
        </childnode>
        <childnode refid="1509" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
      </node>
      <node id="1517">
        <label>nifty/ufd/ufd.hxx</label>
        <link refid="ufd_8hxx"/>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1518" relation="include">
        </childnode>
      </node>
      <node id="1490">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="1514">
        <label>nifty/container/flat_set.hxx</label>
        <link refid="flat__set_8hxx"/>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1515" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
      </node>
      <node id="1505">
        <label>vector</label>
      </node>
      <node id="1493">
        <label>nifty/graph/graph_tags.hxx</label>
        <link refid="graph__tags_8hxx"/>
      </node>
      <node id="1489">
        <label>nifty/container/boost_flat_set.hxx</label>
        <link refid="boost__flat__set_8hxx"/>
        <childnode refid="1490" relation="include">
        </childnode>
      </node>
      <node id="1516">
        <label>utility</label>
      </node>
      <node id="1502">
        <label>sstream</label>
      </node>
      <node id="1510">
        <label>nifty/tools/runtime_check.hxx</label>
        <link refid="runtime__check_8hxx"/>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
      </node>
      <node id="1494">
        <label>nifty/graph/graph_maps.hxx</label>
        <link refid="graph__maps_8hxx"/>
        <childnode refid="1495" relation="include">
        </childnode>
      </node>
      <node id="1507">
        <label>iostream</label>
      </node>
      <node id="1498">
        <label>cstddef</label>
      </node>
      <node id="1495">
        <label>nifty/marray/marray.hxx</label>
        <link refid="marray_8hxx"/>
        <childnode refid="1496" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
      </node>
      <node id="1488">
        <label>type_traits</label>
      </node>
      <node id="1506">
        <label>set</label>
      </node>
      <node id="1515">
        <label>algorithm</label>
      </node>
      <node id="1503">
        <label>cstring</label>
      </node>
      <node id="1508">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1543">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/fusion_move.hxx</label>
        <link refid="lifted__multicut_2fusion__move_8hxx"/>
        <childnode refid="1539" relation="include">
        </childnode>
      </node>
      <node id="1531">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/node_and_edge_weighted_cluster_policy.hxx</label>
        <link refid="node__and__edge__weighted__cluster__policy_8hxx"/>
      </node>
      <node id="1545">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/multicut/cgc.hxx</label>
        <link refid="cgc_8hxx"/>
      </node>
      <node id="1549">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/multicut/fusion_move_based.hxx</label>
        <link refid="multicut_2fusion__move__based_8hxx"/>
      </node>
      <node id="1536">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/detail/lifted_twocut_kernighan_lin.hxx</label>
        <link refid="lifted__twocut__kernighan__lin_8hxx"/>
        <childnode refid="1537" relation="include">
        </childnode>
      </node>
      <node id="1544">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/mincut/mincut_greedy_additive.hxx</label>
        <link refid="mincut__greedy__additive_8hxx"/>
      </node>
      <node id="1537">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_kernighan_lin.hxx</label>
        <link refid="lifted__multicut__kernighan__lin_8hxx"/>
        <childnode refid="1538" relation="include">
        </childnode>
      </node>
      <node id="1520">
        <label>/home/tbeier/src/nifty/include/nifty/graph/edge_contraction_graph.hxx</label>
        <link refid="graph_2edge__contraction__graph_8hxx"/>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1529" relation="include">
        </childnode>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1532" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
      </node>
      <node id="1522">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/edge_weighted_cluster_policy.hxx</label>
        <link refid="edge__weighted__cluster__policy_8hxx"/>
      </node>
      <node id="1546">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/multicut/multicut_greedy_additive.hxx</label>
        <link refid="multicut__greedy__additive_8hxx"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1548" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
      </node>
      <node id="1525">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/lifted_edge_weighted_cluster_policy2.hxx</label>
        <link refid="lifted__edge__weighted__cluster__policy2_8hxx"/>
      </node>
      <node id="1527">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_graph_features.hxx</label>
        <link refid="lifted__graph__features_8hxx"/>
      </node>
      <node id="1528">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/mala_cluster_policy.hxx</label>
        <link refid="mala__cluster__policy_8hxx"/>
      </node>
      <node id="1535">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/multicut/cc_fusion_move_based.hxx</label>
        <link refid="cc__fusion__move__based_8hxx"/>
      </node>
      <node id="1551">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/edge_contraction_graph.hxx</label>
        <link refid="python_2graph_2edge__contraction__graph_8hxx"/>
        <childnode refid="1552" relation="include">
        </childnode>
      </node>
      <node id="1542">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_greedy_additive.hxx</label>
        <link refid="lifted__multicut__greedy__additive_8hxx"/>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1538" relation="include">
        </childnode>
      </node>
      <node id="1530">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/new_policy.hxx</label>
        <link refid="new__policy_8hxx"/>
      </node>
      <node id="1538">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_mp.hxx</label>
        <link refid="lifted__multicut__mp_8hxx"/>
      </node>
      <node id="1552">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/opt/common/export_solver_factory.hxx</label>
        <link refid="export__solver__factory_8hxx"/>
      </node>
      <node id="1526">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/lifted_graph_edge_weighted_cluster_policy.hxx</label>
        <link refid="lifted__graph__edge__weighted__cluster__policy_8hxx"/>
        <childnode refid="1527" relation="include">
        </childnode>
      </node>
      <node id="1521">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/dual_cluster_policy.hxx</label>
        <link refid="dual__cluster__policy_8hxx"/>
      </node>
      <node id="1523">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/fixation_cluster_policy.hxx</label>
        <link refid="fixation__cluster__policy_8hxx"/>
      </node>
      <node id="1532">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/probabilistic_lifted_cluster_policy.hxx</label>
        <link refid="probabilistic__lifted__cluster__policy_8hxx"/>
      </node>
      <node id="1550">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/multicut/proposal_generators/greedy_additive_proposals.hxx</label>
        <link refid="greedy__additive__proposals_8hxx"/>
      </node>
      <node id="1533">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/common/cc_fusion_move_based_impl.hxx</label>
        <link refid="cc__fusion__move__based__impl_8hxx"/>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
      </node>
      <node id="1539">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/fusion_move_based.hxx</label>
        <link refid="lifted__multicut_2fusion__move__based_8hxx"/>
      </node>
      <node id="1529">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/minimum_node_size_cluster_policy.hxx</label>
        <link refid="minimum__node__size__cluster__policy_8hxx"/>
      </node>
      <node id="1540">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_andres_greedy_additive.hxx</label>
        <link refid="lifted__multicut__andres__greedy__additive_8hxx"/>
      </node>
      <node id="1541">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_andres_kernighan_lin.hxx</label>
        <link refid="lifted__multicut__andres__kernighan__lin_8hxx"/>
      </node>
      <node id="1534">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/mincut/mincut_cc_fusion_move_based.hxx</label>
        <link refid="mincut__cc__fusion__move__based_8hxx"/>
      </node>
      <node id="1547">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/common/proposal_generators/greedy_additive_multicut_proposal_generator.hxx</label>
        <link refid="greedy__additive__multicut__proposal__generator_8hxx"/>
      </node>
      <node id="1524">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/lifted_agglo_cluster_policy.hxx</label>
        <link refid="lifted__agglo__cluster__policy_8hxx"/>
      </node>
      <node id="1548">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/multicut/fusion_move.hxx</label>
        <link refid="multicut_2fusion__move_8hxx"/>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classnifty_1_1graph_1_1EdgeContractionGraph" prot="public">nifty::graph::EdgeContractionGraph</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets" prot="public">nifty::graph::EdgeContractionGraphWithSets</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1FlexibleCallback" prot="public">nifty::graph::FlexibleCallback</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper" prot="public">nifty::graph::EdgeContractionGraphWithSetsHelper</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets" prot="public">nifty::graph::EdgeContractionGraphWithSets</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1EdgeContractionGraph" prot="public">nifty::graph::EdgeContractionGraph</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1EdgeContractionGraph_1_1AdjacencyIterRange" prot="public">nifty::graph::EdgeContractionGraph::AdjacencyIterRange</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph">nifty::graph</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="boost__flat__set_8hxx" kindref="compound">nifty/container/boost_flat_set.hxx</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="undirected__graph__base_8hxx" kindref="compound">nifty/graph/undirected_graph_base.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="flat__set_8hxx" kindref="compound">nifty/container/flat_set.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="runtime__check_8hxx" kindref="compound">nifty/tools/runtime_check.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ufd_8hxx" kindref="compound">nifty/ufd/ufd.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="adjacency_8hxx" kindref="compound">nifty/graph/detail/adjacency.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;nifty/graph/detail/contiguous_indices.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">graph{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="20" refid="classnifty_1_1graph_1_1EdgeContractionGraph" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OUTER_CALLBACK,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SET&gt;</highlight></codeline>
<codeline lineno="23" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets" kindref="compound">EdgeContractionGraphWithSets</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structnifty_1_1graph_1_1FlexibleCallback" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnifty_1_1graph_1_1FlexibleCallback" kindref="compound">FlexibleCallback</ref>{</highlight></codeline>
<codeline lineno="27" refid="structnifty_1_1graph_1_1FlexibleCallback_1add51f6940731aa31df4678f23c8ca664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1add51f6940731aa31df4678f23c8ca664" kindref="member">contractEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edgeToContract){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a256c9d832090fe82b2f7fdb9f6e07920" kindref="member">contractEdgeCallback</ref>){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a256c9d832090fe82b2f7fdb9f6e07920" kindref="member">contractEdgeCallback</ref>(edgeToContract);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structnifty_1_1graph_1_1FlexibleCallback_1aac9ed0c77a9fc3a45381c31394a757ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1aac9ed0c77a9fc3a45381c31394a757ea" kindref="member">mergeNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>aliveNode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>deadNode){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a4c4b807ea5750a1f894b7e9a6c7598fa" kindref="member">mergeNodesCallback</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a4c4b807ea5750a1f894b7e9a6c7598fa" kindref="member">mergeNodesCallback</ref>(aliveNode,<sp/>deadNode);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structnifty_1_1graph_1_1FlexibleCallback_1a3431adaf5f74774a1527f1a477872b31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a3431adaf5f74774a1527f1a477872b31" kindref="member">mergeEdges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>aliveEdge,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>deadEdge){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structnifty_1_1graph_1_1FlexibleCallback_1af2693627ec37eef058bc9b4e22581e75" kindref="member">mergeEdgesCallback</ref>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1af2693627ec37eef058bc9b4e22581e75" kindref="member">mergeEdgesCallback</ref>(aliveEdge,<sp/>deadEdge);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structnifty_1_1graph_1_1FlexibleCallback_1aee1f9369e0f2d4dafddf5fc47c45b002" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1aee1f9369e0f2d4dafddf5fc47c45b002" kindref="member">contractEdgeDone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edgeToContract){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a57ddb7dd27b885a94ee81526db535ea7" kindref="member">contractEdgeDoneCallback</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a57ddb7dd27b885a94ee81526db535ea7" kindref="member">contractEdgeDoneCallback</ref>(edgeToContract);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47" refid="structnifty_1_1graph_1_1FlexibleCallback_1a256c9d832090fe82b2f7fdb9f6e07920" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;void(uint64_t)<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a256c9d832090fe82b2f7fdb9f6e07920" kindref="member">contractEdgeCallback</ref>;</highlight></codeline>
<codeline lineno="48" refid="structnifty_1_1graph_1_1FlexibleCallback_1a4c4b807ea5750a1f894b7e9a6c7598fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;void(uint64_t,uint64_t)<sp/>&gt;<sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a4c4b807ea5750a1f894b7e9a6c7598fa" kindref="member">mergeNodesCallback</ref>;</highlight></codeline>
<codeline lineno="49" refid="structnifty_1_1graph_1_1FlexibleCallback_1af2693627ec37eef058bc9b4e22581e75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;void(uint64_t,uint64_t)<sp/>&gt;<sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1af2693627ec37eef058bc9b4e22581e75" kindref="member">mergeEdgesCallback</ref>;</highlight></codeline>
<codeline lineno="50" refid="structnifty_1_1graph_1_1FlexibleCallback_1a57ddb7dd27b885a94ee81526db535ea7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;void(uint64_t)<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a57ddb7dd27b885a94ee81526db535ea7" kindref="member">contractEdgeDoneCallback</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\cond<sp/>SUPPRESS_DOXYGEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail_edge_contraction_graph{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OUTER_CALLBACK,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SET&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">InnerCallback{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>GRAPH<sp/>GraphType;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OUTER_CALLBACK<sp/>OuterCallbackType;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SET<sp/>SetType;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/>g,<sp/>OuterCallbackType<sp/>&amp;<sp/>outerCallback)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>graph_(g),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerCallback_(outerCallback){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;initSets();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initSets(){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgesSet_.clear();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodesSet_.clear();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edge<sp/>:<sp/>graph_.edges()){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgesSet_.insert(edge);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>:<sp/>graph_.nodes()){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodesSet_.insert(node);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset(){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;initSets();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerCallback_.reset();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1add51f6940731aa31df4678f23c8ca664" kindref="member">contractEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edgeToContract){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(edgesSet_.find(edgeToContract)!=edgesSet_.end());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgesSet_.erase(edgeToContract);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerCallback_.contractEdge(edgeToContract);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1aac9ed0c77a9fc3a45381c31394a757ea" kindref="member">mergeNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>aliveNode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>deadNode){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(nodesSet_.find(aliveNode)!=nodesSet_.end());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(nodesSet_.find(deadNode)!=nodesSet_.end());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodesSet_.erase(deadNode);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerCallback_.mergeNodes(aliveNode,<sp/>deadNode);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1a3431adaf5f74774a1527f1a477872b31" kindref="member">mergeEdges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>aliveEdge,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>deadEdge){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(edgesSet_.find(aliveEdge)!=nodesSet_.end());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(edgesSet_.find(deadEdge)!=nodesSet_.end());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgesSet_.erase(deadEdge);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerCallback_.mergeEdges(aliveEdge,<sp/>deadEdge);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1aee1f9369e0f2d4dafddf5fc47c45b002" kindref="member">contractEdgeDone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edgeToContract){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerCallback_.contractEdgeDone(edgeToContract);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//private:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/>graph_;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OuterCallbackType<sp/>&amp;<sp/>outerCallback_;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetType<sp/>nodesSet_;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetType<sp/>edgesSet_;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>detail_edge_contraction_graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\endcond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OUTER_CALLBACK,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SET&gt;</highlight></codeline>
<codeline lineno="120" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper" kindref="compound">EdgeContractionGraphWithSetsHelper</ref>{</highlight></codeline>
<codeline lineno="121" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a7f5226bf25f277d906a526db55556cdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>GRAPH<sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a7f5226bf25f277d906a526db55556cdf" kindref="member">GraphType</ref>;</highlight></codeline>
<codeline lineno="122" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a3e0b97cbc8de91c57e3dc83860edda69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OUTER_CALLBACK<sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a3e0b97cbc8de91c57e3dc83860edda69" kindref="member">OuterCallbackType</ref>;</highlight></codeline>
<codeline lineno="123" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1acc1b924a2b02648491b614c8d69ca9fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SET<sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1acc1b924a2b02648491b614c8d69ca9fb" kindref="member">SetType</ref>;</highlight></codeline>
<codeline lineno="124" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a7b0578f3509ed396dd72b029e4e8b105" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets" kindref="compound">EdgeContractionGraphWithSets&lt;GraphType, OuterCallbackType, SET&gt;</ref><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a7b0578f3509ed396dd72b029e4e8b105" kindref="member">SelfType</ref>;</highlight></codeline>
<codeline lineno="125" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a04b455cc805d998b02d24ee3a11523ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail_edge_contraction_graph::InnerCallback&lt;GraphType,<sp/>OuterCallbackType,<sp/>SetType&gt;<sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a04b455cc805d998b02d24ee3a11523ec" kindref="member">InnerCallbackType</ref>;</highlight></codeline>
<codeline lineno="126" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1add695ccd6756ec7e79ce2b4e6fceb5fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, InnerCallbackType &gt;</ref><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1add695ccd6756ec7e79ce2b4e6fceb5fc" kindref="member">CGraphType</ref>;</highlight></codeline>
<codeline lineno="127" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a9d9969291ab3cf558c7ad2f00a2c189d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a447212f5ced0c4ef4d304e8b89f4f200" kindref="member">CGraphType::AdjacencyIter</ref><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a9d9969291ab3cf558c7ad2f00a2c189d" kindref="member">AdjacencyIter</ref>;</highlight></codeline>
<codeline lineno="128" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a2378dd6c8e82012a04236593971ac4e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ad57e807f7df20892c7bbbb9b53d3aa08" kindref="member">CGraphType::EdgeStorage</ref><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a2378dd6c8e82012a04236593971ac4e7" kindref="member">EdgeStorage</ref>;</highlight></codeline>
<codeline lineno="129" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a254e8886638750a06342b813be34344d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ufd_1_1Ufd" kindref="compound">CGraphType::NodeUfdType</ref><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a254e8886638750a06342b813be34344d" kindref="member">NodeUfdType</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1ab619625636cb861e740f216ea946fe06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SetType::const_iterator<sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1ab619625636cb861e740f216ea946fe06" kindref="member">EdgeIter</ref>;</highlight></codeline>
<codeline lineno="132" refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a6d07b232c0af5bf7170edb2eea02a8fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SetType::const_iterator<sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a6d07b232c0af5bf7170edb2eea02a8fb" kindref="member">NodeIter</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OUTER_CALLBACK,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SET&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets" kindref="compound">EdgeContractionGraphWithSets</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraphBase" kindref="compound">UndirectedGraphBase</ref>&lt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgeContractionGraphWithSets&lt;GRAPH,<sp/>OUTER_CALLBACK,<sp/>SET&gt;,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>EdgeContractionGraphWithSetsHelper&lt;GRAPH,<sp/>OUTER_CALLBACK,<sp/>SET&gt;::NodeIter,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>EdgeContractionGraphWithSetsHelper&lt;GRAPH,<sp/>OUTER_CALLBACK,<sp/>SET&gt;::EdgeIter,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>EdgeContractionGraphWithSetsHelper&lt;GRAPH,<sp/>OUTER_CALLBACK,<sp/>SET&gt;::AdjacencyIter</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper" kindref="compound">EdgeContractionGraphWithSetsHelper&lt;GRAPH,OUTER_CALLBACK,SET&gt;</ref><sp/>TypeHelper;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeHelper::SelfType<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets" kindref="compound">SelfType</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeHelper::CGraphType<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">CGraphType</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeHelper::EdgeStorage<sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a2378dd6c8e82012a04236593971ac4e7" kindref="member">EdgeStorage</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1abadbbebcd10e37a1a3f59bb967accdf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a7f5226bf25f277d906a526db55556cdf" kindref="member">TypeHelper::GraphType</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1abadbbebcd10e37a1a3f59bb967accdf0" kindref="member">GraphType</ref>;</highlight></codeline>
<codeline lineno="154" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a2f741cfabfa1fb4c5bfc75df557c1d12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a3e0b97cbc8de91c57e3dc83860edda69" kindref="member">TypeHelper::OuterCallbackType</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a2f741cfabfa1fb4c5bfc75df557c1d12" kindref="member">OuterCallbackType</ref>;</highlight></codeline>
<codeline lineno="155" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aeb3c8839879c1e126ceaca6bdfdff008" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1acc1b924a2b02648491b614c8d69ca9fb" kindref="member">TypeHelper::SetType</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aeb3c8839879c1e126ceaca6bdfdff008" kindref="member">SetType</ref>;</highlight></codeline>
<codeline lineno="156" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ae340ffb867bc1eb19b139e879174607e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ufd_1_1Ufd" kindref="compound">TypeHelper::NodeUfdType</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ae340ffb867bc1eb19b139e879174607e" kindref="member">NodeUfdType</ref>;</highlight></codeline>
<codeline lineno="157" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1abfc56b6e721306de50e308e7b199b18c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1ab619625636cb861e740f216ea946fe06" kindref="member">TypeHelper::EdgeIter</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1abfc56b6e721306de50e308e7b199b18c" kindref="member">EdgeIter</ref>;</highlight></codeline>
<codeline lineno="158" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1af9e889455b883d034bf708a0b5b05bee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a6d07b232c0af5bf7170edb2eea02a8fb" kindref="member">TypeHelper::NodeIter</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1af9e889455b883d034bf708a0b5b05bee" kindref="member">NodeIter</ref>;</highlight></codeline>
<codeline lineno="159" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ab4782e97223ab8ba2d207325aae693d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraphWithSetsHelper_1a9d9969291ab3cf558c7ad2f00a2c189d" kindref="member">TypeHelper::AdjacencyIter</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ab4782e97223ab8ba2d207325aae693d6" kindref="member">AdjacencyIter</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a6ea951b692d5c6358003500873533f4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1SparseTag" kindref="compound">SparseTag</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a6ea951b692d5c6358003500873533f4d" kindref="member">EdgeIdTag</ref>;</highlight></codeline>
<codeline lineno="162" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a6dbcfb7d4bf82719837d809465f0ac06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1SparseTag" kindref="compound">SparseTag</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a6dbcfb7d4bf82719837d809465f0ac06" kindref="member">NodeIdTag</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a6f0b9f8843ed508f1e934aee64a129a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1SortedTag" kindref="compound">SortedTag</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a6f0b9f8843ed508f1e934aee64a129a5" kindref="member">EdgeIdOrderTag</ref>;</highlight></codeline>
<codeline lineno="165" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aacddf197fc8a2d4268d971bf026323f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1SortedTag" kindref="compound">SortedTag</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aacddf197fc8a2d4268d971bf026323f4" kindref="member">NodeIdOrderTag</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a7ccb1db6a954ebcd7d4e56b150812ca2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a7ccb1db6a954ebcd7d4e56b150812ca2" kindref="member">EdgeContractionGraphWithSets</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/>graph,<sp/>OuterCallbackType<sp/>&amp;<sp/>outerCallback)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>innerCallback_(graph,<sp/>outerCallback),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgraph_(graph,<sp/>innerCallback_){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerCallback_.initSets();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ac092ab91cc82d5d75f19cca3770c33a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeIter<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ac092ab91cc82d5d75f19cca3770c33a5" kindref="member">nodesBegin</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(innerCallback_.nodesSet_.size(),==,cgraph_.numberOfNodes());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>innerCallback_.nodesSet_.begin();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ae6b55d6c45a760b7e85e98fcbe89b5fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeIter<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ae6b55d6c45a760b7e85e98fcbe89b5fa" kindref="member">nodesEnd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(innerCallback_.nodesSet_.size(),==,cgraph_.numberOfNodes());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>innerCallback_.nodesSet_.end();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1acb3a7779de4afce4977b4cd9f2a91ccc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgeIter<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1acb3a7779de4afce4977b4cd9f2a91ccc" kindref="member">edgesBegin</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(innerCallback_.edgesSet_.size(),==,cgraph_.numberOfEdges());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>innerCallback_.edgesSet_.begin();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aca281d65d5cf3d75727cf9f21745bad6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgeIter<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aca281d65d5cf3d75727cf9f21745bad6" kindref="member">edgesEnd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(innerCallback_.edgesSet_.size(),==,cgraph_.numberOfEdges());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>innerCallback_.edgesSet_.end();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="195" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ad92d1f5c35f5bb71c1c0530f7f1cfe30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ad92d1f5c35f5bb71c1c0530f7f1cfe30" kindref="member">forEachEdge</ref>(F<sp/>&amp;&amp;<sp/>f)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edge<sp/>:<sp/>innerCallback_.edgesSet_){</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(edge);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="201" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a87a64d238e0316537b86bef06f522c2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a87a64d238e0316537b86bef06f522c2f" kindref="member">forEachNode</ref>(F<sp/>&amp;&amp;<sp/>f)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>:<sp/>innerCallback_.nodesSet_){</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(node);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="207" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1afa35da06be055f5b3b5ca45140c2a27d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1afa35da06be055f5b3b5ca45140c2a27d" kindref="member">adjacencyBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.nodesSet_.find(node)!=innerCallback_.nodesSet_.end());</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.adjacencyBegin(node);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a1d8876f14af17d956c0803d5703227af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a1d8876f14af17d956c0803d5703227af" kindref="member">adjacencyEnd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.nodesSet_.find(node)!=innerCallback_.nodesSet_.end());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.adjacencyEnd(node);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1af9d9cd7de8303720e60f85ae4370d9ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1af9d9cd7de8303720e60f85ae4370d9ac" kindref="member">adjacencyOutBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.nodesSet_.find(node)!=innerCallback_.nodesSet_.end());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.adjacencyOutBegin(node);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a0edbec99d4a3354b0f507d0f59d89c77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgeStorage<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a0edbec99d4a3354b0f507d0f59d89c77" kindref="member">uv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.edgesSet_.find(edge)!=innerCallback_.edgesSet_.end());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.uv(edge);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1abf5d1c2ca6d161d889b99aa1f845b320" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1abf5d1c2ca6d161d889b99aa1f845b320" kindref="member">u</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.edgesSet_.find(edge)!=innerCallback_.edgesSet_.end());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.u(edge);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aeeb13117bb87989a9ace9f571b73ebca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aeeb13117bb87989a9ace9f571b73ebca" kindref="member">v</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.edgesSet_.find(edge)!=innerCallback_.edgesSet_.end());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.v(edge);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a60d33d4527d49e48638a319b86cbb3d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a60d33d4527d49e48638a319b86cbb3d3" kindref="member">numberOfNodes</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(innerCallback_.nodesSet_.size(),==,cgraph_.numberOfNodes());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.numberOfNodes();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1af7424aa2b0db5ed65594cf9639495ab4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1af7424aa2b0db5ed65594cf9639495ab4" kindref="member">numberOfEdges</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(innerCallback_.edgesSet_.size(),==,cgraph_.numberOfEdges());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.numberOfEdges();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1acc75170fb074bdfeff10096cab3b9e44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1acc75170fb074bdfeff10096cab3b9e44" kindref="member">nodeIdUpperBound</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(innerCallback_.nodesSet_.size(),==,cgraph_.numberOfNodes());</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.nodeIdUpperBound();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a3ef69f446e645b4592b05d84d47951f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a3ef69f446e645b4592b05d84d47951f3" kindref="member">edgeIdUpperBound</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(innerCallback_.edgesSet_.size(),==,cgraph_.numberOfEdges());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.edgeIdUpperBound();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a75e68f303f9b241d4ffa854c65de4d50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a75e68f303f9b241d4ffa854c65de4d50" kindref="member">findEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.nodesSet_.find(u)!=innerCallback_.nodesSet_.end());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.nodesSet_.find(v)!=innerCallback_.nodesSet_.end());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.findEdge(u,<sp/>v);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aac2039e7aa273ca72a664636284e094c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1aac2039e7aa273ca72a664636284e094c" kindref="member">contractEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edgeToContract){</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.edgesSet_.find(edgeToContract)!=innerCallback_.edgesSet_.end());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgraph_.contractEdge(edgeToContract);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a26b35f687abffaf422f779bf0922f3de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a26b35f687abffaf422f779bf0922f3de" kindref="member">reset</ref>(){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgraph_.reset();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerCallback_.initSets();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a1d8c4aa00f646e178a31a38153a9c374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a1d8c4aa00f646e178a31a38153a9c374" kindref="member">baseGraph</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.baseGraph();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a365553058cdb73930265f2ee8c59fc3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a365553058cdb73930265f2ee8c59fc3b" kindref="member">findRepresentativeNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.findRepresentativeNode(node);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ac8441861738a40c90408a3d6fbdd5ecd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ac8441861738a40c90408a3d6fbdd5ecd" kindref="member">findRepresentativeNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>node){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.findRepresentativeNode(node);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1af001864ce94e2f79c123b318ba9122af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1af001864ce94e2f79c123b318ba9122af" kindref="member">findRepresentativeEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.findRepresentativeEdge(edge);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a287efe08f0cbc8824a3bf6ce525af9ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a287efe08f0cbc8824a3bf6ce525af9ae" kindref="member">findRepresentativeEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge){</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.findRepresentativeEdge(edge);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ab3800af3726fe0fb6b2b4280dd1c58c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1ab3800af3726fe0fb6b2b4280dd1c58c1" kindref="member">nodeOfDeadEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>deadEdge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(innerCallback_.edgesSet_.find(deadEdge)==innerCallback_.edgesSet_.end());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.nodeOfDeadEdge(deadEdge);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a00c248e34c7d08d44a9ef5a630c28ebc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NodeUfdType<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraphWithSets_1a00c248e34c7d08d44a9ef5a630c28ebc" kindref="member">nodeUfd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cgraph_.nodeUfd();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail_edge_contraction_graph::InnerCallback&lt;GraphType,<sp/>OuterCallbackType,<sp/>SetType&gt;<sp/>InnerCallbackType;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerCallbackType<sp/>innerCallback_;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGraphType<sp/>cgraph_;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\cond<sp/>SUPPRESS_DOXYGEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail_edge_contraction_graph{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EdgeContractionGraphEdgeUfdHelper;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH&gt;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EdgeContractionGraphEdgeUfdHelper&lt;GRAPH,<sp/>false&gt;{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgeContractionGraphEdgeUfdHelper(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GRAPH<sp/>&amp;<sp/>graph){</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;uint64_t,<sp/>uint64_t&gt;<sp/>edgeUfdMerge(uint64_t<sp/>alive,<sp/>uint64_t<sp/>dead){</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;uint64_t,<sp/>uint64_t&gt;(alive,<sp/>dead);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH&gt;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EdgeContractionGraphEdgeUfdHelper&lt;GRAPH,<sp/>true&gt;{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ufd_1_1Ufd" kindref="compound">nifty::ufd::Ufd&lt; &gt;</ref><sp/>EdgeUfdType;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgeContractionGraphEdgeUfdHelper(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GRAPH<sp/>&amp;<sp/>graph)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>edgeUfd_(graph.edgeIdUpperBound()+1){</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>findRepresentativeEdge(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edgeUfd_.find(edge);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>findRepresentativeEdge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edgeUfd_.find(edge);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;uint64_t,<sp/>uint64_t&gt;<sp/>edgeUfdMerge(uint64_t<sp/>edge1,<sp/>uint64_t<sp/>edge2){</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeUfd_.merge(edge1,<sp/>edge2);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alive<sp/>=<sp/>edgeUfd_.find(edge1);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dead<sp/>=<sp/>(alive<sp/>==<sp/>edge1<sp/>?<sp/>edge2<sp/>:<sp/>edge1);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NIFTY_CHECK(alive==edge1<sp/>||<sp/>alive==edge2,<sp/>&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NIFTY_CHECK(dead==edge1<sp/><sp/>||<sp/>dead==edge2,<sp/>&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NIFTY_CHECK(dead!=alive,<sp/>&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;uint64_t,<sp/>uint64_t&gt;(alive,<sp/>dead);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgeUfdType<sp/>edgeUfd_;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>detail_edge_contraction_graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\endcond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph</ref><sp/>:<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail_edge_contraction_graph::EdgeContractionGraphEdgeUfdHelper&lt;GRAPH,<sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="365" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a9b33be5b2975fe298604326c10df1f93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::integral_constant&lt;bool,WITH_EDGE_UFD&gt;<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a9b33be5b2975fe298604326c10df1f93" kindref="member">WithEdgeUfd</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a67f653761dbc2c203891b041aacc3f04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>GRAPH<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a67f653761dbc2c203891b041aacc3f04" kindref="member">GraphType</ref>;</highlight></codeline>
<codeline lineno="368" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a75e91e51c78d2f427a31c30dcd8996ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CALLBACK<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a75e91e51c78d2f427a31c30dcd8996ed" kindref="member">Callback</ref>;</highlight></codeline>
<codeline lineno="369" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a7ff98238621f4b534e89b1880ee77239" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ufd_1_1Ufd" kindref="compound">nifty::ufd::Ufd&lt; &gt;</ref><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a7ff98238621f4b534e89b1880ee77239" kindref="member">NodeUfdType</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail_graph::UndirectedAdjacency&lt;int64_t,int64_t,int64_t,int64_t&gt;<sp/>NodeAdjacency;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//typedef<sp/>std::set&lt;NodeAdjacency&gt;<sp/>NodeStorage;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespacenifty_1_1container_1ad9f6bbba60eac29f50d418e4c09d5c7b" kindref="member">nifty::container::BoostFlatSet &lt;NodeAdjacency&gt;</ref><sp/>NodeStorage;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ad57e807f7df20892c7bbbb9b53d3aa08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;int64_t,int64_t&gt;<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ad57e807f7df20892c7bbbb9b53d3aa08" kindref="member">EdgeStorage</ref>;</highlight></codeline>
<codeline lineno="377" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a447212f5ced0c4ef4d304e8b89f4f200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NodeStorage::const_iterator<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a447212f5ced0c4ef4d304e8b89f4f200" kindref="member">AdjacencyIter</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GraphType::<sp/>template<sp/>NodeMap&lt;NodeStorage&gt;<sp/>NodesContainer;<sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GraphType::<sp/>template<sp/>EdgeMap&lt;EdgeStorage&gt;<sp/>EdgeContainer;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/>graph,<sp/><sp/><sp/>Callback<sp/>&amp;<sp/>callback);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="structnifty_1_1graph_1_1EdgeContractionGraph_1_1AdjacencyIterRange" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnifty_1_1graph_1_1EdgeContractionGraph_1_1AdjacencyIterRange" kindref="compound">AdjacencyIterRange</ref><sp/>:<sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1tools_1_1ConstIteratorRange" kindref="compound">tools::ConstIteratorRange</ref>&lt;AdjacencyIter&gt;{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1tools_1_1ConstIteratorRange" kindref="compound">tools::ConstIteratorRange&lt;AdjacencyIter&gt;::ConstIteratorRange</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraph_1_1AdjacencyIterRange" kindref="compound">AdjacencyIterRange</ref><sp/>adjacency(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjacencyIter<sp/>adjacencyBegin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjacencyIter<sp/>adjacencyEnd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjacencyIter<sp/>adjacencyOutBegin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgeStorage<sp/>uv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>u(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>v(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>numberOfNodes()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>numberOfEdges()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>nodeIdUpperBound()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>edgeIdUpperBound()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>findEdge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1FlexibleCallback_1add51f6940731aa31df4678f23c8ca664" kindref="member">contractEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edgeToContract);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/>baseGraph()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/>graph()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>findRepresentativeNode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>findRepresentativeNode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>node);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>nodeOfDeadEdge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>deadEdge)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a3485f0d1574e28e96aab43d5e0b8c4c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NodeUfdType<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a3485f0d1574e28e96aab43d5e0b8c4c0" kindref="member">nodeUfd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeUfd_;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>relabelEdge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>deadNode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>aliveNode);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/>graph_;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Callback<sp/>&amp;<sp/>callback_;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodesContainer<sp/>nodes_;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//EdgeContainer<sp/>edges_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeUfdType<sp/>nodeUfd_;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>currentNodeNum_;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>currentEdgeNum_;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a4c8a53ef17ec713e184518364295bf01" kindref="member">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="439" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a4c8a53ef17ec713e184518364295bf01" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a4c8a53ef17ec713e184518364295bf01" kindref="member">    EdgeContractionGraph</ref>(</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a67f653761dbc2c203891b041aacc3f04" kindref="member">GraphType</ref><sp/>&amp;<sp/>graph,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a75e91e51c78d2f427a31c30dcd8996ed" kindref="member">Callback</ref><sp/>&amp;<sp/>callback</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>detail_edge_contraction_graph::EdgeContractionGraphEdgeUfdHelper&lt;GRAPH,<sp/>WITH_EDGE_UFD&gt;(graph),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_(graph),</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_(callback),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_(graph_),</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//edges_(graph_),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeUfd_(graph_.nodeIdUpperBound()+1),</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNodeNum_(graph_.numberOfNodes()),</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentEdgeNum_(graph_.numberOfEdges())</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;reset();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1EdgeContractionGraph_1_1AdjacencyIterRange" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::AdjacencyIterRange</ref><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="459" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a304b4afa030620170b93269c0f9211ca" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    adjacency</ref>(</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AdjacencyIterRange(adjacencyBegin(node),adjacencyEnd(node));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a447212f5ced0c4ef4d304e8b89f4f200" kindref="member">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::AdjacencyIter</ref><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="468" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a687e27cdcc7aef855c05c3444d6af5dc" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    adjacencyBegin</ref>(</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodes_[node].begin();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a447212f5ced0c4ef4d304e8b89f4f200" kindref="member">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::AdjacencyIter</ref><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="477" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a07541202609a5f1e66365105354827b5" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    adjacencyEnd</ref>(</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodes_[node].end();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a447212f5ced0c4ef4d304e8b89f4f200" kindref="member">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::AdjacencyIter</ref><sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="486" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ac852a6bd37df982e507c0ab1319f4bfc" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    adjacencyOutBegin</ref>(</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adjacencyBegin(node);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ad57e807f7df20892c7bbbb9b53d3aa08" kindref="member">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::EdgeStorage</ref><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="495" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1aa9f877c513e88e0fcb31ea57c0601b82" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    uv</ref>(</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>guv<sp/>=<sp/>graph_.<ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1aa9f877c513e88e0fcb31ea57c0601b82" kindref="member">uv</ref>(edge);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ad57e807f7df20892c7bbbb9b53d3aa08" kindref="member">EdgeStorage</ref>(nodeUfd_.find(guv.first),<sp/>nodeUfd_.find(guv.second));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>edges_[edge];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int64_t</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="506" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1abcf5091cb2fa0a7ebf70461670f6adc6" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    u</ref>(</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeUfd_.find(graph_.u(edge));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>edges_[edge].first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int64_t</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="516" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a454f1714ad453fc12af7b688e1a65083" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    v</ref>(</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeUfd_.find(graph_.v(edge));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>edges_[edge].second;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="526" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1add06772035f2b62cabd4d1887a2101e6" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    numberOfNodes</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currentNodeNum_;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="533" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ad62c0b6483f0470dfe4d9af2f273d07a" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    numberOfEdges</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currentEdgeNum_;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="540" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1aecd45b340dbfb2774c48ab06cb083995" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    nodeIdUpperBound</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>graph_.<ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1aecd45b340dbfb2774c48ab06cb083995" kindref="member">nodeIdUpperBound</ref>();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="547" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a8da285e18584fd0f4b95e3293f985ec2" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    edgeIdUpperBound</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>graph_.<ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a8da285e18584fd0f4b95e3293f985ec2" kindref="member">edgeIdUpperBound</ref>();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int64_t<sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="554" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a9764dfe9d4d1b67cc9bd4dd34567dd9d" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    findEdge</ref>(</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>u,<sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>v</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fres<sp/>=<sp/><sp/>nodes_[u].find(NodeAdjacency(v));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fres<sp/>!=<sp/>nodes_[u].end())</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fres-&gt;edge();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="569" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a76a6e084c4dfe14a20f5671ec5f57cbc" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    reset</ref>(){</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeUfd_.<ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a76a6e084c4dfe14a20f5671ec5f57cbc" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNodeNum_<sp/>=<sp/>graph_.numberOfNodes();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentEdgeNum_<sp/>=<sp/>graph_.numberOfEdges();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>data-structures<sp/>for<sp/>the<sp/>dynamic<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nodes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/>:<sp/>graph_.nodes()){</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>dAdj<sp/>=<sp/>nodes_[u];</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dAdj.clear();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>WITHIN_TRAVIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>degree<sp/>=<sp/>std::distance(graph_.adjacencyBegin(u),<sp/>graph_.adjacencyEnd(u));</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dAdj.reserve(degree);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>adj<sp/>:<sp/>graph_.adjacency(u)){</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>adj.node();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edge<sp/>=<sp/>adj.edge();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dAdj.insert(NodeAdjacency(v,<sp/>edge));</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>WITHIN_TRAVIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dAdj.shrink_to_fit();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>edges:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(const<sp/>auto<sp/>edge:<sp/>graph_.edges()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>uv<sp/>=<sp/>graph_.uv(edge);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>edgeStorage<sp/>=<sp/>EdgeStorage(uv.first,<sp/>uv.second);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>edges_[edge]<sp/>=<sp/>edgeStorage;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="606" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ad13498d6f4fd9e360fa8884febaeba0a" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    contractEdge</ref>(</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edgeToContract</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.<ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ad13498d6f4fd9e360fa8884febaeba0a" kindref="member">contractEdge</ref>(edgeToContract);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--currentEdgeNum_;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>u<sp/>and<sp/>v<sp/>we<sp/>need<sp/>to<sp/>merge<sp/>into<sp/>a<sp/>single<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uv<sp/>=<sp/>this-&gt;uv(edgeToContract);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>auto<sp/>uv<sp/>=<sp/>edges_[edgeToContract];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>uv.first;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>uv.second;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1ac539d7793f817e718c9fb6659e948860" kindref="member">NIFTY_TEST_OP</ref>(u,!=,v);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merge<sp/>them<sp/>into<sp/>a<sp/>single<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(nodeUfd_.find(u),==,u);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(nodeUfd_.find(v),==,v);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeUfd_.merge(u,<sp/>v);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--currentNodeNum_;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>which<sp/>of<sp/>u<sp/>and<sp/>v<sp/>is<sp/>the<sp/>new<sp/>representative<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>known<sp/>as<sp/>&apos;aliveNode&apos;<sp/>and<sp/>which<sp/>is<sp/>the<sp/>deadNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>aliveNode<sp/>=<sp/>nodeUfd_.find(u);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(aliveNode==u<sp/>||<sp/>aliveNode==v);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deadNode<sp/>=<sp/>aliveNode<sp/>==<sp/>u<sp/>?<sp/>v<sp/>:<sp/>u;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(nodeUfd_.find(aliveNode),==,aliveNode);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(nodeUfd_.find(deadNode),!=,deadNode);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.mergeNodes(aliveNode,<sp/>deadNode);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>adjacency<sp/>sets<sp/>of<sp/>both<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>adjAlive<sp/>=<sp/>nodes_[aliveNode];</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>adjDead<sp/>=<sp/>nodes_[deadNode];</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>them<sp/>from<sp/>each<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(adjAlive.find(NodeAdjacency(deadNode))<sp/>!=<sp/>adjAlive.end());</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(adjDead.find(NodeAdjacency(aliveNode))<sp/>!=<sp/>adjDead.end());</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjAlive.erase(NodeAdjacency(deadNode));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjDead.erase(NodeAdjacency(aliveNode));</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>&quot;shift/move&quot;<sp/>the<sp/>adj.<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>&apos;adjDead&apos;<sp/>into<sp/>&apos;adjAlive&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>adj<sp/>:<sp/>adjDead){</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>adjToDeadNode<sp/>=<sp/>adj.node();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>adjToDeadNodeEdge<sp/>=<sp/>adj.edge();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>adjToDeadNode<sp/>is<sp/>also<sp/>in<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aliveNodes<sp/>adjacency<sp/><sp/>=&gt;<sp/>double<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>findResIter<sp/>=<sp/>adjAlive.find(NodeAdjacency(adjToDeadNode));</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(findResIter<sp/>!=<sp/>adjAlive.end()){<sp/></highlight><highlight class="comment">//<sp/>we<sp/>found<sp/>a<sp/>double<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1ac539d7793f817e718c9fb6659e948860" kindref="member">NIFTY_TEST_OP</ref>(findResIter-&gt;node(),==,adjToDeadNode)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edgeInAlive<sp/>=<sp/>findResIter-&gt;edge();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NIFTY_ASSERT(pq_.contains(edgeInAlive));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>auto<sp/>wEdgeInAlive<sp/>=<sp/>pq_.priority(edgeInAlive);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>auto<sp/>wEdgeInDead<sp/>=<sp/>pq_.priority(adjToDeadNodeEdge);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>erase<sp/>the<sp/>deadNodeEdge<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>pq_.deleteItem(adjToDeadNodeEdge);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>pq_.changePriority(edgeInAlive,<sp/>wEdgeInAlive<sp/>+<sp/>wEdgeInDead);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!WITH_EDGE_UFD){</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.mergeEdges(edgeInAlive,<sp/>adjToDeadNodeEdge);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>this-&gt;edgeUfdMerge(edgeInAlive,<sp/>adjToDeadNodeEdge);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>aliveEdge<sp/>=<sp/>ret.first;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deadEdge<sp/>=<sp/>ret.second;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aliveEdge<sp/>==<sp/>edgeInAlive){</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.mergeEdges(edgeInAlive,<sp/>adjToDeadNodeEdge);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//auto<sp/>&amp;<sp/>uv<sp/>=<sp/>this-&gt;uv(aliveEdge);</highlight></codeline>
<codeline lineno="694"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uv.second<sp/>=<sp/>adjToDeadNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_[aliveNode].find(NodeAdjacency(adjToDeadNode))-&gt;changeEdgeIndex(aliveEdge);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_[adjToDeadNode].find(NodeAdjacency(aliveNode))-&gt;changeEdgeIndex(aliveEdge);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.mergeEdges(aliveEdge,<sp/>deadEdge);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relabel<sp/>adjacency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--currentEdgeNum_;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>s<sp/>=<sp/>nodes_[adjToDeadNode];</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>findRes<sp/>=<sp/>s.find(NodeAdjacency(deadNode));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.erase(NodeAdjacency(deadNode));</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>double<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>adjacency<sp/>from<sp/>dead<sp/>to<sp/>alive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjAlive.insert(NodeAdjacency(adjToDeadNode,<sp/>adjToDeadNodeEdge));</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relabel<sp/>adjacency<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>s<sp/>=<sp/>nodes_[adjToDeadNode];</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(s.find(NodeAdjacency(deadNode))<sp/>!=<sp/>s.end());</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1af91d00e1319a132b73765ba661a64b73" kindref="member">NIFTY_ASSERT</ref>(s.find(NodeAdjacency(aliveNode))<sp/>==<sp/>s.end());</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.erase(NodeAdjacency(deadNode));</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(NodeAdjacency(aliveNode,<sp/>adjToDeadNodeEdge));</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relabel<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;relabelEdge(adjToDeadNodeEdge,<sp/>deadNode,<sp/>aliveNode);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.contractEdgeDone(edgeToContract);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="731" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1ab0e210c9cc2f7634ad7ed51bca81a6da" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    findRepresentativeNode</ref>(</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>node</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeUfd_.find(node);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="740" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a96db6fdacf91e9f67d505f1bfc33ef76" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    findRepresentativeNode</ref>(</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>node</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeUfd_.find(node);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="749" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a6538334aa0d9cd0fc95bc197f73228bd" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    nodeOfDeadEdge</ref>(</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>deadEdge</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>this-&gt;u(deadEdge);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NIFTY_TEST_OP(nodeUfd_.find(uv.first),==,<sp/>nodeUfd_.find(uv.second));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeUfd_.find(u);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a67f653761dbc2c203891b041aacc3f04" kindref="member">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::GraphType</ref><sp/>&amp;<sp/></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="760" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a4a3b76832b977d03e8507b47a7f1b0ae" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    baseGraph</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>graph_;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a67f653761dbc2c203891b041aacc3f04" kindref="member">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::GraphType</ref><sp/>&amp;<sp/></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="767" refid="classnifty_1_1graph_1_1EdgeContractionGraph_1a422ab3344774fa68583658effa1fca95" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    graph</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>graph_;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CALLBACK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WITH_EDGE_UFD&gt;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">EdgeContractionGraph&lt;GRAPH, CALLBACK, WITH_EDGE_UFD&gt;::</ref></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1EdgeContractionGraph" kindref="compound">    relabelEdge</ref>(</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>deadNode,<sp/></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>aliveNode</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>&amp;<sp/>uv<sp/>=<sp/>edges_[edge];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(uv.first<sp/>==<sp/>deadNode){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uv.first<sp/>=<sp/>aliveNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if(uv.second<sp/>==<sp/>deadNode){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uv.second<sp/>=<sp/>aliveNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>NIFTY_ASSERT(false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_contraction_graph.hxx"/>
  </compounddef>
</doxygen>

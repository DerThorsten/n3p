<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacehalf__float_1_1detail" kind="namespace" language="C++">
    <compoundname>half_float::detail</compoundname>
    <innerclass refid="structhalf__float_1_1detail_1_1binary__specialized" prot="public">half_float::detail::binary_specialized</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1binary__specialized_3_01half_00_01half_01_4" prot="public">half_float::detail::binary_specialized&lt; half, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1binary__t" prot="public">half_float::detail::binary_t</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits" prot="public">half_float::detail::bits</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01const_01T_01_4" prot="public">half_float::detail::bits&lt; const T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01const_01volatile_01T_01_4" prot="public">half_float::detail::bits&lt; const volatile T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01double_01_4" prot="public">half_float::detail::bits&lt; double &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01float_01_4" prot="public">half_float::detail::bits&lt; float &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01volatile_01T_01_4" prot="public">half_float::detail::bits&lt; volatile T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bool__type" prot="public">half_float::detail::bool_type</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1conditional" prot="public">half_float::detail::conditional</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1conditional_3_01false_00_01T_00_01F_01_4" prot="public">half_float::detail::conditional&lt; false, T, F &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable" prot="public">half_float::detail::enable</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01expr_01_4" prot="public">half_float::detail::enable&lt; T, expr, expr, expr &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01half_01_4" prot="public">half_float::detail::enable&lt; T, expr, expr, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, expr, expr, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01expr_01_4" prot="public">half_float::detail::enable&lt; T, expr, half, expr &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01half_01_4" prot="public">half_float::detail::enable&lt; T, expr, half, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, expr, half, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01void_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, expr, void, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01expr_01_4" prot="public">half_float::detail::enable&lt; T, half, expr, expr &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01half_01_4" prot="public">half_float::detail::enable&lt; T, half, expr, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, half, expr, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01expr_01_4" prot="public">half_float::detail::enable&lt; T, half, half, expr &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01half_01_4" prot="public">half_float::detail::enable&lt; T, half, half, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, half, half, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01void_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, half, void, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1expr" prot="public">half_float::detail::expr</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1functions" prot="public">half_float::detail::functions</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster" prot="public">half_float::detail::half_caster</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01expr_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; half, expr, R &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01half_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; half, half, R &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01U_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; half, U, R &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01expr_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; T, expr, R &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01half_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; T, half, R &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float" prot="public">half_float::detail::is_float</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01const_01T_01_4" prot="public">half_float::detail::is_float&lt; const T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01const_01volatile_01T_01_4" prot="public">half_float::detail::is_float&lt; const volatile T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01double_01_4" prot="public">half_float::detail::is_float&lt; double &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01float_01_4" prot="public">half_float::detail::is_float&lt; float &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01long_01double_01_4" prot="public">half_float::detail::is_float&lt; long double &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01volatile_01T_01_4" prot="public">half_float::detail::is_float&lt; volatile T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1result" prot="public">half_float::detail::result</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1result_3_01half_00_01half_01_4" prot="public">half_float::detail::result&lt; half, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1unary__specialized" prot="public">half_float::detail::unary_specialized</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1unary__specialized_3_01expr_01_4" prot="public">half_float::detail::unary_specialized&lt; expr &gt;</innerclass>
      <sectiondef kind="user-defined">
      <header>Classification helpers</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool half_float::detail::builtin_isinf</definition>
        <argsstring>(T arg)</argsstring>
        <name>builtin_isinf</name>
        <param>
          <type>T</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check for infinity. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>argument type (builtin floating point type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>value to query </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if infinity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="403" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="403" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool half_float::detail::builtin_isnan</definition>
        <argsstring>(T arg)</argsstring>
        <name>builtin_isnan</name>
        <param>
          <type>T</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check for NaN. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>argument type (builtin floating point type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>value to query </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if not a number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="419" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="419" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool half_float::detail::builtin_signbit</definition>
        <argsstring>(T arg)</argsstring>
        <name>builtin_signbit</name>
        <param>
          <type>T</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check sign. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>argument type (builtin floating point type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>value to query </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if signbit set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="435" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="435" bodyend="442"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Conversion</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a32be02e128131df654adb21672ad1e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
        <definition>uint16 half_float::detail::float2half_impl</definition>
        <argsstring>(float value, true_type)</argsstring>
        <name>float2half_impl</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a5e245748a3cc20e348dd92383d99d03c" kindref="member">true_type</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert IEEE single-precision to half-precision. Credit for this goes to <ulink url="ftp://ftp.fox-toolkit.org/pub/fasthalffloatconversion.pdf">Jeroen van der Zijp</ulink>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>single-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>binary representation of half-precision value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="453" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="453" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a36dca5081e9a14c8e523d2415e476ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
        <definition>uint16 half_float::detail::float2half_impl</definition>
        <argsstring>(double value, true_type)</argsstring>
        <name>float2half_impl</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a5e245748a3cc20e348dd92383d99d03c" kindref="member">true_type</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert IEEE double-precision to half-precision. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>double-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>binary representation of half-precision value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="573" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="573" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7a40ca55db89afccd351332db5535ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
        <definition>uint16 half_float::detail::float2half_impl</definition>
        <argsstring>(T value,...)</argsstring>
        <name>float2half_impl</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert non-IEEE floating point to half-precision. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>source type (builtin floating point type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>floating point value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>binary representation of half-precision value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="631" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="631" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a323f122774a4f85d4ce4c4d91a8d066b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
        <definition>uint16 half_float::detail::float2half</definition>
        <argsstring>(T value)</argsstring>
        <name>float2half</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert floating point to half-precision. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>source type (builtin floating point type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>floating point value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>binary representation of half-precision value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="680" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="680" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a80ed90b3d769041decdd5eb79e6f3017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
        <definition>uint16 half_float::detail::int2half_impl</definition>
        <argsstring>(T value)</argsstring>
        <name>int2half_impl</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert integer to half-precision floating point. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if value negative, <computeroutput>false</computeroutput> else </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to convert (builtin integer type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>non-negative integral value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>binary representation of half-precision value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="691" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="691" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a739b4225bfb0a1a45dff1c76432a90c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
        <definition>uint16 half_float::detail::int2half</definition>
        <argsstring>(T value)</argsstring>
        <name>int2half</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert integer to half-precision floating point. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to convert (builtin integer type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>integral value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>binary representation of half-precision value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="736" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="736" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a1f78a7e278b390a587dea90e02686e28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float half_float::detail::half2float_impl</definition>
        <argsstring>(uint16 value, float, true_type)</argsstring>
        <name>half2float_impl</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a5e245748a3cc20e348dd92383d99d03c" kindref="member">true_type</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert half-precision to IEEE single-precision. Credit for this goes to <ulink url="ftp://ftp.fox-toolkit.org/pub/fasthalffloatconversion.pdf">Jeroen van der Zijp</ulink>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>single-precision value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="745" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="745" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aaf774221cb784d97cb9fdf0edc1a76f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double half_float::detail::half2float_impl</definition>
        <argsstring>(uint16 value, double, true_type)</argsstring>
        <name>half2float_impl</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a5e245748a3cc20e348dd92383d99d03c" kindref="member">true_type</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert half-precision to IEEE double-precision. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double-precision value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="903" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="903" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1afe86dfbf3a3bac81cfe88aaec27969c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T half_float::detail::half2float_impl</definition>
        <argsstring>(uint16 value, T,...)</argsstring>
        <name>half2float_impl</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>T</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert half-precision to non-IEEE floating point. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to convert to (builtin integer type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>floating point value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="926" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="926" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aacbda37363295f0d13fca10c223e8169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T half_float::detail::half2float</definition>
        <argsstring>(uint16 value)</argsstring>
        <name>half2float</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert half-precision to floating point. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to convert to (builtin integer type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>floating point value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="945" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="945" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a93c7f040e64b7cedad971b42bedc85a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T half_float::detail::half2int_impl</definition>
        <argsstring>(uint16 value)</argsstring>
        <name>half2int_impl</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert half-precision floating point to integer. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> for round to even, <computeroutput>false</computeroutput> for round away from zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to convert to (buitlin integer type with at least 16 bits precision, excluding any implicit sign bits) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integral value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="956" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="956" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a78bf248e5c07c8b73adbb0986b430675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T half_float::detail::half2int</definition>
        <argsstring>(uint16 value)</argsstring>
        <name>half2int</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert half-precision floating point to integer. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to convert to (buitlin integer type with at least 16 bits precision, excluding any implicit sign bits) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integral value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="994" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="994" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a1672f8be699238543caa56fc43ed17ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T half_float::detail::half2int_up</definition>
        <argsstring>(uint16 value)</argsstring>
        <name>half2int_up</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert half-precision floating point to integer using round-to-nearest-away-from-zero. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to convert to (buitlin integer type with at least 16 bits precision, excluding any implicit sign bits) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integral value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="1000" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="1000" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab4e14ce718b27e88bd319bbac32b6d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
        <definition>uint16 half_float::detail::round_half_impl</definition>
        <argsstring>(uint16 value)</argsstring>
        <name>round_half_impl</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Round half-precision number to nearest integer value. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> for round to even, <computeroutput>false</computeroutput> for round away from zero </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>half-precision bits for nearest integral value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="1007" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="1007" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ad83f9ae057a78ad84ac6a35a3f9b5509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
        <definition>uint16 half_float::detail::round_half</definition>
        <argsstring>(uint16 value)</argsstring>
        <name>round_half</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Round half-precision number to nearest integer value. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use, <computeroutput>std::round_indeterminate</computeroutput> for fastest rounding </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>half-precision bits for nearest integral value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="1040" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="1040" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab00a3fec9c3b3d27d5957c85ae5b587b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
        <definition>uint16 half_float::detail::round_half_up</definition>
        <argsstring>(uint16 value)</argsstring>
        <name>round_half_up</name>
        <param>
          <type><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Round half-precision number to nearest integer value using round-to-nearest-away-from-zero. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>binary representation of half-precision value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>half-precision bits for nearest integral value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="1045" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="1045" bodyend="1045"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Comparison operators</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a6c0b83f30940719c1dd8f5a85323388a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; bool, T, U &gt;::type</type>
        <definition>enable&lt;bool,T,U&gt;::type half_float::detail::operator==</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator==</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for equality. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if operands equal </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2117" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2117" bodyend="2117"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a387b8a8af08fba40aff80054f52d0ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; bool, T, U &gt;::type</type>
        <definition>enable&lt;bool,T,U&gt;::type half_float::detail::operator!=</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for inequality. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if operands not equal </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2124" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2124" bodyend="2124"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1afe873e6cae401e97d4d8d88c08eb29e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; bool, T, U &gt;::type</type>
        <definition>enable&lt;bool,T,U&gt;::type half_float::detail::operator&lt;</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for less than. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>x</emphasis> less than <emphasis>y</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2131" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2131" bodyend="2131"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab5bceccadce3723b7c7b25dc63760025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; bool, T, U &gt;::type</type>
        <definition>enable&lt;bool,T,U&gt;::type half_float::detail::operator&gt;</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for greater than. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>x</emphasis> greater than <emphasis>y</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2138" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2138" bodyend="2138"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a0588a6476f8569f2b81dd99d4e87d83b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; bool, T, U &gt;::type</type>
        <definition>enable&lt;bool,T,U&gt;::type half_float::detail::operator&lt;=</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for less equal. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>x</emphasis> less equal <emphasis>y</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2145" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2145" bodyend="2145"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ad5a5e2d4da6f36b5b6ee2dced3fb3e72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; bool, T, U &gt;::type</type>
        <definition>enable&lt;bool,T,U&gt;::type half_float::detail::operator&gt;=</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for greater equal. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>x</emphasis> greater equal <emphasis>y</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2152" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2152" bodyend="2152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Arithmetic operators</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab68ed4e1f0a86aebf4337957f1639070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; <ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>, T, U &gt;::type</type>
        <definition>enable&lt;expr,T,U&gt;::type half_float::detail::operator+</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator+</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add halfs. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sum of half expressions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2162" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2162" bodyend="2162"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa44e802bd306be8f49dd7d193630253e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; <ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>, T, U &gt;::type</type>
        <definition>enable&lt;expr,T,U&gt;::type half_float::detail::operator-</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator-</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract halfs. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>difference of half expressions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2168" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2168" bodyend="2168"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a39439907cd8f62aa71ed6e1e50f1c860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; <ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>, T, U &gt;::type</type>
        <definition>enable&lt;expr,T,U&gt;::type half_float::detail::operator*</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply halfs. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>product of half expressions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2174" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2174" bodyend="2174"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a6cea2c4b4740528b2f86fb55990107bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; <ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>, T, U &gt;::type</type>
        <definition>enable&lt;expr,T,U&gt;::type half_float::detail::operator/</definition>
        <argsstring>(T x, U y)</argsstring>
        <name>operator/</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>U</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide halfs. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>quotient of half expressions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2180" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2180" bodyend="2180"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7afa8822c81700c74bf8be208cded547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref> <ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; T, T &gt;::type</type>
        <definition>HALF_CONSTEXPR enable&lt;T,T&gt;::type half_float::detail::operator+</definition>
        <argsstring>(T arg)</argsstring>
        <name>operator+</name>
        <param>
          <type>T</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Identity. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uncahnged operand </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2185" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2185" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a8479fc53f679b85f40e6d511706627c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref> <ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; T, T &gt;::type</type>
        <definition>HALF_CONSTEXPR enable&lt;T,T&gt;::type half_float::detail::operator-</definition>
        <argsstring>(T arg)</argsstring>
        <name>operator-</name>
        <param>
          <type>T</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Negation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>negated operand </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2190" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2190" bodyend="2190"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Input and output</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a91f6492ee3c6586e6d9dcdfcb31bccca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename charT</type>
          </param>
          <param>
            <type>typename traits</type>
          </param>
        </templateparamlist>
        <type><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt; std::basic_ostream&lt; charT, traits &gt; &amp;, T &gt;::type</type>
        <definition>enable&lt;std::basic_ostream&lt;charT,traits&gt;&amp;,T&gt;::type half_float::detail::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; charT, traits &gt; &amp;out, T arg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; charT, traits &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>T</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Output operator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output stream to write into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half expression to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to output stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2200" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2201" bodyend="2201"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a50bcccb2f7042c23766a4f39090ed709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename charT</type>
          </param>
          <param>
            <type>typename traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; charT, traits &gt; &amp;</type>
        <definition>std::basic_istream&lt;charT,traits&gt;&amp; half_float::detail::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; charT, traits &gt; &amp;in, half &amp;arg)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; charT, traits &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Input operator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>input stream to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half to read into </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to input stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2208" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2208" bodyend="2208"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Basic mathematical operations</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a25d76d0f9f18298a1096716c0da7b6e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::abs</definition>
        <argsstring>(half arg)</argsstring>
        <name>abs</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Absolute value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>absolute value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2218" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2218" bodyend="2218"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::abs</definition>
        <argsstring>(expr arg)</argsstring>
        <name>abs</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2219" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2219" bodyend="2219"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a70f276b86204e71756d873694cf1e2ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::fabs</definition>
        <argsstring>(half arg)</argsstring>
        <name>fabs</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Absolute value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>absolute value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2225" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2225" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fabs</definition>
        <argsstring>(expr arg)</argsstring>
        <name>fabs</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2226" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2226" bodyend="2226"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a935147b16040f424271a380e274577ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmod</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>fmod</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remainder of division. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>remainder of floating point division. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2233" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2233" bodyend="2233"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a2a98a82b2c995cbf00d5a8aeca3e1104" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmod</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>fmod</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2234" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2234" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7d0143ad75876583a33b9efd238dfbdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmod</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>fmod</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2235" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2235" bodyend="2235"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmod</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>fmod</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2236" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2236" bodyend="2236"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab5ec4bbe576c7a623212d2a8e5fe4a30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::remainder</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>remainder</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remainder of division. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>remainder of floating point division. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2243" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2243" bodyend="2243"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1af34ace7578dcc806426d3399ff1d6e8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::remainder</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>remainder</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2244" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2244" bodyend="2244"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a45e1dc6152c5212225561095b0181609" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::remainder</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>remainder</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2245" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2245" bodyend="2245"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::remainder</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>remainder</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2246" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2246" bodyend="2246"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aaeeae804024549bd70c30603126dbe3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::remquo</definition>
        <argsstring>(half x, half y, int *quo)</argsstring>
        <name>remquo</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>quo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remainder of division. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quo</parametername>
</parameternamelist>
<parameterdescription>
<para>address to store some bits of quotient at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>remainder of floating point division. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2254" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2254" bodyend="2254"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aee094ed4d68df7b10e1708e94108db12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::remquo</definition>
        <argsstring>(half x, expr y, int *quo)</argsstring>
        <name>remquo</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>quo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2255" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2255" bodyend="2255"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a550caa1e77f29aa409a10b3f9c238c0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::remquo</definition>
        <argsstring>(expr x, half y, int *quo)</argsstring>
        <name>remquo</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>quo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2256" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2256" bodyend="2256"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::remquo</definition>
        <argsstring>(expr x, expr y, int *quo)</argsstring>
        <name>remquo</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>quo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2257" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2257" bodyend="2257"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a280ee0782f6d036ec43848c549a36e21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fma</definition>
        <argsstring>(half x, half y, half z)</argsstring>
        <name>fma</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fused multiply add. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>third operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>( <emphasis>x</emphasis> * <emphasis>y</emphasis> ) + <emphasis>z</emphasis> rounded as one operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2265" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2265" bodyend="2265"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa0cb023ea6c7d8001f5ef3d27d19aa08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fma</definition>
        <argsstring>(half x, half y, expr z)</argsstring>
        <name>fma</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2266" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2266" bodyend="2266"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7c3742da5a38f674945f00920afa5471" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fma</definition>
        <argsstring>(half x, expr y, half z)</argsstring>
        <name>fma</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2267" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2267" bodyend="2267"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab6bd73ba9ce8e0d276b5660add1f3ec3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fma</definition>
        <argsstring>(half x, expr y, expr z)</argsstring>
        <name>fma</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2268" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2268" bodyend="2268"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a44b4dfdc8a51edd86c0f6c6be1e8c362" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fma</definition>
        <argsstring>(expr x, half y, half z)</argsstring>
        <name>fma</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2269" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2269" bodyend="2269"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a8ad5fde03f4a89ee0a6febefff2b2951" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fma</definition>
        <argsstring>(expr x, half y, expr z)</argsstring>
        <name>fma</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2270" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2270" bodyend="2270"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a4e699585abe71ccdf22a16eaa9fbdf2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fma</definition>
        <argsstring>(expr x, expr y, half z)</argsstring>
        <name>fma</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2271" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2271" bodyend="2271"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fma</definition>
        <argsstring>(expr x, expr y, expr z)</argsstring>
        <name>fma</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2272" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2272" bodyend="2272"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a465b9d2dc41f1c10dd7ab9ce3dc2866f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::fmax</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>fmax</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum of half expressions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum of operands </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2279" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2279" bodyend="2279"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a684ce72377acab35d3568390a12629a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmax</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>fmax</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2280" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2280" bodyend="2280"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7bf0e2d7ac5511a0b70b9d4bf2ad3830" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmax</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>fmax</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2281" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2281" bodyend="2281"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmax</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>fmax</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2282" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2282" bodyend="2282"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a9b147d2e64476167b7e9ee41ce14f36c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::fmin</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>fmin</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum of half expressions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum of operands </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2289" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2289" bodyend="2289"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a9ba6bab3339ee8ba80447452e780e33c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmin</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>fmin</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2290" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2290" bodyend="2290"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a55ef2a52b5f71daa27a14aebc27ff772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmin</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>fmin</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2291" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2291" bodyend="2291"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fmin</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>fmin</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2292" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2292" bodyend="2292"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a09a51a6e291a38991305ecdc8721ed85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fdim</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>fdim</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Positive difference. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>x</emphasis> - <emphasis>y</emphasis> or 0 if difference negative </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2299" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2299" bodyend="2299"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1abc68948d8a694a01e4f07994dec98a42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fdim</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>fdim</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2300" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2300" bodyend="2300"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ae61860ac1f7a992e560e37d7340e662d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fdim</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>fdim</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2301" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2301" bodyend="2301"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::fdim</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>fdim</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2302" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2302" bodyend="2302"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1af73da38f1f425ad36f7c90268d401397" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::nanh</definition>
        <argsstring>(const char *)</argsstring>
        <name>nanh</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get NaN value. <simplesect kind="return"><para>quiet NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2306" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2306" bodyend="2306"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Exponential functions</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a22c1f76fc6a8dd8e469e54cabc4a7f42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::exp</definition>
        <argsstring>(half arg)</argsstring>
        <name>exp</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exponential function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>e raised to <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2316" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2316" bodyend="2316"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::exp</definition>
        <argsstring>(expr arg)</argsstring>
        <name>exp</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2317" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2317" bodyend="2317"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7b50ad39eee026747f621d17eb982d47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::expm1</definition>
        <argsstring>(half arg)</argsstring>
        <name>expm1</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exponential minus one. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>e raised to <emphasis>arg</emphasis> subtracted by 1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2323" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2323" bodyend="2323"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1afdac01457ab03f14285ce6b358221bda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::expm1</definition>
        <argsstring>(expr arg)</argsstring>
        <name>expm1</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2324" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2324" bodyend="2324"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a6840d19bb305207e0bb01f47cb4fbe34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::exp2</definition>
        <argsstring>(half arg)</argsstring>
        <name>exp2</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Binary exponential. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>2 raised to <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2330" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2330" bodyend="2330"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aacebd17acf9b67ae3748ea3461d3cfad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::exp2</definition>
        <argsstring>(expr arg)</argsstring>
        <name>exp2</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2331" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2331" bodyend="2331"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aae4eda4733dc4a863b635473008d9bc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::log</definition>
        <argsstring>(half arg)</argsstring>
        <name>log</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Natural logorithm. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>logarithm of <emphasis>arg</emphasis> to base e </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2337" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2337" bodyend="2337"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::log</definition>
        <argsstring>(expr arg)</argsstring>
        <name>log</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2338" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2338" bodyend="2338"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ad8d7b7769a3053dd74344ca0b122bb7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::log10</definition>
        <argsstring>(half arg)</argsstring>
        <name>log10</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common logorithm. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>logarithm of <emphasis>arg</emphasis> to base 10 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2344" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2344" bodyend="2344"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a968a57d32cab0e05f9e8bf12ea6f9c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::log10</definition>
        <argsstring>(expr arg)</argsstring>
        <name>log10</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2345" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2345" bodyend="2345"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aaab6664f3cee88c7c0474396c8ba8219" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::log1p</definition>
        <argsstring>(half arg)</argsstring>
        <name>log1p</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Natural logorithm. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>logarithm of <emphasis>arg</emphasis> plus 1 to base e </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2351" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2351" bodyend="2351"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a427f2f960568816873d1f80f0a464232" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::log1p</definition>
        <argsstring>(expr arg)</argsstring>
        <name>log1p</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2352" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2352" bodyend="2352"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ac864f8697a78ce420e343a9c5d37118f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::log2</definition>
        <argsstring>(half arg)</argsstring>
        <name>log2</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Binary logorithm. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>logarithm of <emphasis>arg</emphasis> to base 2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2358" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2358" bodyend="2358"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a897c86d265108d3326d57436bcd75562" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::log2</definition>
        <argsstring>(expr arg)</argsstring>
        <name>log2</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2359" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2359" bodyend="2359"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Power functions</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1af714c124a18db9b79b703007b8d66162" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::sqrt</definition>
        <argsstring>(half arg)</argsstring>
        <name>sqrt</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Square root. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>square root of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2369" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2369" bodyend="2369"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::sqrt</definition>
        <argsstring>(expr arg)</argsstring>
        <name>sqrt</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2370" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2370" bodyend="2370"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1accbe3a1c2cd180f62be82a1b8b784390" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::cbrt</definition>
        <argsstring>(half arg)</argsstring>
        <name>cbrt</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cubic root. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cubic root of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2376" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2376" bodyend="2376"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a0efca8d667af3c6d23589e899ac23d51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::cbrt</definition>
        <argsstring>(expr arg)</argsstring>
        <name>cbrt</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2377" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2377" bodyend="2377"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a380a4c5a399e3dc14fdf39c53277edc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::hypot</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>hypot</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hypotenuse function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first argument </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>square root of sum of squares without internal over- or underflows </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2384" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2384" bodyend="2384"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a540836fd441b3d89f321b9db43c6e2ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::hypot</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>hypot</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2385" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2385" bodyend="2385"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a10f0a3e50b1bc0a0c6760ce5f0a378bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::hypot</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>hypot</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2386" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2386" bodyend="2386"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::hypot</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>hypot</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2387" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2387" bodyend="2387"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1adf4df435c03de776c4ed53d5cf278e31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::pow</definition>
        <argsstring>(half base, half exp)</argsstring>
        <name>pow</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>first argument </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exp</parametername>
</parameternamelist>
<parameterdescription>
<para>second argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>base</emphasis> raised to <emphasis>exp</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2394" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2394" bodyend="2394"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7289d67db5c1b06379f40586325de380" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::pow</definition>
        <argsstring>(half base, expr exp)</argsstring>
        <name>pow</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2395" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2395" bodyend="2395"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a05cde994c26a250d02d8fc9607396837" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::pow</definition>
        <argsstring>(expr base, half exp)</argsstring>
        <name>pow</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2396" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2396" bodyend="2396"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::pow</definition>
        <argsstring>(expr base, expr exp)</argsstring>
        <name>pow</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2397" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2397" bodyend="2397"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Trigonometric functions</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a3c1cc34288f381ee6543c05034783c93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::sin</definition>
        <argsstring>(half arg)</argsstring>
        <name>sin</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sine function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sine value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2407" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2407" bodyend="2407"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a5ae15ff362de65ac7784397ea32e4d3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::sin</definition>
        <argsstring>(expr arg)</argsstring>
        <name>sin</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2408" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2408" bodyend="2408"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a3932690572419d6a40ce760c897ac2cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::cos</definition>
        <argsstring>(half arg)</argsstring>
        <name>cos</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cosine function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cosine value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2414" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2414" bodyend="2414"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a79354f6efe07d6587202e75395d31f49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::cos</definition>
        <argsstring>(expr arg)</argsstring>
        <name>cos</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2415" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2415" bodyend="2415"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a0173ced6e30b993f3c622c765ad53ea8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::tan</definition>
        <argsstring>(half arg)</argsstring>
        <name>tan</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tangent function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tangent value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2421" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2421" bodyend="2421"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a570237a84cf8ce08088e61a60ed58a11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::tan</definition>
        <argsstring>(expr arg)</argsstring>
        <name>tan</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2422" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2422" bodyend="2422"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ad93b1ac42816b8519b0653f58f327ba5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::asin</definition>
        <argsstring>(half arg)</argsstring>
        <name>asin</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Arc sine. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>arc sine value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2428" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2428" bodyend="2428"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ae1ccfb00bd0c246fc79582a98b173c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::asin</definition>
        <argsstring>(expr arg)</argsstring>
        <name>asin</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2429" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2429" bodyend="2429"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a12f68bb5d9a3e88d46af47071ef4e259" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::acos</definition>
        <argsstring>(half arg)</argsstring>
        <name>acos</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Arc cosine function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>arc cosine value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2435" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2435" bodyend="2435"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a3633af9d8cf722fe454f83784cb5cf90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::acos</definition>
        <argsstring>(expr arg)</argsstring>
        <name>acos</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2436" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2436" bodyend="2436"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a70ee2b0c4152c8633270faa7b5c5158c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::atan</definition>
        <argsstring>(half arg)</argsstring>
        <name>atan</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Arc tangent function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>arc tangent value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2442" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2442" bodyend="2442"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab90ceee4ff49e1bc2f733112837cd03b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::atan</definition>
        <argsstring>(expr arg)</argsstring>
        <name>atan</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2443" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2443" bodyend="2443"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a85003efe03f71ec6c069237612a2f84f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::atan2</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>atan2</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Arc tangent function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first argument </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>arc tangent value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2450" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2450" bodyend="2450"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a8e10018401784e57520350cf5ebf0ee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::atan2</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>atan2</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2451" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2451" bodyend="2451"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a476bd28794fb1aa832984132b6e1d78b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::atan2</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>atan2</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2452" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2452" bodyend="2452"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::atan2</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>atan2</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2453" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2453" bodyend="2453"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Hyperbolic functions</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa56d689bec38bfbf9d86192209e705f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::sinh</definition>
        <argsstring>(half arg)</argsstring>
        <name>sinh</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hyperbolic sine. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hyperbolic sine value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2463" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2463" bodyend="2463"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab885f21afbf075b3b3bfe3e028360a4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::sinh</definition>
        <argsstring>(expr arg)</argsstring>
        <name>sinh</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2464" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2464" bodyend="2464"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a4eca9c9999253f864e291defe7acc67b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::cosh</definition>
        <argsstring>(half arg)</argsstring>
        <name>cosh</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hyperbolic cosine. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hyperbolic cosine value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2470" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2470" bodyend="2470"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a70e455e2c9707767d81bee70b7cb2118" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::cosh</definition>
        <argsstring>(expr arg)</argsstring>
        <name>cosh</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2471" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2471" bodyend="2471"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a06795625a388d617e44ea490903c8984" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::tanh</definition>
        <argsstring>(half arg)</argsstring>
        <name>tanh</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hyperbolic tangent. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hyperbolic tangent value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2477" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2477" bodyend="2477"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a5c1c93204314b1e36f09f5cd64e53213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::tanh</definition>
        <argsstring>(expr arg)</argsstring>
        <name>tanh</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2478" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2478" bodyend="2478"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa5f5994b0842a116dc20f1603e1f4cbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::asinh</definition>
        <argsstring>(half arg)</argsstring>
        <name>asinh</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hyperbolic area sine. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>area sine value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2484" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2484" bodyend="2484"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a16e8fe208bed6715d96720cd52484519" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::asinh</definition>
        <argsstring>(expr arg)</argsstring>
        <name>asinh</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2485" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2485" bodyend="2485"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab449a1df5e728eea9892dec37c3d17b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::acosh</definition>
        <argsstring>(half arg)</argsstring>
        <name>acosh</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hyperbolic area cosine. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>area cosine value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2491" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2491" bodyend="2491"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a770438bb92d31e565c573ec6c2018809" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::acosh</definition>
        <argsstring>(expr arg)</argsstring>
        <name>acosh</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2492" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2492" bodyend="2492"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a50f52a411fa0758d9b30d1693a94abd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::atanh</definition>
        <argsstring>(half arg)</argsstring>
        <name>atanh</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hyperbolic area tangent. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>area tangent value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2498" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2498" bodyend="2498"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ac77afd4c7e55ed6a9b017d6ffa28d6e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::atanh</definition>
        <argsstring>(expr arg)</argsstring>
        <name>atanh</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2499" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2499" bodyend="2499"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Error and gamma functions</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a91bfb5ecc731b688a5a866d1da4c6699" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::erf</definition>
        <argsstring>(half arg)</argsstring>
        <name>erf</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error function value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2509" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2509" bodyend="2509"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::erf</definition>
        <argsstring>(expr arg)</argsstring>
        <name>erf</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2510" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2510" bodyend="2510"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ae03035153282371dbc8691ebadcc4fb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::erfc</definition>
        <argsstring>(half arg)</argsstring>
        <name>erfc</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Complementary error function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 minus error function value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2516" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2516" bodyend="2516"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a987a584f9cd8b5e84339c8f4cefca641" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::erfc</definition>
        <argsstring>(expr arg)</argsstring>
        <name>erfc</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2517" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2517" bodyend="2517"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7cf73acde909ef9f522b49f47e54843f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::lgamma</definition>
        <argsstring>(half arg)</argsstring>
        <name>lgamma</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Natural logarithm of gamma function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>natural logarith of gamma function for <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2523" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2523" bodyend="2523"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::lgamma</definition>
        <argsstring>(expr arg)</argsstring>
        <name>lgamma</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2524" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2524" bodyend="2524"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a23014ba07b4073225072ecaf1159d106" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::tgamma</definition>
        <argsstring>(half arg)</argsstring>
        <name>tgamma</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gamma function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>function argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>gamma function value of <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2530" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2530" bodyend="2530"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa9767c4f2cb1260978d67745b8533882" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
        <definition>expr half_float::detail::tgamma</definition>
        <argsstring>(expr arg)</argsstring>
        <name>tgamma</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2531" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2531" bodyend="2531"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Rounding</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a86421b3112018437512cf26b915ef979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::ceil</definition>
        <argsstring>(half arg)</argsstring>
        <name>ceil</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest integer not less than half value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half to round </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nearest integer not less than <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2541" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2541" bodyend="2541"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a021a3543d2b972d72b770226b7c181df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::ceil</definition>
        <argsstring>(expr arg)</argsstring>
        <name>ceil</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2542" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2542" bodyend="2542"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ad34d698311b83780c4df38d8a8274756" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::floor</definition>
        <argsstring>(half arg)</argsstring>
        <name>floor</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest integer not greater than half value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half to round </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nearest integer not greater than <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2548" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2548" bodyend="2548"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a07d6873ffe14938135fa22fb235cc49f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::floor</definition>
        <argsstring>(expr arg)</argsstring>
        <name>floor</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2549" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2549" bodyend="2549"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ad2f636a625c44e0e2e939cf4fcdd8980" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::trunc</definition>
        <argsstring>(half arg)</argsstring>
        <name>trunc</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest integer not greater in magnitude than half value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half to round </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nearest integer not greater in magnitude than <emphasis>arg</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2555" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2555" bodyend="2555"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a200c486961a2c2aea24ed7c323acad97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::trunc</definition>
        <argsstring>(expr arg)</argsstring>
        <name>trunc</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2556" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2556" bodyend="2556"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ae60c2e9b87102c08084c81d546113c91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::round</definition>
        <argsstring>(half arg)</argsstring>
        <name>round</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest integer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half to round </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nearest integer, rounded away from zero in half-way cases </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2562" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2562" bodyend="2562"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab5b61d50f0c874faf8d0a949386242ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::round</definition>
        <argsstring>(expr arg)</argsstring>
        <name>round</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2563" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2563" bodyend="2563"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1abff729297b6ad9e7ad431f73d280b76d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long half_float::detail::lround</definition>
        <argsstring>(half arg)</argsstring>
        <name>lround</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest integer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half to round </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nearest integer, rounded away from zero in half-way cases </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2569" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2569" bodyend="2569"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a6d1973ada01f199686cc173ea627052b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long half_float::detail::lround</definition>
        <argsstring>(expr arg)</argsstring>
        <name>lround</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2570" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2570" bodyend="2570"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa18533c0035bfe9c4f143acfd2b47272" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::nearbyint</definition>
        <argsstring>(half arg)</argsstring>
        <name>nearbyint</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest integer using half&apos;s internal rounding mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half expression to round </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nearest integer using default rounding mode </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2576" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2576" bodyend="2576"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aebcfe947c8904d558b9a572d13b7a3ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::nearbyint</definition>
        <argsstring>(expr arg)</argsstring>
        <name>nearbyint</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2577" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2577" bodyend="2577"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a25d6e6a301530bc1b48159f74cb5a0b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::rint</definition>
        <argsstring>(half arg)</argsstring>
        <name>rint</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest integer using half&apos;s internal rounding mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half expression to round </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nearest integer using default rounding mode </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2583" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2583" bodyend="2583"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aea0610c62a916840b0d0409b239965d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::rint</definition>
        <argsstring>(expr arg)</argsstring>
        <name>rint</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2584" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2584" bodyend="2584"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa2ee848c78f938434f485e75904bee45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long half_float::detail::lrint</definition>
        <argsstring>(half arg)</argsstring>
        <name>lrint</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest integer using half&apos;s internal rounding mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>half expression to round </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nearest integer using default rounding mode </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2590" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2590" bodyend="2590"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a25108b6b800a6693f27963e6183f8c19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long half_float::detail::lrint</definition>
        <argsstring>(expr arg)</argsstring>
        <name>lrint</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2591" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2591" bodyend="2591"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Floating point manipulation</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ac50a04fe4afdfae67b7aeb163fa92c72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::frexp</definition>
        <argsstring>(half arg, int *exp)</argsstring>
        <name>frexp</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decompress floating point number. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to decompress </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exp</parametername>
</parameternamelist>
<parameterdescription>
<para>address to store exponent at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>significant in range [0.5, 1) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2617" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2617" bodyend="2617"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab852ae178e7de565f1731acb2b1cb9f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::frexp</definition>
        <argsstring>(expr arg, int *exp)</argsstring>
        <name>frexp</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2618" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2618" bodyend="2618"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a4540a29921074f33bc8be71904e12aef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::ldexp</definition>
        <argsstring>(half arg, int exp)</argsstring>
        <name>ldexp</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply by power of two. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exp</parametername>
</parameternamelist>
<parameterdescription>
<para>power of two to multiply with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>arg</emphasis> multplied by 2 raised to <emphasis>exp</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2625" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2625" bodyend="2625"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::ldexp</definition>
        <argsstring>(expr arg, int exp)</argsstring>
        <name>ldexp</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2626" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2626" bodyend="2626"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a5ec08b7eaba0159f189fedeaea43946e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::modf</definition>
        <argsstring>(half arg, half *iptr)</argsstring>
        <name>modf</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref> *</type>
          <declname>iptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract integer and fractional parts. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to decompress </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iptr</parametername>
</parameternamelist>
<parameterdescription>
<para>address to store integer part at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>fractional part </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2633" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2633" bodyend="2633"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a86229873ef3805ed4ee0d8796a73b421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::modf</definition>
        <argsstring>(expr arg, half *iptr)</argsstring>
        <name>modf</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref> *</type>
          <declname>iptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2634" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2634" bodyend="2634"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1afa69fde98551e3537a77d267b1fc4187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::scalbn</definition>
        <argsstring>(half arg, int exp)</argsstring>
        <name>scalbn</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply by power of two. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exp</parametername>
</parameternamelist>
<parameterdescription>
<para>power of two to multiply with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>arg</emphasis> multplied by 2 raised to <emphasis>exp</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2641" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2641" bodyend="2641"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ad38a2f6279448caa187ea823b520085c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::scalbn</definition>
        <argsstring>(expr arg, int exp)</argsstring>
        <name>scalbn</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2642" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2642" bodyend="2642"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a924a0abc9d3ee7742200574a803a9bfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::scalbln</definition>
        <argsstring>(half arg, long exp)</argsstring>
        <name>scalbln</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>long</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply by power of two. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exp</parametername>
</parameternamelist>
<parameterdescription>
<para>power of two to multiply with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>arg</emphasis> multplied by 2 raised to <emphasis>exp</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2649" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2649" bodyend="2649"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::scalbln</definition>
        <argsstring>(expr arg, long exp)</argsstring>
        <name>scalbln</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>long</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2650" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2650" bodyend="2650"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1acd3e6c3b07beae2997cef825944411fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int half_float::detail::ilogb</definition>
        <argsstring>(half arg)</argsstring>
        <name>ilogb</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract exponent. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>floating point exponent </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FP_ILOGB0</parametername>
</parameternamelist>
<parameterdescription>
<para>for zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FP_ILOGBNAN</parametername>
</parameternamelist>
<parameterdescription>
<para>for NaN </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MAX_INT</parametername>
</parameternamelist>
<parameterdescription>
<para>for infinity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2659" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2659" bodyend="2659"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1afd96f3123343818501b552174ef98dca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int half_float::detail::ilogb</definition>
        <argsstring>(expr arg)</argsstring>
        <name>ilogb</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2660" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2660" bodyend="2660"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a9963a6cdd7b45287f35438e07717eba2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::logb</definition>
        <argsstring>(half arg)</argsstring>
        <name>logb</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract exponent. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>floating point exponent </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2666" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2666" bodyend="2666"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a37ddd9d452d9bd4c6d31f56adf9f6620" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::logb</definition>
        <argsstring>(expr arg)</argsstring>
        <name>logb</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2667" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2667" bodyend="2667"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1abaff6defbabab12cdfbb47ebf2d757a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::nextafter</definition>
        <argsstring>(half from, half to)</argsstring>
        <name>nextafter</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Next representable value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>value to compute next representable value for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>direction towards which to compute next value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>next representable value after <emphasis>from</emphasis> in direction towards <emphasis>to</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2674" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2674" bodyend="2674"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab1e7231cc386bb596373cf6618d63541" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::nextafter</definition>
        <argsstring>(half from, expr to)</argsstring>
        <name>nextafter</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2675" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2675" bodyend="2675"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ae9f4932000e04299199ad07b764f9757" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::nextafter</definition>
        <argsstring>(expr from, half to)</argsstring>
        <name>nextafter</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2676" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2676" bodyend="2676"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::nextafter</definition>
        <argsstring>(expr from, expr to)</argsstring>
        <name>nextafter</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2677" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2677" bodyend="2677"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aef57aa188ad54b4740b8c3aed38c3c36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::nexttoward</definition>
        <argsstring>(half from, long double to)</argsstring>
        <name>nexttoward</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Next representable value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>value to compute next representable value for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>direction towards which to compute next value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>next representable value after <emphasis>from</emphasis> in direction towards <emphasis>to</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2684" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2684" bodyend="2684"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ae9f3e0b8320a8104eecd193179ee58d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::nexttoward</definition>
        <argsstring>(expr from, long double to)</argsstring>
        <name>nexttoward</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2685" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2685" bodyend="2685"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aca0e10e9b77c1231f05521e08d016a2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::copysign</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>copysign</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take sign. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>value to change sign for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>value to take sign from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value equal to <emphasis>x</emphasis> in magnitude and to <emphasis>y</emphasis> in sign </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2692" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2692" bodyend="2692"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a831056e8fa4d5a57221ef93835d7279f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::copysign</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>copysign</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2693" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2693" bodyend="2693"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a2e29b846ced6aa37b7806563e5e12bc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::copysign</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>copysign</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2694" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2694" bodyend="2694"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
        <definition>half half_float::detail::copysign</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>copysign</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2695" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2695" bodyend="2695"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Floating point classification</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a35cb57616468455d2e4e0b7e28fe97c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int half_float::detail::fpclassify</definition>
        <argsstring>(half arg)</argsstring>
        <name>fpclassify</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Classify floating point value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to classify </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FP_ZERO</parametername>
</parameternamelist>
<parameterdescription>
<para>for positive and negative zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FP_SUBNORMAL</parametername>
</parameternamelist>
<parameterdescription>
<para>for subnormal numbers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FP_INFINITY</parametername>
</parameternamelist>
<parameterdescription>
<para>for positive and negative infinity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FP_NAN</parametername>
</parameternamelist>
<parameterdescription>
<para>for NaNs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FP_NORMAL</parametername>
</parameternamelist>
<parameterdescription>
<para>for all other (normal) values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2710" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2710" bodyend="2710"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a1691a54abfd35fa9c1880288aa3f1244" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int half_float::detail::fpclassify</definition>
        <argsstring>(expr arg)</argsstring>
        <name>fpclassify</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2711" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2711" bodyend="2711"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a976e0b18b3e84b7173457c28411de94a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isfinite</definition>
        <argsstring>(half arg)</argsstring>
        <name>isfinite</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if finite number. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if neither infinity nor NaN </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2718" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2718" bodyend="2718"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a7d652c289107cb5f35c591f89bdffe36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isfinite</definition>
        <argsstring>(expr arg)</argsstring>
        <name>isfinite</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2719" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2719" bodyend="2719"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a8963179a7b2e95bb126aea404732e2d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isinf</definition>
        <argsstring>(half arg)</argsstring>
        <name>isinf</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check for infinity. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>for positive or negative infinity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2726" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2726" bodyend="2726"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a072ecb80d48fc55231963d6a36c2abe4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isinf</definition>
        <argsstring>(expr arg)</argsstring>
        <name>isinf</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2727" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2727" bodyend="2727"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ac997496b119af340bfe047bff0583ee4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isnan</definition>
        <argsstring>(half arg)</argsstring>
        <name>isnan</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check for NaN. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>for NaNs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2734" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2734" bodyend="2734"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isnan</definition>
        <argsstring>(expr arg)</argsstring>
        <name>isnan</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2735" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2735" bodyend="2735"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a8cb72b0b732c9ad285220edbf2cdf303" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isnormal</definition>
        <argsstring>(half arg)</argsstring>
        <name>isnormal</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if normal number. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if normal number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if either subnormal, zero, infinity or NaN </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2742" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2742" bodyend="2742"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa68c8d309a1adebe2de30c3ea5c9c577" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isnormal</definition>
        <argsstring>(expr arg)</argsstring>
        <name>isnormal</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2743" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2743" bodyend="2743"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a889e57734de1100a401c1f148d1e6354" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::signbit</definition>
        <argsstring>(half arg)</argsstring>
        <name>signbit</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check sign. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>number to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>for negative number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>for positive number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2750" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2750" bodyend="2750"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ac957d466a743fdc5910216506256ea3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::signbit</definition>
        <argsstring>(expr arg)</argsstring>
        <name>signbit</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2751" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2751" bodyend="2751"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Comparison</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ac6634b70f77be4d111f27b801e5db865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isgreater</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>isgreater</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for greater than. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>x</emphasis> greater than <emphasis>y</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2763" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2763" bodyend="2763"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a78e952bbbc53aeb9a9b1e21a8bfa72d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isgreater</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>isgreater</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2764" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2764" bodyend="2764"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a4fd226fe51f2d00ca53ff54e1db4d93c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isgreater</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>isgreater</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2765" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2765" bodyend="2765"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isgreater</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>isgreater</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2766" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2766" bodyend="2766"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a93796728de672120ebdab9519c3e33d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isgreaterequal</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>isgreaterequal</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for greater equal. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>x</emphasis> greater equal <emphasis>y</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2774" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2774" bodyend="2774"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a2b2f028b697b695c82cde2bf921af6d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isgreaterequal</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>isgreaterequal</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2775" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2775" bodyend="2775"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a9b3c938dfd20bb945fcf1d4ae16f1989" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isgreaterequal</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>isgreaterequal</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2776" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2776" bodyend="2776"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isgreaterequal</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>isgreaterequal</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2777" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2777" bodyend="2777"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a38cad803bcd84b49ef25e9181678284e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isless</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>isless</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for less than. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>x</emphasis> less than <emphasis>y</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2785" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2785" bodyend="2785"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a284488fe5519a429d1834b76bb59d152" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isless</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>isless</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2786" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2786" bodyend="2786"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a0bf94752c22c1cdb1273beeb67164e7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isless</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>isless</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2787" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2787" bodyend="2787"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isless</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>isless</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2788" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2788" bodyend="2788"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ac4890222c4073ad446d877c321b335d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::islessequal</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>islessequal</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparison for less equal. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>x</emphasis> less equal <emphasis>y</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2796" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2796" bodyend="2796"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ab84536d5ba40f3d79a8a90942625279b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::islessequal</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>islessequal</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2797" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2797" bodyend="2797"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1adfa3321c4be8e22cbd300eaa157d9961" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::islessequal</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>islessequal</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2798" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2798" bodyend="2798"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::islessequal</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>islessequal</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2799" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2799" bodyend="2799"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a1c8c80126de214bbee6021d1d7ace69f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::islessgreater</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>islessgreater</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comarison for less or greater. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if either less or greater </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2807" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2807" bodyend="2807"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1abe2ef7f721b2153143e677f5382fa823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::islessgreater</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>islessgreater</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2808" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2808" bodyend="2808"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ae711abc410125d0b904d2d086d8e831c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::islessgreater</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>islessgreater</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2809" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2809" bodyend="2809"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::islessgreater</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>islessgreater</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2810" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2810" bodyend="2810"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a9d7bd7653ebeced3088e8ab759456728" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isunordered</definition>
        <argsstring>(half x, half y)</argsstring>
        <name>isunordered</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if unordered. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if unordered (one or two NaN operands) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>else </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2818" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2818" bodyend="2818"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1af94f1ec641bbd4dcf8528eeb01a2ac20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isunordered</definition>
        <argsstring>(half x, expr y)</argsstring>
        <name>isunordered</name>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2819" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2819" bodyend="2819"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1ad479f10441ff35fd89038940623edf32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isunordered</definition>
        <argsstring>(expr x, half y)</argsstring>
        <name>isunordered</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2820" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2820" bodyend="2820"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool half_float::detail::isunordered</definition>
        <argsstring>(expr x, expr y)</argsstring>
        <name>isunordered</name>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2821" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2821" bodyend="2821"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Casting</header>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1a2d6a65bc1f34f19797f558a31deefe84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T half_float::detail::half_cast</definition>
        <argsstring>(U arg)</argsstring>
        <name>half_cast</name>
        <param>
          <type>U</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cast to or from half-precision floating point number. This casts between <ref refid="classhalf__float_1_1half" kindref="compound">half</ref> and any built-in arithmetic type. The values are converted directly using the given rounding mode, without any roundtrip over <computeroutput>float</computeroutput> that a <computeroutput>static_cast</computeroutput> would otherwise do. It uses the default rounding mode.</para><para>Using this cast with neither of the two types being a <ref refid="classhalf__float_1_1half" kindref="compound">half</ref> or with any of the two types not being a built-in arithmetic type (apart from <ref refid="classhalf__float_1_1half" kindref="compound">half</ref>, of course) results in a compiler error and casting between <ref refid="classhalf__float_1_1half" kindref="compound">half</ref>s is just a no-op. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>destination type (half or built-in arithmetic type) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>source type (half or built-in arithmetic type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>value to cast </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>arg</emphasis> converted to destination type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2838" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2838" bodyend="2838"/>
      </memberdef>
      <memberdef kind="function" id="namespacehalf__float_1_1detail_1aa886fe2fe51f0ead5eca42060889b331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::float_round_style</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T half_float::detail::half_cast</definition>
        <argsstring>(U arg)</argsstring>
        <name>half_cast</name>
        <param>
          <type>U</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cast to or from half-precision floating point number. This casts between <ref refid="classhalf__float_1_1half" kindref="compound">half</ref> and any built-in arithmetic type. The values are converted directly using the given rounding mode, without any roundtrip over <computeroutput>float</computeroutput> that a <computeroutput>static_cast</computeroutput> would otherwise do.</para><para>Using this cast with neither of the two types being a <ref refid="classhalf__float_1_1half" kindref="compound">half</ref> or with any of the two types not being a built-in arithmetic type (apart from <ref refid="classhalf__float_1_1half" kindref="compound">half</ref>, of course) results in a compiler error and casting between <ref refid="classhalf__float_1_1half" kindref="compound">half</ref>s is just a no-op. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>destination type (half or built-in arithmetic type) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>source type (half or built-in arithmetic type) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>value to cast </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>arg</emphasis> converted to destination type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="2852" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="2852" bodyend="2852"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacehalf__float_1_1detail_1a5e245748a3cc20e348dd92383d99d03c" prot="public" static="no">
        <type><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">bool_type</ref>&lt; true &gt;</type>
        <definition>typedef bool_type&lt;true&gt; half_float::detail::true_type</definition>
        <argsstring></argsstring>
        <name>true_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="300" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacehalf__float_1_1detail_1a04d0449ab22bc6d1cfb2f31a8271945c" prot="public" static="no">
        <type><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">bool_type</ref>&lt; false &gt;</type>
        <definition>typedef bool_type&lt;false&gt; half_float::detail::false_type</definition>
        <argsstring></argsstring>
        <name>false_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="301" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short half_float::detail::uint16</definition>
        <argsstring></argsstring>
        <name>uint16</name>
        <briefdescription>
<para>Unsigned integer of (at least) 16 bits width. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="330" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" prot="public" static="no" mutable="no">
        <type><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref> <ref refid="structhalf__float_1_1detail_1_1binary__t" kindref="compound">binary_t</ref></type>
        <definition>HALF_CONSTEXPR_CONST binary_t half_float::detail::binary</definition>
        <argsstring></argsstring>
        <name>binary</name>
        <initializer>= <ref refid="structhalf__float_1_1detail_1_1binary__t" kindref="compound">binary_t</ref>()</initializer>
        <briefdescription>
<para>Tag for binary construction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="348" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="348" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="281" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap" kind="class" language="C++" prot="public">
    <compoundname>nifty::graph::graph_maps::EdgeMapFromNodeMap</compoundname>
    <includes refid="edge__map__from__node__map_8hxx" local="no">edge_map_from_node_map.hxx</includes>
    <templateparamlist>
      <param>
        <type>class GRAPH</type>
      </param>
      <param>
        <type>class NODE_MAP</type>
      </param>
      <param>
        <type>class BINARY_FUNCTOR</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a551dfc3ef2c5293f5306420d129da574" prot="public" static="no">
        <type>GRAPH</type>
        <definition>typedef GRAPH nifty::graph::graph_maps::EdgeMapFromNodeMap&lt; GRAPH, NODE_MAP, BINARY_FUNCTOR &gt;::GraphType</definition>
        <argsstring></argsstring>
        <name>GraphType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="24" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a0fbb6e9a54ecf31d27e13db4f274a6d1" prot="public" static="no">
        <type>BINARY_FUNCTOR</type>
        <definition>typedef BINARY_FUNCTOR nifty::graph::graph_maps::EdgeMapFromNodeMap&lt; GRAPH, NODE_MAP, BINARY_FUNCTOR &gt;::BinaryFunctorType</definition>
        <argsstring></argsstring>
        <name>BinaryFunctorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="25" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1abc24027c855755008ba3694cc49999c2" prot="public" static="no">
        <type>BinaryFunctorType::value_type</type>
        <definition>typedef BinaryFunctorType::value_type nifty::graph::graph_maps::EdgeMapFromNodeMap&lt; GRAPH, NODE_MAP, BINARY_FUNCTOR &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="26" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1ad2639421843e9da9afe18b0b35a7317e" prot="public" static="no">
        <type>NODE_MAP</type>
        <definition>typedef NODE_MAP nifty::graph::graph_maps::EdgeMapFromNodeMap&lt; GRAPH, NODE_MAP, BINARY_FUNCTOR &gt;::NodeMapType</definition>
        <argsstring></argsstring>
        <name>NodeMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="27" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a2c4a525ca59916ebe76951dbcde16d17" prot="private" static="no" mutable="no">
        <type>const <ref refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a551dfc3ef2c5293f5306420d129da574" kindref="member">GraphType</ref> &amp;</type>
        <definition>const GraphType&amp; nifty::graph::graph_maps::EdgeMapFromNodeMap&lt; GRAPH, NODE_MAP, BINARY_FUNCTOR &gt;::graph_</definition>
        <argsstring></argsstring>
        <name>graph_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="64" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a60821a3a3949243d90761304a78c9e6b" prot="private" static="no" mutable="no">
        <type>NODE_MAP</type>
        <definition>NODE_MAP nifty::graph::graph_maps::EdgeMapFromNodeMap&lt; GRAPH, NODE_MAP, BINARY_FUNCTOR &gt;::nodeMap_</definition>
        <argsstring></argsstring>
        <name>nodeMap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="65" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a1a28c3965c7288eeb0fab6a63c79f39e" prot="private" static="no" mutable="no">
        <type><ref refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a0fbb6e9a54ecf31d27e13db4f274a6d1" kindref="member">BinaryFunctorType</ref></type>
        <definition>BinaryFunctorType nifty::graph::graph_maps::EdgeMapFromNodeMap&lt; GRAPH, NODE_MAP, BINARY_FUNCTOR &gt;::binaryFunctor_</definition>
        <argsstring></argsstring>
        <name>binaryFunctor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="66" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1abf8972db1d22bc00d2afd5cf5cb0b6a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nifty::graph::graph_maps::EdgeMapFromNodeMap&lt; GRAPH, NODE_MAP, BINARY_FUNCTOR &gt;::EdgeMapFromNodeMap</definition>
        <argsstring>(const GraphType &amp;graph, NodeMapType nodeMap, BinaryFunctorType binaryFunctor)</argsstring>
        <name>EdgeMapFromNodeMap</name>
        <param>
          <type>const <ref refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a551dfc3ef2c5293f5306420d129da574" kindref="member">GraphType</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1ad2639421843e9da9afe18b0b35a7317e" kindref="member">NodeMapType</ref></type>
          <declname>nodeMap</declname>
        </param>
        <param>
          <type><ref refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a0fbb6e9a54ecf31d27e13db4f274a6d1" kindref="member">BinaryFunctorType</ref></type>
          <declname>binaryFunctor</declname>
        </param>
        <briefdescription>
<para>construct edge map from node map and functor </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeMap</parametername>
</parameternamelist>
<parameterdescription>
<para>the node map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>binaryFunctor</parametername>
</parameternamelist>
<parameterdescription>
<para>the binary functor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="36" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="36" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1add73eee13b7a6f74f0ae6eac1a7c32bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1abc24027c855755008ba3694cc49999c2" kindref="member">value_type</ref></type>
        <definition>value_type nifty::graph::graph_maps::EdgeMapFromNodeMap&lt; GRAPH, NODE_MAP, BINARY_FUNCTOR &gt;::operator[]</definition>
        <argsstring>(const uint64_t edgeIndex) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const uint64_t</type>
          <declname>edgeIndex</declname>
        </param>
        <briefdescription>
<para>get the value for an edge </para>        </briefdescription>
        <detaileddescription>
<para>get the value for an edge by calling the binary functor. The functor is called with the node maps values at the enpoints of the edge.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>edgeIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the edge index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the edge map </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="56" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="56" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implicit edge map. </para>    </briefdescription>
    <detaileddescription>
<para>Convert a node map into an edge map by applying a binary functor to the node maps values.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GRAPH</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NODE_MAP</parametername>
</parameternamelist>
<parameterdescription>
<para>The node map. This can be a (const) reference or a value type (in) case of proxy objects </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BINARY_FUNCTOR</parametername>
</parameternamelist>
<parameterdescription>
<para>a binary functor.This can be a (const) reference or a value type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" line="22" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/edge_map_from_node_map.hxx" bodystart="22" bodyend="67"/>
    <listofallmembers>
      <member refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a1a28c3965c7288eeb0fab6a63c79f39e" prot="private" virt="non-virtual"><scope>nifty::graph::graph_maps::EdgeMapFromNodeMap</scope><name>binaryFunctor_</name></member>
      <member refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a0fbb6e9a54ecf31d27e13db4f274a6d1" prot="public" virt="non-virtual"><scope>nifty::graph::graph_maps::EdgeMapFromNodeMap</scope><name>BinaryFunctorType</name></member>
      <member refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1abf8972db1d22bc00d2afd5cf5cb0b6a3" prot="public" virt="non-virtual"><scope>nifty::graph::graph_maps::EdgeMapFromNodeMap</scope><name>EdgeMapFromNodeMap</name></member>
      <member refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a2c4a525ca59916ebe76951dbcde16d17" prot="private" virt="non-virtual"><scope>nifty::graph::graph_maps::EdgeMapFromNodeMap</scope><name>graph_</name></member>
      <member refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a551dfc3ef2c5293f5306420d129da574" prot="public" virt="non-virtual"><scope>nifty::graph::graph_maps::EdgeMapFromNodeMap</scope><name>GraphType</name></member>
      <member refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1a60821a3a3949243d90761304a78c9e6b" prot="private" virt="non-virtual"><scope>nifty::graph::graph_maps::EdgeMapFromNodeMap</scope><name>nodeMap_</name></member>
      <member refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1ad2639421843e9da9afe18b0b35a7317e" prot="public" virt="non-virtual"><scope>nifty::graph::graph_maps::EdgeMapFromNodeMap</scope><name>NodeMapType</name></member>
      <member refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1add73eee13b7a6f74f0ae6eac1a7c32bf" prot="public" virt="non-virtual"><scope>nifty::graph::graph_maps::EdgeMapFromNodeMap</scope><name>operator[]</name></member>
      <member refid="classnifty_1_1graph_1_1graph__maps_1_1EdgeMapFromNodeMap_1abc24027c855755008ba3694cc49999c2" prot="public" virt="non-virtual"><scope>nifty::graph::graph_maps::EdgeMapFromNodeMap</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

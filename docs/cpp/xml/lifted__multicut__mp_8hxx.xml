<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lifted__multicut__mp_8hxx" kind="file" language="C++">
    <compoundname>lifted_multicut_mp.hxx</compoundname>
    <includes refid="graph_2opt_2lifted__multicut_2lifted__multicut__objective_8hxx" local="yes">nifty/graph/opt/lifted_multicut/lifted_multicut_objective.hxx</includes>
    <includes refid="lifted__multicut__base_8hxx" local="yes">nifty/graph/opt/lifted_multicut/lifted_multicut_base.hxx</includes>
    <includes refid="lifted__multicut__greedy__additive_8hxx" local="yes">nifty/graph/opt/lifted_multicut/lifted_multicut_greedy_additive.hxx</includes>
    <includes refid="lifted__multicut__kernighan__lin_8hxx" local="yes">nifty/graph/opt/lifted_multicut/lifted_multicut_kernighan_lin.hxx</includes>
    <includes refid="ufd_8hxx" local="yes">nifty/ufd/ufd.hxx</includes>
    <includes local="yes">solvers/multicut/multicut.h</includes>
    <includes local="yes">visitors/standard_visitor.hxx</includes>
    <incdepgraph>
      <node id="3181">
        <label>atomic</label>
      </node>
      <node id="3177">
        <label>nifty/tools/const_iterator_range.hxx</label>
        <link refid="const__iterator__range_8hxx"/>
      </node>
      <node id="3144">
        <label>nifty/graph/opt/lifted_multicut/lifted_multicut_objective.hxx</label>
        <link refid="graph_2opt_2lifted__multicut_2lifted__multicut__objective_8hxx"/>
        <childnode refid="3145" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
        <childnode refid="3153" relation="include">
        </childnode>
        <childnode refid="3186" relation="include">
        </childnode>
        <childnode refid="3166" relation="include">
        </childnode>
        <childnode refid="3187" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3179" relation="include">
        </childnode>
      </node>
      <node id="3206">
        <label>iomanip</label>
      </node>
      <node id="3161">
        <label>functional</label>
      </node>
      <node id="3184">
        <label>queue</label>
      </node>
      <node id="3155">
        <label>boost/version.hpp</label>
      </node>
      <node id="3151">
        <label>limits</label>
      </node>
      <node id="3172">
        <label>iterator</label>
      </node>
      <node id="3211">
        <label>nifty/graph/opt/lifted_multicut/detail/lifted_twocut_kernighan_lin.hxx</label>
        <link refid="lifted__twocut__kernighan__lin_8hxx"/>
        <childnode refid="3206" relation="include">
        </childnode>
        <childnode refid="3160" relation="include">
        </childnode>
        <childnode refid="3207" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3190" relation="include">
        </childnode>
        <childnode refid="3201" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
        <childnode refid="3178" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3202" relation="include">
        </childnode>
        <childnode refid="3208" relation="include">
        </childnode>
      </node>
      <node id="3208">
        <label>nifty/graph/components.hxx</label>
        <link refid="components_8hxx"/>
        <childnode refid="3209" relation="include">
        </childnode>
        <childnode refid="3186" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
      </node>
      <node id="3147">
        <label>cstdint</label>
      </node>
      <node id="3198">
        <label>nifty/tools/logging.hxx</label>
        <link refid="logging_8hxx"/>
        <childnode refid="3170" relation="include">
        </childnode>
      </node>
      <node id="3205">
        <label>nifty/graph/opt/lifted_multicut/lifted_multicut_kernighan_lin.hxx</label>
        <link refid="lifted__multicut__kernighan__lin_8hxx"/>
        <childnode refid="3206" relation="include">
        </childnode>
        <childnode refid="3160" relation="include">
        </childnode>
        <childnode refid="3207" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3190" relation="include">
        </childnode>
        <childnode refid="3201" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
        <childnode refid="3178" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3202" relation="include">
        </childnode>
        <childnode refid="3208" relation="include">
        </childnode>
        <childnode refid="3210" relation="include">
        </childnode>
        <childnode refid="3211" relation="include">
        </childnode>
      </node>
      <node id="3202">
        <label>nifty/graph/edge_contraction_graph.hxx</label>
        <link refid="graph_2edge__contraction__graph_8hxx"/>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3203" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
        <childnode refid="3178" relation="include">
        </childnode>
      </node>
      <node id="3152">
        <label>cmath</label>
      </node>
      <node id="3169">
        <label>cassert</label>
      </node>
      <node id="3164">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="3148">
        <label>stdexcept</label>
      </node>
      <node id="3176">
        <label>numeric</label>
      </node>
      <node id="3163">
        <label>nifty/graph/undirected_graph_base.hxx</label>
        <link refid="undirected__graph__base_8hxx"/>
        <childnode refid="3164" relation="include">
        </childnode>
        <childnode refid="3165" relation="include">
        </childnode>
        <childnode refid="3166" relation="include">
        </childnode>
        <childnode refid="3177" relation="include">
        </childnode>
      </node>
      <node id="3178">
        <label>nifty/graph/detail/adjacency.hxx</label>
        <link refid="adjacency_8hxx"/>
      </node>
      <node id="3188">
        <label>nifty/graph/breadth_first_search.hxx</label>
        <link refid="breadth__first__search_8hxx"/>
        <childnode refid="3186" relation="include">
        </childnode>
        <childnode refid="3189" relation="include">
        </childnode>
      </node>
      <node id="3170">
        <label>string</label>
      </node>
      <node id="3213">
        <label>visitors/standard_visitor.hxx</label>
      </node>
      <node id="3158">
        <label>boost/iterator/counting_iterator.hpp</label>
      </node>
      <node id="3193">
        <label>nifty/exceptions/exceptions.hxx</label>
        <link refid="exceptions_8hxx"/>
        <childnode refid="3148" relation="include">
        </childnode>
      </node>
      <node id="3154">
        <label>map</label>
      </node>
      <node id="3210">
        <label>nifty/graph/subgraph_masks/subgraph_with_cut.hxx</label>
        <link refid="subgraph__with__cut_8hxx"/>
      </node>
      <node id="3207">
        <label>unordered_set</label>
      </node>
      <node id="3197">
        <label>nifty/tools/timer.hxx</label>
        <link refid="timer_8hxx"/>
        <childnode refid="3149" relation="include">
        </childnode>
        <childnode refid="3196" relation="include">
        </childnode>
        <childnode refid="3170" relation="include">
        </childnode>
      </node>
      <node id="3186">
        <label>nifty/graph/subgraph_mask.hxx</label>
        <link refid="subgraph__mask_8hxx"/>
      </node>
      <node id="3168">
        <label>nifty/marray/andres/marray.hxx</label>
        <link refid="andres_2marray_8hxx"/>
        <childnode refid="3169" relation="include">
        </childnode>
        <childnode refid="3145" relation="include">
        </childnode>
        <childnode refid="3148" relation="include">
        </childnode>
        <childnode refid="3151" relation="include">
        </childnode>
        <childnode refid="3170" relation="include">
        </childnode>
        <childnode refid="3149" relation="include">
        </childnode>
        <childnode refid="3171" relation="include">
        </childnode>
        <childnode refid="3172" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3173" relation="include">
        </childnode>
        <childnode refid="3174" relation="include">
        </childnode>
        <childnode refid="3175" relation="include">
        </childnode>
        <childnode refid="3176" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
      </node>
      <node id="3212">
        <label>solvers/multicut/multicut.h</label>
      </node>
      <node id="3191">
        <label>nifty/graph/opt/lifted_multicut/lifted_multicut_base.hxx</label>
        <link refid="lifted__multicut__base_8hxx"/>
        <childnode refid="3170" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3149" relation="include">
        </childnode>
        <childnode refid="3148" relation="include">
        </childnode>
        <childnode refid="3193" relation="include">
        </childnode>
        <childnode refid="3194" relation="include">
        </childnode>
      </node>
      <node id="3200">
        <label>random</label>
      </node>
      <node id="3185">
        <label>condition_variable</label>
      </node>
      <node id="3199">
        <label>nifty/graph/opt/lifted_multicut/lifted_multicut_greedy_additive.hxx</label>
        <link refid="lifted__multicut__greedy__additive_8hxx"/>
        <childnode refid="3200" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3201" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
        <childnode refid="3178" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3202" relation="include">
        </childnode>
      </node>
      <node id="3204">
        <label>nifty/ufd/ufd.hxx</label>
        <link refid="ufd_8hxx"/>
        <childnode refid="3145" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
      </node>
      <node id="3157">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="3182">
        <label>future</label>
      </node>
      <node id="3159">
        <label>nifty/container/flat_set.hxx</label>
        <link refid="flat__set_8hxx"/>
        <childnode refid="3145" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3160" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3162" relation="include">
        </childnode>
      </node>
      <node id="3201">
        <label>nifty/tools/changable_priority_queue.hxx</label>
        <link refid="changable__priority__queue_8hxx"/>
        <childnode refid="3184" relation="include">
        </childnode>
      </node>
      <node id="3190">
        <label>stack</label>
      </node>
      <node id="3150">
        <label>vector</label>
      </node>
      <node id="3187">
        <label>nifty/graph/opt/multicut/multicut_objective.hxx</label>
        <link refid="graph_2opt_2multicut_2multicut__objective_8hxx"/>
        <childnode refid="3146" relation="include">
        </childnode>
        <childnode refid="3186" relation="include">
        </childnode>
        <childnode refid="3166" relation="include">
        </childnode>
      </node>
      <node id="3165">
        <label>nifty/graph/graph_tags.hxx</label>
        <link refid="graph__tags_8hxx"/>
      </node>
      <node id="3156">
        <label>nifty/container/boost_flat_set.hxx</label>
        <link refid="boost__flat__set_8hxx"/>
        <childnode refid="3157" relation="include">
        </childnode>
      </node>
      <node id="3162">
        <label>utility</label>
      </node>
      <node id="3149">
        <label>sstream</label>
      </node>
      <node id="3146">
        <label>nifty/tools/runtime_check.hxx</label>
        <link refid="runtime__check_8hxx"/>
        <childnode refid="3147" relation="include">
        </childnode>
        <childnode refid="3148" relation="include">
        </childnode>
        <childnode refid="3149" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3151" relation="include">
        </childnode>
        <childnode refid="3152" relation="include">
        </childnode>
      </node>
      <node id="3143">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_mp.hxx</label>
        <link refid="lifted__multicut__mp_8hxx"/>
        <childnode refid="3144" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3199" relation="include">
        </childnode>
        <childnode refid="3205" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
        <childnode refid="3212" relation="include">
        </childnode>
        <childnode refid="3213" relation="include">
        </childnode>
      </node>
      <node id="3189">
        <label>nifty/graph/detail/search_impl.hxx</label>
        <link refid="search__impl_8hxx"/>
        <childnode refid="3184" relation="include">
        </childnode>
        <childnode refid="3190" relation="include">
        </childnode>
        <childnode refid="3186" relation="include">
        </childnode>
      </node>
      <node id="3194">
        <label>nifty/graph/opt/common/solver_base.hxx</label>
        <link refid="solver__base_8hxx"/>
        <childnode refid="3170" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3149" relation="include">
        </childnode>
        <childnode refid="3148" relation="include">
        </childnode>
        <childnode refid="3193" relation="include">
        </childnode>
        <childnode refid="3194" relation="include">
        </childnode>
        <childnode refid="3195" relation="include">
        </childnode>
      </node>
      <node id="3166">
        <label>nifty/graph/graph_maps.hxx</label>
        <link refid="graph__maps_8hxx"/>
        <childnode refid="3167" relation="include">
        </childnode>
      </node>
      <node id="3174">
        <label>iostream</label>
      </node>
      <node id="3145">
        <label>cstddef</label>
      </node>
      <node id="3209">
        <label>unordered_map</label>
      </node>
      <node id="3179">
        <label>nifty/parallel/threadpool.hxx</label>
        <link refid="threadpool_8hxx"/>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3180" relation="include">
        </childnode>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3182" relation="include">
        </childnode>
        <childnode refid="3183" relation="include">
        </childnode>
        <childnode refid="3184" relation="include">
        </childnode>
        <childnode refid="3185" relation="include">
        </childnode>
        <childnode refid="3148" relation="include">
        </childnode>
        <childnode refid="3152" relation="include">
        </childnode>
        <childnode refid="3164" relation="include">
        </childnode>
        <childnode refid="3158" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
      </node>
      <node id="3183">
        <label>mutex</label>
      </node>
      <node id="3196">
        <label>chrono</label>
      </node>
      <node id="3167">
        <label>nifty/marray/marray.hxx</label>
        <link refid="marray_8hxx"/>
        <childnode refid="3168" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
      </node>
      <node id="3153">
        <label>nifty/graph/undirected_list_graph.hxx</label>
        <link refid="graph_2undirected__list__graph_8hxx"/>
        <childnode refid="3145" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
        <childnode refid="3158" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3178" relation="include">
        </childnode>
        <childnode refid="3165" relation="include">
        </childnode>
        <childnode refid="3179" relation="include">
        </childnode>
      </node>
      <node id="3180">
        <label>thread</label>
      </node>
      <node id="3203">
        <label>type_traits</label>
      </node>
      <node id="3195">
        <label>nifty/graph/opt/common/visitor_base.hxx</label>
        <link refid="visitor__base_8hxx"/>
        <childnode refid="3145" relation="include">
        </childnode>
        <childnode refid="3170" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3149" relation="include">
        </childnode>
        <childnode refid="3174" relation="include">
        </childnode>
        <childnode refid="3196" relation="include">
        </childnode>
        <childnode refid="3197" relation="include">
        </childnode>
        <childnode refid="3198" relation="include">
        </childnode>
      </node>
      <node id="3173">
        <label>set</label>
      </node>
      <node id="3160">
        <label>algorithm</label>
      </node>
      <node id="3171">
        <label>cstring</label>
      </node>
      <node id="3175">
        <label>memory</label>
      </node>
      <node id="3192">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutMp</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutMp::LiftedRounder</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutMp::SettingsType</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph">nifty::graph</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph_1_1opt">nifty::graph::opt</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut">nifty::graph::opt::lifted_multicut</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graph_2opt_2lifted__multicut_2lifted__multicut__objective_8hxx" kindref="compound">nifty/graph/opt/lifted_multicut/lifted_multicut_objective.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lifted__multicut__base_8hxx" kindref="compound">nifty/graph/opt/lifted_multicut/lifted_multicut_base.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lifted__multicut__greedy__additive_8hxx" kindref="compound">nifty/graph/opt/lifted_multicut/lifted_multicut_greedy_additive.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lifted__multicut__kernighan__lin_8hxx" kindref="compound">nifty/graph/opt/lifted_multicut/lifted_multicut_kernighan_lin.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ufd_8hxx" kindref="compound">nifty/ufd/ufd.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LP_MP<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;solvers/multicut/multicut.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;visitors/standard_visitor.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">graph{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">opt{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lifted_multicut{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJECTIVE&gt;</highlight></codeline>
<codeline lineno="26" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" kindref="compound">LiftedMulticutMp</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutBase" kindref="compound">LiftedMulticutBase</ref>&lt;OBJECTIVE&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a7946ba353b86ff043eff57fd75513b81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OBJECTIVE<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a7946ba353b86ff043eff57fd75513b81" kindref="member">ObjectiveType</ref>;</highlight></codeline>
<codeline lineno="31" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a7e49c98a298643cc17c1732827b64243" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutBase" kindref="compound">LiftedMulticutBase&lt;ObjectiveType&gt;</ref><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a7e49c98a298643cc17c1732827b64243" kindref="member">BaseType</ref>;</highlight></codeline>
<codeline lineno="32" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a5bcaa1eb387ff68922510b6f2e450f7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectiveType::GraphType<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a5bcaa1eb387ff68922510b6f2e450f7f" kindref="member">GraphType</ref>;</highlight></codeline>
<codeline lineno="33" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a1d5aafa1c0d8788834f959edd40f17e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectiveType::LiftedGraphType<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a1d5aafa1c0d8788834f959edd40f17e7" kindref="member">LiftedGraphType</ref>;</highlight></codeline>
<codeline lineno="34" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a8169f3c3105c3179ae7a2881502826bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1SolverBase_1ad9932afb08dd17d375de4b15da9ffaa6" kindref="member">BaseType::VisitorBaseType</ref><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a8169f3c3105c3179ae7a2881502826bd" kindref="member">VisitorBaseType</ref>;</highlight></codeline>
<codeline lineno="35" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1adcaaef01d0a495768cb27f4b6f20c8e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1VisitorProxy" kindref="compound">BaseType::VisitorProxyType</ref><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1adcaaef01d0a495768cb27f4b6f20c8e1" kindref="member">VisitorProxy</ref>;</highlight></codeline>
<codeline lineno="36" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a98651524f908efa229d69761f4fa5491" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1SolverBase_1abefd51561de2fd009f6bed6bef6009ea" kindref="member">BaseType::NodeLabelsType</ref><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a98651524f908efa229d69761f4fa5491" kindref="member">NodeLabels</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>factory<sp/>for<sp/>the<sp/>lifted<sp/>primal<sp/>rounder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a5631d9599ac12e7a2541b89da09d3782" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1SolverFactoryBase" kindref="compound">nifty::graph::opt::common::SolverFactoryBase&lt;BaseType&gt;</ref><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a5631d9599ac12e7a2541b89da09d3782" kindref="member">LmcFactoryBase</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder" kindref="compound">LiftedRounder</ref>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1ab554fdcb105127764221d744665a12fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph" kindref="compound">UndirectedGraph&lt;&gt;</ref><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1ab554fdcb105127764221d744665a12fc" kindref="member">GraphType</ref>;</highlight></codeline>
<codeline lineno="44" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1aba77dfcceab7f0a4a92e6875c9807605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjective" kindref="compound">LiftedMulticutObjective&lt;GraphType, typename ObjectiveType::WeightType&gt;</ref><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1aba77dfcceab7f0a4a92e6875c9807605" kindref="member">PrimalRounderObjectiveType</ref>;</highlight></codeline>
<codeline lineno="45" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a4f36e999999e10b1a2c4a78d724ee847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutBase" kindref="compound">LiftedMulticutBase&lt;PrimalRounderObjectiveType&gt;</ref><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a4f36e999999e10b1a2c4a78d724ee847" kindref="member">PrimalRounderBaseType</ref>;</highlight></codeline>
<codeline lineno="46" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a38f30577dd1d5ec834fabb297cd97f70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph" kindref="compound">PrimalRounderObjectiveType::LiftedGraphType</ref><sp/><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a38f30577dd1d5ec834fabb297cd97f70" kindref="member">PrimalRounderLiftedGraphType</ref>;</highlight></codeline>
<codeline lineno="47" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1ab6b004c812de6e59bf80574a15ad9043" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1SolverBase_1abefd51561de2fd009f6bed6bef6009ea" kindref="member">PrimalRounderBaseType::NodeLabelsType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1ab6b004c812de6e59bf80574a15ad9043" kindref="member">PrimalRounderNodeLabels</ref>;</highlight></codeline>
<codeline lineno="48" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a0b0e44f6ebf431a6776874d27243c11d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1SolverFactoryBase" kindref="compound">nifty::graph::opt::common::SolverFactoryBase&lt;PrimalRounderBaseType&gt;</ref><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a0b0e44f6ebf431a6776874d27243c11d" kindref="member">PrimalRounderLmcFactoryBase</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1aab639fd39dbaace09556b329a93e844d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1aab639fd39dbaace09556b329a93e844d" kindref="member">LiftedRounder</ref>(std::shared_ptr&lt;PrimalRounderLmcFactoryBase&gt;<sp/>factory,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>greedyWarmstart)<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>factory_(factory),<sp/>greedyWarmstart_(greedyWarmstart)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>do<sp/>we<sp/>have<sp/>to<sp/>call<sp/>by<sp/>value<sp/>here<sp/>due<sp/>to<sp/>using<sp/>async<sp/>or<sp/>could<sp/>we<sp/>also<sp/>use<sp/>a<sp/>call<sp/>by<sp/>refernce?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>need<sp/>to<sp/>change<sp/>between<sp/>between<sp/>edge<sp/>and<sp/>node<sp/>labelings<sp/>-&gt;<sp/>could<sp/>be<sp/>done<sp/>more<sp/>efficient<sp/>?!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a39b672ef078607429c3a089dd83f8b9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a39b672ef078607429c3a089dd83f8b9c" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GraphType<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>originalGraph,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrimalRounderLiftedGraphType<sp/>&amp;&amp;<sp/><sp/><sp/><sp/>liftedGraph,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>&amp;&amp;<sp/>edgeValues</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/>labeling(edgeValues.size(),<sp/>0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(originalGraph.numberOfEdges()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nLocalEdges<sp/>=<sp/>originalGraph.numberOfEdges();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrimalRounderObjectiveType<sp/>obj(originalGraph);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>local<sp/>costs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>edgeId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;edgeId<sp/>&lt;<sp/>nLocalEdges;<sp/>++edgeId)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>uv<sp/>=<sp/>originalGraph.uv(edgeId);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjective_1ace9967d2de2017378d8733bba631f120" kindref="member">setCost</ref>(uv.first,<sp/>uv.second,<sp/>edgeValues[edgeId]);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>lifted<sp/>costs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;edgeId<sp/>&lt;<sp/>nLocalEdges<sp/>+<sp/>liftedGraph.numberOfEdges();<sp/>++edgeId)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>uv<sp/>=<sp/>liftedGraph.uv(edgeId<sp/>-<sp/>nLocalEdges);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjective_1ace9967d2de2017378d8733bba631f120" kindref="member">setCost</ref>(uv.first,<sp/>uv.second,<sp/>edgeValues[edgeId]);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrimalRounderNodeLabels<sp/>nodeLabels(originalGraph.numberOfNodes());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(greedyWarmstart_)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutGreedyAdditive" kindref="compound">LiftedMulticutGreedyAdditive&lt;PrimalRounderObjectiveType&gt;</ref><sp/>greedy(obj);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>greedy.<ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutGreedyAdditive_1a789ec7244197f382b320f72606b50a8e" kindref="member">optimize</ref>(nodeLabels,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>solverPtr<sp/>=<sp/>factory_-&gt;create(obj);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;compute<sp/>lifted<sp/>multicut<sp/>primal<sp/>with<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(greedyWarmstart_<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;GAEC<sp/>+<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>solverPtr-&gt;name()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverPtr-&gt;optimize(nodeLabels,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>solverPtr;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>labeling<sp/>to<sp/>edge<sp/>labeling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eId<sp/>=<sp/>0;<sp/>eId<sp/>&lt;<sp/>edgeValues.size();<sp/>++eId)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>uv<sp/>=<sp/>(eId<sp/>&lt;<sp/>nLocalEdges)<sp/>?<sp/>originalGraph.uv(eId)<sp/>:<sp/>liftedGraph.uv(<sp/>eId<sp/>-<sp/>nLocalEdges<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labeling[eId]<sp/>=<sp/>nodeLabels[uv.first]<sp/>!=<sp/>nodeLabels[uv.second];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>labeling;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dummy<sp/>implementation<sp/>to<sp/>work<sp/>with<sp/>LP_MP::MulticutConstructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a3436e1f7fc3d6b910adb43dcdf87ed20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a3436e1f7fc3d6b910adb43dcdf87ed20" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GraphType<sp/>&amp;&amp;,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>&amp;&amp;)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;char&gt;();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a1289836f2e3664ef5a186cfefa1b5909" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder_1a1289836f2e3664ef5a186cfefa1b5909" kindref="member">name</ref>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;LiftedRounder&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;PrimalRounderLmcFactoryBase&gt;<sp/>factory_;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>greedyWarmstart_;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a001fa87667c60e36d940d411c59fe2d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>LP_MP::FMC_LIFTED_MULTICUT&lt;LiftedRounder&gt;<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a001fa87667c60e36d940d411c59fe2d0" kindref="member">FMC</ref>;</highlight></codeline>
<codeline lineno="120" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1ab91bee4414d7854c428bba8f7aadac1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>LP_MP::Solver&lt;FMC,LP_MP::LP,LP_MP::StandardTighteningVisitor,LiftedRounder&gt;<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1ab91bee4414d7854c428bba8f7aadac1f" kindref="member">SolverBase</ref>;</highlight></codeline>
<codeline lineno="121" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a6ff7bb4eee8d2296d5a6e38340bdd90e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>LP_MP::ProblemConstructorRoundingSolver&lt;SolverBase&gt;<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a6ff7bb4eee8d2296d5a6e38340bdd90e" kindref="member">SolverType</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>LP_MP<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType" kindref="compound">SettingsType</ref>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lifted<sp/>multicut<sp/>factory<sp/>for<sp/>the<sp/>primal<sp/>rounder<sp/>used<sp/>in<sp/>lp_mp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1abe9e5dc558c71c474c7a2f5ab38bd256" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;typename<sp/>LiftedRounder::PrimalRounderLmcFactoryBase&gt;<sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1abe9e5dc558c71c474c7a2f5ab38bd256" kindref="member">lmcFactory</ref>;</highlight></codeline>
<codeline lineno="127" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a2bd88e16648bdf8959238305dcda0524" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>greedyWarmstart{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>for<sp/>lp_mp<sp/>solver<sp/>TODO<sp/>need<sp/>better<sp/>(non-completely-guessed...)<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1adb25b402176028edc80169cf0774c5c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tightenSlope{0.05};</highlight></codeline>
<codeline lineno="130" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a3a83018d61f0f231c595e6f3b43221cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tightenMinDualImprovementInterval{0};</highlight></codeline>
<codeline lineno="131" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a419801b719896f59307115e740c89afd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tightenMinDualImprovement{0.};</highlight></codeline>
<codeline lineno="132" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1ad43a7513dd5ebfb599e4dbcae61bf7c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tightenConstraintsPercentage{0.1};</highlight></codeline>
<codeline lineno="133" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a129e5c22cd9324d4f44ec50a8c5d824b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tightenConstraintsMax{0};</highlight></codeline>
<codeline lineno="134" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a60db61fd98320f01514d44c4690dc0f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tightenInterval{10};</highlight></codeline>
<codeline lineno="135" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1afc1227c486a52ed1149e41ca7ac6d31a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tightenIteration{100};</highlight></codeline>
<codeline lineno="136" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a5d0e5e249301159cdef50b1a84a338f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tightenReparametrization{</highlight><highlight class="stringliteral">&quot;anisotropic&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="137" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a1f696d0d73ee96c1ab62a8125711eb97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>roundingReparametrization{</highlight><highlight class="stringliteral">&quot;anisotropic&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="138" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1add4648833dc7450d06533e6ee25e90f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>standardReparametrization{</highlight><highlight class="stringliteral">&quot;anisotropic&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="139" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a8fbd9456ec051bf5501644f28b61f6bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tighten{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="140" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1abe75f8037cb218123caa236f3a640847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minDualImprovementInterval{0};</highlight></codeline>
<codeline lineno="141" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a9d93b36ae7a2994ee40332cbfc22647f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minDualImprovement{0.};</highlight></codeline>
<codeline lineno="142" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a4ffbb3ad3be424f832077852eb6007dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lowerBoundComputationInterval{1};</highlight></codeline>
<codeline lineno="143" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a1a2f8106e7cc15b8ecc1e1fd1038f9dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>primalComputationInterval{5};</highlight></codeline>
<codeline lineno="144" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a5eafcdff15e98676b8115e56f148a527" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>timeout{0};</highlight></codeline>
<codeline lineno="145" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1aec263bc6889a79aea737a4ead9c68bfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIter{1000};</highlight></codeline>
<codeline lineno="146" refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1af5f475e74a81aca738a16e30d7889a10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numLpThreads{1};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1adca237320fdfa68a56960fbe01bd6000" kindref="member">LiftedMulticutMp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectiveType<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1af2324c385248f1400e25c90adb80a7b5" kindref="member">objective</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType" kindref="compound">SettingsType</ref><sp/>&amp;<sp/>settings<sp/>=<sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType" kindref="compound">SettingsType</ref>());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a8892a52bab4dcae8f1926081fa627488" kindref="member">optimize</ref>(NodeLabels<sp/>&amp;<sp/>nodeLabels,<sp/>VisitorBaseType<sp/>*<sp/>visitor);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a9870ccd84f056f6790b1ab3a52ae9587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a9870ccd84f056f6790b1ab3a52ae9587" kindref="member">~LiftedMulticutMp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mpSolver_;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1af2324c385248f1400e25c90adb80a7b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectiveType<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1af2324c385248f1400e25c90adb80a7b5" kindref="member">objective</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objective_;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a8038995b41fed867522a684985737020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NodeLabels<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a8038995b41fed867522a684985737020" kindref="member">currentBestNodeLabels</ref>()<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*currentBest_;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a5c218aa3ae258bb4c62a1b1c25449fba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a5c218aa3ae258bb4c62a1b1c25449fba" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;LiftedMulticutMp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initializeMp();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nodeLabeling();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>toOptionsVector()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectiveType<sp/>&amp;<sp/>objective_;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType" kindref="compound">SettingsType</ref><sp/>settings_;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/>graph_;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LiftedGraphType<sp/>&amp;<sp/>liftedGraph_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeLabels<sp/>*<sp/>currentBest_;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SolverType<sp/>*<sp/>mpSolver_;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1ufd_1_1Ufd" kindref="compound">ufd::Ufd&lt;uint64_t&gt;</ref><sp/>ufd_;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJECTIVE&gt;</highlight></codeline>
<codeline lineno="187" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1adca237320fdfa68a56960fbe01bd6000" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1adca237320fdfa68a56960fbe01bd6000" kindref="member">LiftedMulticutMp&lt;OBJECTIVE&gt;::LiftedMulticutMp</ref>(</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OBJECTIVE<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1af2324c385248f1400e25c90adb80a7b5" kindref="member">objective</ref>,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType" kindref="compound">SettingsType</ref><sp/>&amp;<sp/>settings)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>objective_(objective),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings_(settings),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_(objective.graph()),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liftedGraph_(objective.liftedGraph()),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBest_(nullptr),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpSolver_(nullptr),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ufd_(graph_.numberOfNodes())</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1abe9e5dc558c71c474c7a2f5ab38bd256" kindref="member">lmcFactory</ref>))<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjective" kindref="compound">LiftedRounder::PrimalRounderObjectiveType</ref><sp/>PrimalRounderObjectiveType;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutKernighanLin" kindref="compound">LiftedMulticutKernighanLin&lt;PrimalRounderObjectiveType&gt;</ref><sp/>DefaultSolverType;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1SolverFactory" kindref="compound">nifty::graph::opt::common::SolverFactory&lt;DefaultSolverType&gt;</ref><sp/>DefaultFactoryType;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1abe9e5dc558c71c474c7a2f5ab38bd256" kindref="member">lmcFactory</ref><sp/>=<sp/>std::make_shared&lt;DefaultFactoryType&gt;();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpSolver_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a6ff7bb4eee8d2296d5a6e38340bdd90e" kindref="member">SolverType</ref>(<sp/>toOptionsVector(),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1LiftedRounder" kindref="compound">LiftedRounder</ref>(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1abe9e5dc558c71c474c7a2f5ab38bd256" kindref="member">lmcFactory</ref>,<sp/>settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a2bd88e16648bdf8959238305dcda0524" kindref="member">greedyWarmstart</ref>)<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;initializeMp();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJECTIVE&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" kindref="compound">LiftedMulticutMp&lt;OBJECTIVE&gt;::</ref></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" kindref="compound">    initializeMp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(graph_.numberOfEdges()!=<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>constructor<sp/>=<sp/>(*mpSolver_).template<sp/>GetProblemConstructor&lt;0&gt;();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>weights<sp/>=<sp/>objective_.weights();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nLocalEdges<sp/>=<sp/>graph_.numberOfEdges();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>edgeId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;edgeId<sp/>&lt;<sp/>nLocalEdges;<sp/>++edgeId)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>uv<sp/>=<sp/>graph_.uv(edgeId);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructor.AddUnaryFactor(uv.first,<sp/>uv.second,<sp/>weights[edgeId]);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;edgeId<sp/>&lt;<sp/>nLocalEdges<sp/>+<sp/>liftedGraph_.numberOfEdges();<sp/>++edgeId)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>uv<sp/>=<sp/>liftedGraph_.uv(edgeId<sp/>-<sp/>nLocalEdges);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructor.AddLiftedUnaryFactor(uv.first,<sp/>uv.second,<sp/>weights[edgeId]);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>options<sp/>in<sp/>correct<sp/>format<sp/>for<sp/>the<sp/>LP_MP<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>would<sp/>be<sp/>bettter<sp/>to<sp/>have<sp/>a<sp/>decent<sp/>interface<sp/>for<sp/>LP_MP<sp/>and<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>rid<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJECTIVE&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" kindref="compound">LiftedMulticutMp&lt;OBJECTIVE&gt;::</ref></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" kindref="compound">    toOptionsVector</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>options<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;export_multicut&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>name<sp/>of<sp/>pyfile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-i&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>empty<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--primalComputationInterval&quot;</highlight><highlight class="normal">,<sp/>std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a1a2f8106e7cc15b8ecc1e1fd1038f9dc" kindref="member">primalComputationInterval</ref>),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--standardReparametrization&quot;</highlight><highlight class="normal">,<sp/>settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1add4648833dc7450d06533e6ee25e90f2" kindref="member">standardReparametrization</ref>,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--roundingReparametrization&quot;</highlight><highlight class="normal">,<sp/>settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a1f696d0d73ee96c1ab62a8125711eb97" kindref="member">roundingReparametrization</ref>,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--tightenReparametrization&quot;</highlight><highlight class="normal">,<sp/><sp/>settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a5d0e5e249301159cdef50b1a84a338f3" kindref="member">tightenReparametrization</ref>,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--tightenInterval&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a60db61fd98320f01514d44c4690dc0f8" kindref="member">tightenInterval</ref>),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--tightenIteration&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1afc1227c486a52ed1149e41ca7ac6d31a" kindref="member">tightenIteration</ref>),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--tightenSlope&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1adb25b402176028edc80169cf0774c5c6" kindref="member">tightenSlope</ref>),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--tightenConstraintsPercentage&quot;</highlight><highlight class="normal">,<sp/>std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1ad43a7513dd5ebfb599e4dbcae61bf7c5" kindref="member">tightenConstraintsPercentage</ref>),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--maxIter&quot;</highlight><highlight class="normal">,<sp/>std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1aec263bc6889a79aea737a4ead9c68bfa" kindref="member">maxIter</ref>),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--lowerBoundComputationInterval&quot;</highlight><highlight class="normal">,<sp/>std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a4ffbb3ad3be424f832077852eb6007dc" kindref="member">lowerBoundComputationInterval</ref>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,</highlight><highlight class="stringliteral">&quot;--numLpThreads&quot;</highlight><highlight class="normal">,<sp/>std::to_string(numLpThreads)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a8fbd9456ec051bf5501644f28b61f6bf" kindref="member">tighten</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(</highlight><highlight class="stringliteral">&quot;--tighten&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a9d93b36ae7a2994ee40332cbfc22647f" kindref="member">minDualImprovement</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(</highlight><highlight class="stringliteral">&quot;--minDualImprovement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a9d93b36ae7a2994ee40332cbfc22647f" kindref="member">minDualImprovement</ref>));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1abe75f8037cb218123caa236f3a640847" kindref="member">minDualImprovementInterval</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(</highlight><highlight class="stringliteral">&quot;--minDualImprovementInterval&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1abe75f8037cb218123caa236f3a640847" kindref="member">minDualImprovementInterval</ref>));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a5eafcdff15e98676b8115e56f148a527" kindref="member">timeout</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(</highlight><highlight class="stringliteral">&quot;--timeout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a5eafcdff15e98676b8115e56f148a527" kindref="member">timeout</ref>));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a129e5c22cd9324d4f44ec50a8c5d824b" kindref="member">tightenConstraintsMax</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(</highlight><highlight class="stringliteral">&quot;--tightenConstraintsMax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a129e5c22cd9324d4f44ec50a8c5d824b" kindref="member">tightenConstraintsMax</ref>));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a419801b719896f59307115e740c89afd" kindref="member">tightenMinDualImprovement</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(</highlight><highlight class="stringliteral">&quot;--tightenMinDualImprovement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a419801b719896f59307115e740c89afd" kindref="member">tightenMinDualImprovement</ref>));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a3a83018d61f0f231c595e6f3b43221cf" kindref="member">tightenMinDualImprovementInterval</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(</highlight><highlight class="stringliteral">&quot;--tightenMinDualImprovementInterval&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.push_back(std::to_string(settings_.<ref refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1_1SettingsType_1a3a83018d61f0f231c595e6f3b43221cf" kindref="member">tightenMinDualImprovementInterval</ref>));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>maybe<sp/>this<sp/>can<sp/>be<sp/>done<sp/>more<sp/>efficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(if<sp/>we<sp/>only<sp/>call<sp/>it<sp/>once,<sp/>this<sp/>should<sp/>be<sp/>fine,<sp/>but<sp/>if<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>call<sp/>this<sp/>more<sp/>often<sp/>for<sp/>some<sp/>reason,<sp/>this<sp/>might<sp/>get<sp/>expensive)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJECTIVE&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" kindref="compound">LiftedMulticutMp&lt;OBJECTIVE&gt;::</ref></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" kindref="compound">    nodeLabeling</ref>()<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ufd_.<ref refid="classnifty_1_1ufd_1_1Ufd_1ab88f28136d563c4605960bf9aef2d86f" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>constructor<sp/>=<sp/>(*mpSolver_).template<sp/>GetProblemConstructor&lt;0&gt;();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>:<sp/>graph_.edges()){</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>uv<sp/>=<sp/>graph_.uv(e);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cut<sp/>=<sp/>constructor.get_edge_label(uv.first,<sp/>uv.second);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cut){</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ufd_.<ref refid="classnifty_1_1ufd_1_1Ufd_1aeb49fa316c1956ce636e68e96e003d2f" kindref="member">merge</ref>(uv.first,<sp/>uv.second);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ufd_.<ref refid="classnifty_1_1ufd_1_1Ufd_1ad2010b31862f3d11756e0a5a510499f4" kindref="member">elementLabeling</ref>(currentBest_-&gt;begin());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>proper<sp/>visitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJECTIVE&gt;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a8892a52bab4dcae8f1926081fa627488" kindref="member">LiftedMulticutMp&lt;OBJECTIVE&gt;::</ref></highlight></codeline>
<codeline lineno="309" refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a8892a52bab4dcae8f1926081fa627488" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a8892a52bab4dcae8f1926081fa627488" kindref="member">    optimize</ref>(</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a98651524f908efa229d69761f4fa5491" kindref="member">NodeLabels</ref><sp/>&amp;<sp/>nodeLabels,<sp/><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp_1a8169f3c3105c3179ae7a2881502826bd" kindref="member">VisitorBaseType</ref><sp/>*<sp/>visitor</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1VisitorProxy" kindref="compound">VisitorProxy</ref><sp/>visitorProxy(visitor);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>starting<sp/>point<sp/>as<sp/>current<sp/>best</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBest_<sp/>=<sp/>&amp;nodeLabels;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>for<sp/>now<sp/>the<sp/>visitor<sp/>is<sp/>doing<sp/>nothing,<sp/>but<sp/>we<sp/>should<sp/>implement<sp/>one,<sp/>that<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compatible<sp/>with<sp/>lp_mp<sp/>visitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitorProxy.<ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1VisitorProxy_1ad3db841200cd5c415c4d8b9e675731de" kindref="member">begin</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(graph_.numberOfEdges()&gt;0){</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpSolver_-&gt;Solve();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeLabeling();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitorProxy.<ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1VisitorProxy_1ad7a669455e7aed7d461cb5451c145a85" kindref="member">end</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::graph::opt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lifted_multicut</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_mp.hxx"/>
  </compounddef>
</doxygen>

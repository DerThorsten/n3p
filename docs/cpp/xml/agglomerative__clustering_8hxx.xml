<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="agglomerative__clustering_8hxx" kind="file" language="C++">
    <compoundname>agglomerative_clustering.hxx</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="subgraph__mask_8hxx" local="yes">nifty/graph/subgraph_mask.hxx</includes>
    <includedby refid="lifted__graph__features_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/lifted_graph_features.hxx</includedby>
    <includedby refid="export__agglomerative__clustering_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/python/graph/agglo/export_agglomerative_clustering.hxx</includedby>
    <incdepgraph>
      <node id="7091">
        <label>nifty/graph/subgraph_mask.hxx</label>
        <link refid="subgraph__mask_8hxx"/>
      </node>
      <node id="7089">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/agglomerative_clustering.hxx</label>
        <link refid="agglomerative_clustering.hxx"/>
        <childnode refid="7090" relation="include">
        </childnode>
        <childnode refid="7091" relation="include">
        </childnode>
      </node>
      <node id="7090">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7092">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/agglomerative_clustering.hxx</label>
        <link refid="agglomerative_clustering.hxx"/>
        <childnode refid="7093" relation="include">
        </childnode>
        <childnode refid="7094" relation="include">
        </childnode>
      </node>
      <node id="7094">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/agglo/export_agglomerative_clustering.hxx</label>
        <link refid="export__agglomerative__clustering_8hxx"/>
      </node>
      <node id="7093">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/lifted_graph_features.hxx</label>
        <link refid="lifted__graph__features_8hxx"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering" prot="public">nifty::graph::agglo::AgglomerativeClustering</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph">nifty::graph</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph_1_1agglo">nifty::graph::agglo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="subgraph__mask_8hxx" kindref="compound">nifty/graph/subgraph_mask.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref>{</highlight></codeline>
<codeline lineno="7" refid="namespacenifty_1_1graph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">graph{</highlight></codeline>
<codeline lineno="8" refid="namespacenifty_1_1graph_1_1agglo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">agglo{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CLUSTER_POLICY&gt;</highlight></codeline>
<codeline lineno="13" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering" kindref="compound">AgglomerativeClustering</ref>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a3a678ecd37725f2c0f8ec56857768034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CLUSTER_POLICY<sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a3a678ecd37725f2c0f8ec56857768034" kindref="member">ClusterPolicyType</ref>;</highlight></codeline>
<codeline lineno="16" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1ad271a88b3736ec7b3d6a4e47e718828a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ClusterPolicyType::EdgeContractionGraphType::WithEdgeUfd<sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1ad271a88b3736ec7b3d6a4e47e718828a" kindref="member">WithEdgeUfd</ref>;</highlight></codeline>
<codeline lineno="17" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a0c735105592b55c036be76e3d7fc735f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ClusterPolicyType::GraphType<sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a0c735105592b55c036be76e3d7fc735f" kindref="member">GraphType</ref>;</highlight></codeline>
<codeline lineno="18" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1ab50801119fbdb9ed78884a64f872e1d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ClusterPolicyType::EdgeContractionGraphType<sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1ab50801119fbdb9ed78884a64f872e1d8" kindref="member">EdgeContractionGraphType</ref>;</highlight></codeline>
<codeline lineno="19" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a4c1ae55dc3568df3f2e0ffe9e34963df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a4c1ae55dc3568df3f2e0ffe9e34963df" kindref="member">AgglomerativeClustering</ref>(ClusterPolicyType<sp/>&amp;<sp/>clusterPolicy)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><sp/>clusterPolicy_(clusterPolicy){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a163e9745cbaf077ea1e65750bd33eadb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a163e9745cbaf077ea1e65750bd33eadb" kindref="member">run</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose=</highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!clusterPolicy_.isDone()){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterPolicy_.edgeContractionGraph().numberOfEdges()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edgeToContractNextAndPriority<sp/>=<sp/>clusterPolicy_.edgeToContractNext();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edgeToContractNext<sp/>=<sp/>edgeToContractNextAndPriority.first;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>priority<sp/>=<sp/>edgeToContractNextAndPriority.second;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verbose){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>cgraph<sp/>=<sp/>clusterPolicy_.edgeContractionGraph();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Nodes<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;cgraph.numberOfNodes()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>p=&quot;</highlight><highlight class="normal">&lt;&lt;priority&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterPolicy_.edgeContractionGraph().contractEdge(edgeToContractNext);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_DENDROGRAM_HEIGHT&gt;</highlight></codeline>
<codeline lineno="44" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1adf2c89066a4796c32e722c7244b37f3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1adf2c89066a4796c32e722c7244b37f3c" kindref="member">runAndGetDendrogramHeight</ref>(EDGE_DENDROGRAM_HEIGHT<sp/>&amp;<sp/>dendrogramHeight,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose=</highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!clusterPolicy_.isDone()){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edgeToContractNextAndPriority<sp/>=<sp/>clusterPolicy_.edgeToContractNext();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edgeToContractNext<sp/>=<sp/>edgeToContractNextAndPriority.first;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>priority<sp/>=<sp/>edgeToContractNextAndPriority.second;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dendrogramHeight[edgeToContractNext]<sp/>=<sp/>priority;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verbose){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>cgraph<sp/>=<sp/>clusterPolicy_.edgeContractionGraph();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Nodes<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;cgraph.numberOfNodes()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>p=&quot;</highlight><highlight class="normal">&lt;&lt;priority&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterPolicy_.edgeContractionGraph().contractEdge(edgeToContractNext);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a34c94614c65bceb4adb7e405b15b7773" kindref="member">ucmTransform</ref>(dendrogramHeight);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_MAP&gt;</highlight></codeline>
<codeline lineno="63" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a34c94614c65bceb4adb7e405b15b7773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a34c94614c65bceb4adb7e405b15b7773" kindref="member">ucmTransform</ref>(EDGE_MAP<sp/>&amp;<sp/>edgeMap)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>cgraph<sp/>=<sp/>clusterPolicy_.edgeContractionGraph();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1aa1dca426965fb41a39ee75f9dace3b67" kindref="member">graph</ref>().forEachEdge([&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reprEdge<sp/>=<sp/>cgraph.findRepresentativeEdge(edge);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMap[edge]<sp/>=<sp/>edgeMap[reprEdge];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_MAP,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_MAP_OUT&gt;</highlight></codeline>
<codeline lineno="75" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a020daa26353c691b12e1173aa34c25d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1a020daa26353c691b12e1173aa34c25d3" kindref="member">ucmTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EDGE_MAP<sp/>&amp;<sp/>edgeMap,<sp/>EDGE_MAP_OUT<sp/>&amp;<sp/>edgeMapOut)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>cgraph<sp/>=<sp/>clusterPolicy_.edgeContractionGraph();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1aa1dca426965fb41a39ee75f9dace3b67" kindref="member">graph</ref>().forEachEdge([&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>edge){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reprEdge<sp/>=<sp/>cgraph.findRepresentativeEdge(edge);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMapOut[edge]<sp/>=<sp/>edgeMap[reprEdge];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1aa1dca426965fb41a39ee75f9dace3b67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GraphType<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1aa1dca426965fb41a39ee75f9dace3b67" kindref="member">graph</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusterPolicy_.edgeContractionGraph().graph();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_MAP&gt;</highlight></codeline>
<codeline lineno="92" refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1af6c65243b35df8c69e777261cbb88115" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1af6c65243b35df8c69e777261cbb88115" kindref="member">result</ref>(NODE_MAP<sp/>&amp;<sp/>nodeMap)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>cgraph<sp/>=<sp/>clusterPolicy_.edgeContractionGraph();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1aa1dca426965fb41a39ee75f9dace3b67" kindref="member">graph</ref><sp/>=<sp/>cgraph.graph();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>:<sp/><ref refid="classnifty_1_1graph_1_1agglo_1_1AgglomerativeClustering_1aa1dca426965fb41a39ee75f9dace3b67" kindref="member">graph</ref>.nodes()){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeMap[node]<sp/>=<sp/>cgraph.findRepresentativeNode(node);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ClusterPolicyType<sp/>&amp;<sp/>clusterPolicy_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>agglo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/agglo/agglomerative_clustering.hxx"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="greedy__additive__proposals_8hxx" kind="file" language="C++">
    <compoundname>greedy_additive_proposals.hxx</compoundname>
    <includes local="no">string</includes>
    <includes refid="runtime__check_8hxx" local="yes">nifty/tools/runtime_check.hxx</includes>
    <includes refid="multicut__base_8hxx" local="yes">nifty/graph/optimization/multicut/multicut_base.hxx</includes>
    <includes refid="multicut__greedy__additive_8hxx" local="yes">nifty/graph/optimization/multicut/multicut_greedy_additive.hxx</includes>
    <incdepgraph>
      <node id="10126">
        <label>nifty/tools/const_iterator_range.hxx</label>
        <link refid="const__iterator__range_8hxx"/>
      </node>
      <node id="10107">
        <label>functional</label>
      </node>
      <node id="10109">
        <label>queue</label>
      </node>
      <node id="10092">
        <label>limits</label>
      </node>
      <node id="10122">
        <label>iterator</label>
      </node>
      <node id="10088">
        <label>cstdint</label>
      </node>
      <node id="10103">
        <label>nifty/tools/logging.hxx</label>
        <link refid="logging_8hxx"/>
        <childnode refid="10086" relation="include">
        </childnode>
      </node>
      <node id="10111">
        <label>nifty/graph/edge_contraction_graph.hxx</label>
        <link refid="graph_2edge__contraction__graph_8hxx"/>
        <childnode refid="10107" relation="include">
        </childnode>
        <childnode refid="10112" relation="include">
        </childnode>
        <childnode refid="10113" relation="include">
        </childnode>
        <childnode refid="10114" relation="include">
        </childnode>
        <childnode refid="10127" relation="include">
        </childnode>
        <childnode refid="10087" relation="include">
        </childnode>
        <childnode refid="10130" relation="include">
        </childnode>
        <childnode refid="10110" relation="include">
        </childnode>
      </node>
      <node id="10105">
        <label>nifty/graph/optimization/multicut/multicut_greedy_additive.hxx</label>
        <link refid="multicut__greedy__additive_8hxx"/>
        <childnode refid="10106" relation="include">
        </childnode>
        <childnode refid="10107" relation="include">
        </childnode>
        <childnode refid="10108" relation="include">
        </childnode>
        <childnode refid="10087" relation="include">
        </childnode>
        <childnode refid="10110" relation="include">
        </childnode>
        <childnode refid="10094" relation="include">
        </childnode>
        <childnode refid="10111" relation="include">
        </childnode>
      </node>
      <node id="10093">
        <label>cmath</label>
      </node>
      <node id="10120">
        <label>cassert</label>
      </node>
      <node id="10094">
        <label>nifty/graph/optimization/multicut/multicut_base.hxx</label>
        <link refid="multicut__base_8hxx"/>
        <childnode refid="10086" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10090" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10104" relation="include">
        </childnode>
      </node>
      <node id="10115">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="10089">
        <label>stdexcept</label>
      </node>
      <node id="10125">
        <label>numeric</label>
      </node>
      <node id="10114">
        <label>nifty/graph/undirected_graph_base.hxx</label>
        <link refid="undirected__graph__base_8hxx"/>
        <childnode refid="10115" relation="include">
        </childnode>
        <childnode refid="10116" relation="include">
        </childnode>
        <childnode refid="10117" relation="include">
        </childnode>
        <childnode refid="10126" relation="include">
        </childnode>
      </node>
      <node id="10110">
        <label>nifty/graph/detail/adjacency.hxx</label>
        <link refid="adjacency_8hxx"/>
      </node>
      <node id="10096">
        <label>nifty/graph/optimization/common/solver_base.hxx</label>
        <link refid="solver__base_8hxx"/>
        <childnode refid="10086" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10090" relation="include">
        </childnode>
        <childnode refid="10089" relation="include">
        </childnode>
        <childnode refid="10097" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10098" relation="include">
        </childnode>
      </node>
      <node id="10086">
        <label>string</label>
      </node>
      <node id="10097">
        <label>nifty/exceptions/exceptions.hxx</label>
        <link refid="exceptions_8hxx"/>
        <childnode refid="10089" relation="include">
        </childnode>
      </node>
      <node id="10131">
        <label>map</label>
      </node>
      <node id="10102">
        <label>nifty/tools/timer.hxx</label>
        <link refid="timer_8hxx"/>
        <childnode refid="10090" relation="include">
        </childnode>
        <childnode refid="10101" relation="include">
        </childnode>
        <childnode refid="10086" relation="include">
        </childnode>
      </node>
      <node id="10085">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/proposal_generators/greedy_additive_proposals.hxx</label>
        <link refid="greedy_additive_proposals.hxx"/>
        <childnode refid="10086" relation="include">
        </childnode>
        <childnode refid="10087" relation="include">
        </childnode>
        <childnode refid="10094" relation="include">
        </childnode>
        <childnode refid="10105" relation="include">
        </childnode>
      </node>
      <node id="10119">
        <label>nifty/marray/andres/marray.hxx</label>
        <link refid="andres_2marray_8hxx"/>
        <childnode refid="10120" relation="include">
        </childnode>
        <childnode refid="10099" relation="include">
        </childnode>
        <childnode refid="10089" relation="include">
        </childnode>
        <childnode refid="10092" relation="include">
        </childnode>
        <childnode refid="10086" relation="include">
        </childnode>
        <childnode refid="10090" relation="include">
        </childnode>
        <childnode refid="10121" relation="include">
        </childnode>
        <childnode refid="10122" relation="include">
        </childnode>
        <childnode refid="10091" relation="include">
        </childnode>
        <childnode refid="10123" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
        <childnode refid="10124" relation="include">
        </childnode>
        <childnode refid="10125" relation="include">
        </childnode>
        <childnode refid="10107" relation="include">
        </childnode>
      </node>
      <node id="10106">
        <label>random</label>
      </node>
      <node id="10130">
        <label>nifty/ufd/ufd.hxx</label>
        <link refid="ufd_8hxx"/>
        <childnode refid="10099" relation="include">
        </childnode>
        <childnode refid="10091" relation="include">
        </childnode>
        <childnode refid="10131" relation="include">
        </childnode>
      </node>
      <node id="10113">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="10127">
        <label>nifty/container/flat_set.hxx</label>
        <link refid="flat__set_8hxx"/>
        <childnode refid="10099" relation="include">
        </childnode>
        <childnode refid="10091" relation="include">
        </childnode>
        <childnode refid="10128" relation="include">
        </childnode>
        <childnode refid="10107" relation="include">
        </childnode>
        <childnode refid="10129" relation="include">
        </childnode>
      </node>
      <node id="10108">
        <label>nifty/tools/changable_priority_queue.hxx</label>
        <link refid="changable__priority__queue_8hxx"/>
        <childnode refid="10109" relation="include">
        </childnode>
      </node>
      <node id="10091">
        <label>vector</label>
      </node>
      <node id="10116">
        <label>nifty/graph/graph_tags.hxx</label>
        <link refid="graph__tags_8hxx"/>
      </node>
      <node id="10098">
        <label>nifty/graph/optimization/common/visitor_base.hxx</label>
        <link refid="visitor__base_8hxx"/>
        <childnode refid="10099" relation="include">
        </childnode>
        <childnode refid="10086" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10090" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
        <childnode refid="10101" relation="include">
        </childnode>
        <childnode refid="10102" relation="include">
        </childnode>
        <childnode refid="10103" relation="include">
        </childnode>
      </node>
      <node id="10129">
        <label>utility</label>
      </node>
      <node id="10090">
        <label>sstream</label>
      </node>
      <node id="10087">
        <label>nifty/tools/runtime_check.hxx</label>
        <link refid="runtime__check_8hxx"/>
        <childnode refid="10088" relation="include">
        </childnode>
        <childnode refid="10089" relation="include">
        </childnode>
        <childnode refid="10090" relation="include">
        </childnode>
        <childnode refid="10091" relation="include">
        </childnode>
        <childnode refid="10092" relation="include">
        </childnode>
        <childnode refid="10093" relation="include">
        </childnode>
      </node>
      <node id="10117">
        <label>nifty/graph/graph_maps.hxx</label>
        <link refid="graph__maps_8hxx"/>
        <childnode refid="10118" relation="include">
        </childnode>
      </node>
      <node id="10100">
        <label>iostream</label>
      </node>
      <node id="10099">
        <label>cstddef</label>
      </node>
      <node id="10101">
        <label>chrono</label>
      </node>
      <node id="10118">
        <label>nifty/marray/marray.hxx</label>
        <link refid="marray_8hxx"/>
        <childnode refid="10119" relation="include">
        </childnode>
        <childnode refid="10087" relation="include">
        </childnode>
      </node>
      <node id="10112">
        <label>type_traits</label>
      </node>
      <node id="10123">
        <label>set</label>
      </node>
      <node id="10104">
        <label>nifty/graph/optimization/multicut/multicut_visitor_base.hxx</label>
        <link refid="multicut__visitor__base_8hxx"/>
        <childnode refid="10086" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10090" relation="include">
        </childnode>
        <childnode refid="10098" relation="include">
        </childnode>
      </node>
      <node id="10128">
        <label>algorithm</label>
      </node>
      <node id="10121">
        <label>cstring</label>
      </node>
      <node id="10124">
        <label>memory</label>
      </node>
      <node id="10095">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innerclass refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals" prot="public">nifty::graph::optimization::multicut::GreedyAdditiveProposals</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType" prot="public">nifty::graph::optimization::multicut::GreedyAdditiveProposals::SettingsType</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph">nifty::graph</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph_1_1optimization">nifty::graph::optimization</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph_1_1optimization_1_1multicut">nifty::graph::optimization::multicut</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="runtime__check_8hxx" kindref="compound">nifty/tools/runtime_check.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="multicut__base_8hxx" kindref="compound">nifty/graph/optimization/multicut/multicut_base.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="multicut__greedy__additive_8hxx" kindref="compound">nifty/graph/optimization/multicut/multicut_greedy_additive.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">graph{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">optimization{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">multicut{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJECTIVE&gt;</highlight></codeline>
<codeline lineno="16" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals" kindref="compound">GreedyAdditiveProposals</ref>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1adfd52c9823ecb5022d236498f48fe847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OBJECTIVE<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1adfd52c9823ecb5022d236498f48fe847" kindref="member">Objective</ref>;</highlight></codeline>
<codeline lineno="19" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a7cdc33ead24a8e55d3d03382f5604aaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Objective::Graph<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a7cdc33ead24a8e55d3d03382f5604aaf" kindref="member">Graph</ref>;</highlight></codeline>
<codeline lineno="20" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a80c4717b494cd77ddb07589ed451956c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1MulticutBase" kindref="compound">MulticutBase&lt;Objective&gt;</ref><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a80c4717b494cd77ddb07589ed451956c" kindref="member">Base</ref>;</highlight></codeline>
<codeline lineno="21" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a36e416d890e71935f77dff5997d34b8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1MulticutGreedyAdditive" kindref="compound">MulticutGreedyAdditive&lt;Objective&gt;</ref><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a36e416d890e71935f77dff5997d34b8a" kindref="member">Solver</ref>;</highlight></codeline>
<codeline lineno="22" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1ab55ac4f3aa7045f18a03611695b40c96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1MulticutGreedyAdditive_1a5ab2bca40a57afb6cecb04e97204973b" kindref="member">Solver::SettingsType</ref><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1ab55ac4f3aa7045f18a03611695b40c96" kindref="member">SolverSettings</ref>;</highlight></codeline>
<codeline lineno="23" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a871cac211effbd727baf2cadd76c844d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1common_1_1SolverBase_1a6e4e465f3b6e039882669fcfb9714818" kindref="member">Base::NodeLabelsType</ref><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a871cac211effbd727baf2cadd76c844d" kindref="member">NodeLabelsType</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType" kindref="compound">SettingsType</ref>{</highlight></codeline>
<codeline lineno="26" refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType_1ac9d869a5abb42f4d2ca8a225ff7ca108" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType_1ac9d869a5abb42f4d2ca8a225ff7ca108" kindref="member">sigma</ref>{1.0};</highlight></codeline>
<codeline lineno="27" refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType_1ac9178ee3d08c5c53f720cf2f93dd5c47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType_1ac9178ee3d08c5c53f720cf2f93dd5c47" kindref="member">weightStopCond</ref>{0.0};</highlight></codeline>
<codeline lineno="28" refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType_1ae750a2bbe36249f9535d3654b0f99bc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType_1ae750a2bbe36249f9535d3654b0f99bc3" kindref="member">nodeNumStopCond</ref>{-1.0};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1ad390e118cd8375e85b1539df7920642a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1ad390e118cd8375e85b1539df7920642a" kindref="member">name</ref>(){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;GreedyAdditiveProposals&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a9db939c0978bcf0ea35e47bbdd67ea12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a9db939c0978bcf0ea35e47bbdd67ea12" kindref="member">GreedyAdditiveProposals</ref>(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Objective<sp/>&amp;<sp/>objective,<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType" kindref="compound">SettingsType</ref><sp/><sp/>&amp;<sp/>settings,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>threadIndex</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>objective_(objective),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_(objective.graph()),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings_(settings),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadIndex_(threadIndex),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proposalNumber_(0),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SolverSettings<sp/>solverSettings;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverSettings.addNoise<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverSettings.sigma<sp/>=<sp/>settings_.<ref refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType_1ac9d869a5abb42f4d2ca8a225ff7ca108" kindref="member">sigma</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverSettings.weightStopCond<sp/><sp/>=<sp/>settings_.<ref refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType_1ac9178ee3d08c5c53f720cf2f93dd5c47" kindref="member">weightStopCond</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverSettings.nodeNumStopCond<sp/><sp/>=<sp/>settings_.<ref refid="structnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1_1SettingsType_1ae750a2bbe36249f9535d3654b0f99bc3" kindref="member">nodeNumStopCond</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverSettings.seed<sp/>=<sp/>threadIndex_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a36e416d890e71935f77dff5997d34b8a" kindref="member">Solver</ref>(objective_,<sp/>solverSettings);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1aa9ce3253b6cf31af23afb112012f2458" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1aa9ce3253b6cf31af23afb112012f2458" kindref="member">~GreedyAdditiveProposals</ref>(){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>solver_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a992f837061b450a770dfdffc7bbd1977" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1a992f837061b450a770dfdffc7bbd1977" kindref="member">generate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NodeLabelsType<sp/>&amp;<sp/>currentBest,<sp/>NodeLabelsType<sp/>&amp;<sp/>proposal){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(proposalNumber_<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_-&gt;<ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1MulticutGreedyAdditive_1ab4588070abcde55e7f0a71bfbbd568e7" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maybe<sp/>refactor<sp/>the<sp/>warm<sp/>start<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>:<sp/>graph_.nodes()){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proposal[node]<sp/>=<sp/>currentBest[node];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1common_1_1EmptyVisitor" kindref="compound">MulticutEmptyVisitor&lt;Objective&gt;</ref><sp/>visitor;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_-&gt;<ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1MulticutGreedyAdditive_1a4a736b5470a2bdae3bb0ab383a804609" kindref="member">optimize</ref>(proposal,<sp/>&amp;visitor);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++proposalNumber_;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1adeffdfd170e1b7aa163e4da74f91713a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1GreedyAdditiveProposals_1adeffdfd170e1b7aa163e4da74f91713a" kindref="member">reset</ref>(){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proposalNumber_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_-&gt;<ref refid="classnifty_1_1graph_1_1optimization_1_1multicut_1_1MulticutGreedyAdditive_1ab4588070abcde55e7f0a71bfbbd568e7" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Objective<sp/>&amp;<sp/>objective_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Graph<sp/>graph_;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SettingsType<sp/>settings_;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>threadIndex_;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>proposalNumber_;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Solver<sp/>*<sp/>solver_;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::graph::optimization::multicut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::graph::optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/proposal_generators/greedy_additive_proposals.hxx"/>
  </compounddef>
</doxygen>

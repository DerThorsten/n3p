<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="half_8hpp" kind="file" language="C++">
    <compoundname>half.hpp</compoundname>
    <includes local="no">utility</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iostream</includes>
    <includes local="no">limits</includes>
    <includes local="no">climits</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstring</includes>
    <includedby refid="nifty_8hxx" local="no">/home/tbeier/src/nifty/include/nifty/nifty.hxx</includedby>
    <incdepgraph>
      <node id="656">
        <label>limits</label>
      </node>
      <node id="658">
        <label>cmath</label>
      </node>
      <node id="653">
        <label>utility</label>
      </node>
      <node id="655">
        <label>iostream</label>
      </node>
      <node id="657">
        <label>climits</label>
      </node>
      <node id="654">
        <label>algorithm</label>
      </node>
      <node id="652">
        <label>/home/tbeier/src/nifty/include/nifty/external/half.hpp</label>
        <link refid="half_8hpp"/>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
      </node>
      <node id="659">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="661">
        <label>/home/tbeier/src/nifty/include/nifty/nifty.hxx</label>
        <link refid="nifty_8hxx"/>
        <childnode refid="662" relation="include">
        </childnode>
      </node>
      <node id="662">
        <label>/home/tbeier/src/nifty/include/nifty/graph/agglo/cluster_policies/detail/merge_rules.hxx</label>
        <link refid="merge__rules_8hxx"/>
      </node>
      <node id="660">
        <label>/home/tbeier/src/nifty/include/nifty/external/half.hpp</label>
        <link refid="half_8hpp"/>
        <childnode refid="661" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structhalf__float_1_1detail_1_1conditional" prot="public">half_float::detail::conditional</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1conditional_3_01false_00_01T_00_01F_01_4" prot="public">half_float::detail::conditional&lt; false, T, F &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bool__type" prot="public">half_float::detail::bool_type</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float" prot="public">half_float::detail::is_float</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01const_01T_01_4" prot="public">half_float::detail::is_float&lt; const T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01volatile_01T_01_4" prot="public">half_float::detail::is_float&lt; volatile T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01const_01volatile_01T_01_4" prot="public">half_float::detail::is_float&lt; const volatile T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01float_01_4" prot="public">half_float::detail::is_float&lt; float &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01double_01_4" prot="public">half_float::detail::is_float&lt; double &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1is__float_3_01long_01double_01_4" prot="public">half_float::detail::is_float&lt; long double &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits" prot="public">half_float::detail::bits</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01const_01T_01_4" prot="public">half_float::detail::bits&lt; const T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01volatile_01T_01_4" prot="public">half_float::detail::bits&lt; volatile T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01const_01volatile_01T_01_4" prot="public">half_float::detail::bits&lt; const volatile T &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01float_01_4" prot="public">half_float::detail::bits&lt; float &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1bits_3_01double_01_4" prot="public">half_float::detail::bits&lt; double &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1binary__t" prot="public">half_float::detail::binary_t</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1expr" prot="public">half_float::detail::expr</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable" prot="public">half_float::detail::enable</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01void_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, half, void, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01void_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, expr, void, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, half, half, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, half, expr, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, expr, half, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01void_01_4" prot="public">half_float::detail::enable&lt; T, expr, expr, void &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01half_01_4" prot="public">half_float::detail::enable&lt; T, half, half, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01expr_01_4" prot="public">half_float::detail::enable&lt; T, half, half, expr &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01half_01_4" prot="public">half_float::detail::enable&lt; T, half, expr, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01expr_01_4" prot="public">half_float::detail::enable&lt; T, half, expr, expr &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01half_01_4" prot="public">half_float::detail::enable&lt; T, expr, half, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01expr_01_4" prot="public">half_float::detail::enable&lt; T, expr, half, expr &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01half_01_4" prot="public">half_float::detail::enable&lt; T, expr, expr, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01expr_01_4" prot="public">half_float::detail::enable&lt; T, expr, expr, expr &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1result" prot="public">half_float::detail::result</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1result_3_01half_00_01half_01_4" prot="public">half_float::detail::result&lt; half, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1unary__specialized" prot="public">half_float::detail::unary_specialized</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1binary__specialized" prot="public">half_float::detail::binary_specialized</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster" prot="public">half_float::detail::half_caster</innerclass>
    <innerclass refid="classhalf__float_1_1half" prot="public">half_float::half</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1functions" prot="public">half_float::detail::functions</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1unary__specialized" prot="public">half_float::detail::unary_specialized</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1unary__specialized_3_01expr_01_4" prot="public">half_float::detail::unary_specialized&lt; expr &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1binary__specialized" prot="public">half_float::detail::binary_specialized</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1binary__specialized_3_01half_00_01half_01_4" prot="public">half_float::detail::binary_specialized&lt; half, half &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster" prot="public">half_float::detail::half_caster</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01U_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; half, U, R &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01half_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; T, half, R &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01expr_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; T, expr, R &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01half_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; half, half, R &gt;</innerclass>
    <innerclass refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01expr_00_01R_01_4" prot="public">half_float::detail::half_caster&lt; half, expr, R &gt;</innerclass>
    <innerclass refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4" prot="public">std::numeric_limits&lt; half_float::half &gt;</innerclass>
    <innernamespace refid="namespacehalf__float">half_float</innernamespace>
    <innernamespace refid="namespacehalf__float_1_1detail">half_float::detail</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="half_8hpp_1aecb5b6a7616c7c83b2e13d546c99650a" prot="public" static="no">
        <name>HALF_GNUC_VERSION</name>
        <initializer>(__GNUC__*100+__GNUC_MINOR__)</initializer>
        <briefdescription>
<para>Combined gcc version number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="26" column="9" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" prot="public" static="no">
        <name>HALF_CONSTEXPR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="166" column="11" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" prot="public" static="no">
        <name>HALF_CONSTEXPR_CONST</name>
        <initializer>const</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="167" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1a04e7940852b33adbb81a8249fef1c508" prot="public" static="no">
        <name>HALF_NOEXCEPT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="175" column="11" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1a76353b496550acb4b523ad263d09908a" prot="public" static="no">
        <name>HALF_NOTHROW</name>
        <initializer>throw()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="176" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1af470ed60568b3e7f4fde6092d22abbde" prot="public" static="no">
        <name>HALF_ROUND_STYLE</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default rounding mode. This specifies the rounding mode used for all conversions between <ref refid="classhalf__float_1_1half" kindref="compound">half</ref>s and <computeroutput>float</computeroutput>s as well as for the <ref refid="namespacehalf__float_1_1detail_1aa886fe2fe51f0ead5eca42060889b331" kindref="member">half_cast()</ref> if not specifying a rounding mode explicitly. It can be redefined (before including <ref refid="half_8hpp" kindref="compound">half.hpp</ref>) to one of the standard rounding modes using their respective constants or the equivalent values of <computeroutput>std::float_round_style</computeroutput>:</para><para><table rows="6" cols="3"><row>
<entry thead="yes"><para><computeroutput>std::float_round_style</computeroutput> </para></entry><entry thead="yes"><para>value </para></entry><entry thead="yes"><para>rounding  </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>std::round_indeterminate</computeroutput> </para></entry><entry thead="no"><para>-1 </para></entry><entry thead="no"><para>fastest (default) </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>std::round_toward_zero</computeroutput> </para></entry><entry thead="no"><para>0 </para></entry><entry thead="no"><para>toward zero </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>std::round_to_nearest</computeroutput> </para></entry><entry thead="no"><para>1 </para></entry><entry thead="no"><para>to nearest </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>std::round_toward_infinity</computeroutput> </para></entry><entry thead="no"><para>2 </para></entry><entry thead="no"><para>toward positive infinity </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>std::round_toward_neg_infinity</computeroutput> </para></entry><entry thead="no"><para>3 </para></entry><entry thead="no"><para>toward negative infinity </para></entry></row>
</table>
By default this is set to <computeroutput>-1</computeroutput> (<computeroutput>std::round_indeterminate</computeroutput>), which uses truncation (round toward zero, but with overflows set to infinity) and is the fastest rounding mode possible. It can even be set to <computeroutput>std::numeric_limits&lt;float&gt;::round_style</computeroutput> to synchronize the rounding mode with that of the underlying single-precision implementation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="213" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1ab0c3c06432f0247f22594abe3df0ebfe" prot="public" static="no">
        <name>HALF_ROUND_TIES_TO_EVEN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tie-breaking behaviour for round to nearest. This specifies if ties in round to nearest should be resolved by rounding to the nearest even value. By default this is defined to <computeroutput>0</computeroutput> resulting in the faster but slightly more biased behaviour of rounding away from zero in half-way cases (and thus equal to the <ref refid="namespacehalf__float_1_1detail_1ab5b61d50f0c874faf8d0a949386242ff" kindref="member">round()</ref> function), but can be redefined to <computeroutput>1</computeroutput> (before including <ref refid="half_8hpp" kindref="compound">half.hpp</ref>) if more IEEE-conformant behaviour is needed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="222" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1abdcd774b81d03564edec8523484d02bf" prot="public" static="no">
        <name>HUGE_VALH</name>
        <initializer>std::numeric_limits&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>&gt;::infinity()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Value signaling overflow. In correspondence with <computeroutput>HUGE_VAL[F|L]</computeroutput> from <computeroutput>&lt;cmath&gt;</computeroutput> this symbol expands to a positive value signaling the overflow of an operation, in particular it just evaluates to positive infinity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="228" column="9" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1a00d5755980889a6bcc0fadf914241b81" prot="public" static="no">
        <name>FP_FAST_FMAH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fast half-precision fma function. This symbol is only defined if the <ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">fma()</ref> function generally executes as fast as, or faster than, a separate half-precision multiplication followed by an addition. Due to the internal single-precision implementation of all arithmetic operations, this is in fact always the case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="234" column="9" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1a9ec0e31304d15c42262b2c4a3b58443c" prot="public" static="no">
        <name>FP_ILOGB0</name>
        <initializer>INT_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="237" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1a01e2e5be97c739a5bdcbc619b44f9742" prot="public" static="no">
        <name>FP_ILOGBNAN</name>
        <initializer>INT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="240" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1adbc0a13ec75c05d238ca12ef1f8c6b2b" prot="public" static="no">
        <name>FP_SUBNORMAL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="243" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1a32eba50da417c9f303ba49583d5b9f40" prot="public" static="no">
        <name>FP_ZERO</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="246" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1a1d481cc6e6a8ff729147ed46e61a4c9f" prot="public" static="no">
        <name>FP_NAN</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="249" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1a4f64bcc64f8b84dd9daf5a4e56abf0ca" prot="public" static="no">
        <name>FP_INFINITE</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="252" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half_8hpp_1ab9e29bb9e853934c4ba647c840b7e5de" prot="public" static="no">
        <name>FP_NORMAL</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp" line="255" column="10" bodyfile="/home/tbeier/src/nifty/include/nifty/external/half.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Main header file for half precision functionality. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>half<sp/>-<sp/>IEEE<sp/>754-based<sp/>half-precision<sp/>floating<sp/>point<sp/>library.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012-2017<sp/>Christian<sp/>Rau<sp/>&lt;rauy@users.sourceforge.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version<sp/>1.12.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HALF_HALF_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALF_HALF_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="half_8hpp_1aecb5b6a7616c7c83b2e13d546c99650a" refkind="member"><highlight class="preprocessor">#define<sp/>HALF_GNUC_VERSION<sp/>(__GNUC__*100+__GNUC_MINOR__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//check<sp/>C++11<sp/>language<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//clang</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>__has_feature(cxx_static_assert)<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_STATIC_ASSERT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_STATIC_ASSERT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>__has_feature(cxx_constexpr)<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_CONSTEXPR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CONSTEXPR<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>__has_feature(cxx_noexcept)<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_NOEXCEPT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_NOEXCEPT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>__has_feature(cxx_user_literals)<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_USER_LITERALS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_USER_LITERALS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>||<sp/>__cplusplus<sp/>&gt;=<sp/>201103L)<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_LONG_LONG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_LONG_LONG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*#elif<sp/>defined(__INTEL_COMPILER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Intel<sp/>C++</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>#if<sp/>__INTEL_COMPILER<sp/>&gt;=<sp/>1100<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_STATIC_ASSERT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>????????</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_STATIC_ASSERT<sp/>1</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/>#if<sp/>__INTEL_COMPILER<sp/>&gt;=<sp/>1300<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_CONSTEXPR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>????????</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CONSTEXPR<sp/>1</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/>#if<sp/>__INTEL_COMPILER<sp/>&gt;=<sp/>1300<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_NOEXCEPT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>????????</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_NOEXCEPT<sp/>1</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>#if<sp/>__INTEL_COMPILER<sp/>&gt;=<sp/>1100<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_LONG_LONG)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>????????</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_LONG_LONG<sp/>1</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>#endif*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//gcc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>||<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_GNUC_VERSION<sp/>&gt;=<sp/>403<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_STATIC_ASSERT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_STATIC_ASSERT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_GNUC_VERSION<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_CONSTEXPR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CONSTEXPR<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_GNUC_VERSION<sp/>&gt;=<sp/>406<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_NOEXCEPT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_NOEXCEPT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_GNUC_VERSION<sp/>&gt;=<sp/>407<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_USER_LITERALS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_USER_LITERALS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>!defined(HALF_ENABLE_CPP11_LONG_LONG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_LONG_LONG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Visual<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>_MSC_VER<sp/>&gt;=<sp/>1900<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_CONSTEXPR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CONSTEXPR<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>_MSC_VER<sp/>&gt;=<sp/>1900<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_NOEXCEPT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_NOEXCEPT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>_MSC_VER<sp/>&gt;=<sp/>1900<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_USER_LITERALS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_USER_LITERALS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>_MSC_VER<sp/>&gt;=<sp/>1600<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_STATIC_ASSERT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_STATIC_ASSERT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>_MSC_VER<sp/>&gt;=<sp/>1310<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_LONG_LONG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_LONG_LONG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_POP_WARNINGS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(disable<sp/>:<sp/>4099<sp/>4127<sp/>4146)<sp/><sp/><sp/>//struct<sp/>vs<sp/>class,<sp/>constant<sp/>in<sp/>if,<sp/>negative<sp/>unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//check<sp/>C++11<sp/>library<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_LIBCPP_VERSION)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//libc++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>||<sp/>__cplusplus<sp/>&gt;=<sp/>201103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>HALF_ENABLE_CPP11_CSTDINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CSTDINT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CMATH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>HALF_ENABLE_CPP11_HASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_HASH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GLIBCXX__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//libstdc++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>||<sp/>__cplusplus<sp/>&gt;=<sp/>201103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>__GLIBCXX__<sp/>&gt;=<sp/>20080606<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_TYPE_TRAITS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>__GLIBCXX__<sp/>&gt;=<sp/>20080606<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_CSTDINT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CSTDINT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>__GLIBCXX__<sp/>&gt;=<sp/>20080606<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_CMATH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CMATH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>__GLIBCXX__<sp/>&gt;=<sp/>20080606<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_HASH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_HASH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_GNUC_VERSION<sp/>&gt;=<sp/>403<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_CSTDINT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CSTDINT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_GNUC_VERSION<sp/>&gt;=<sp/>403<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_CMATH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CMATH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_GNUC_VERSION<sp/>&gt;=<sp/>403<sp/>&amp;&amp;<sp/>!defined(HALF_ENABLE_CPP11_HASH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_HASH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_CPPLIB_VER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Dinkumware/Visual<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>_CPPLIB_VER<sp/>&gt;=<sp/>520</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>HALF_ENABLE_CPP11_CSTDINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CSTDINT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>HALF_ENABLE_CPP11_HASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_HASH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>_CPPLIB_VER<sp/>&gt;=<sp/>610</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HALF_ENABLE_CPP11_CMATH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>HALF_GNUC_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//support<sp/>constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HALF_ENABLE_CPP11_CONSTEXPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_CONSTEXPR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_CONSTEXPR_CONST<sp/><sp/><sp/><sp/>constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_CONSTEXPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_CONSTEXPR_CONST<sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//support<sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HALF_ENABLE_CPP11_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_NOEXCEPT<sp/><sp/><sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_NOTHROW<sp/><sp/><sp/><sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="half_8hpp_1a04e7940852b33adbb81a8249fef1c508" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_NOTHROW<sp/><sp/><sp/><sp/>throw()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HALF_ENABLE_CPP11_CSTDINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HALF_ENABLE_CPP11_HASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor">#ifndef<sp/>HALF_ROUND_STYLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="half_8hpp_1af470ed60568b3e7f4fde6092d22abbde" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_ROUND_STYLE<sp/><sp/><sp/><sp/>-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>=<sp/>std::round_indeterminate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor">#ifndef<sp/>HALF_ROUND_TIES_TO_EVEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="half_8hpp_1ab0c3c06432f0247f22594abe3df0ebfe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HALF_ROUND_TIES_TO_EVEN<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>ties<sp/>away<sp/>from<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="half_8hpp_1abdcd774b81d03564edec8523484d02bf" refkind="member"><highlight class="preprocessor">#define<sp/>HUGE_VALH<sp/><sp/><sp/>std::numeric_limits&lt;half_float::half&gt;::infinity()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="half_8hpp_1a00d5755980889a6bcc0fadf914241b81" refkind="member"><highlight class="preprocessor">#define<sp/>FP_FAST_FMAH<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FP_ILOGB0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="half_8hpp_1a9ec0e31304d15c42262b2c4a3b58443c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FP_ILOGB0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>INT_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FP_ILOGBNAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="half_8hpp_1a01e2e5be97c739a5bdcbc619b44f9742" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FP_ILOGBNAN<sp/><sp/><sp/><sp/><sp/>INT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FP_SUBNORMAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="half_8hpp_1adbc0a13ec75c05d238ca12ef1f8c6b2b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FP_SUBNORMAL<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FP_ZERO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="half_8hpp_1a32eba50da417c9f303ba49583d5b9f40" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FP_ZERO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FP_NAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="half_8hpp_1a1d481cc6e6a8ff729147ed46e61a4c9f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FP_NAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FP_INFINITE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="half_8hpp_1a4f64bcc64f8b84dd9daf5a4e56abf0ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FP_INFINITE<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FP_NORMAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="half_8hpp_1ab9e29bb9e853934c4ba647c840b7e5de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FP_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="namespacehalf__float" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehalf__float" kindref="compound">half_float</ref></highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HALF_ENABLE_CPP11_USER_LITERALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">literal</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_h(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="namespacehalf__float_1_1detail" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1conditional" kindref="compound">conditional</ref><sp/>:<sp/>std::conditional&lt;B,T,F&gt;<sp/>{};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">bool_type</ref><sp/>:<sp/>std::integral_constant&lt;bool,B&gt;<sp/>{};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5e245748a3cc20e348dd92383d99d03c" kindref="member">std::true_type</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a04d0449ab22bc6d1cfb2f31a8271945c" kindref="member">std::false_type</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref><sp/>:<sp/>std::is_floating_point&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1conditional" kindref="compound">conditional</ref><sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>type;<sp/>};</highlight></codeline>
<codeline lineno="296" refid="structhalf__float_1_1detail_1_1conditional_3_01false_00_01T_00_01F_01_4_1ac15c7cd8869102e198302214fc278630" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1conditional" kindref="compound">conditional</ref>&lt;false,T,F&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>F<sp/><ref refid="structhalf__float_1_1detail_1_1conditional_3_01false_00_01T_00_01F_01_4_1ac15c7cd8869102e198302214fc278630" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="structhalf__float_1_1detail_1_1bool__type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">bool_type</ref><sp/>{};</highlight></codeline>
<codeline lineno="300" refid="namespacehalf__float_1_1detail_1a5e245748a3cc20e348dd92383d99d03c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">bool_type&lt;true&gt;</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5e245748a3cc20e348dd92383d99d03c" kindref="member">true_type</ref>;</highlight></codeline>
<codeline lineno="301" refid="namespacehalf__float_1_1detail_1a04d0449ab22bc6d1cfb2f31a8271945c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">bool_type&lt;false&gt;</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a04d0449ab22bc6d1cfb2f31a8271945c" kindref="member">false_type</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="structhalf__float_1_1detail_1_1is__float" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref><sp/>:<sp/>false_type<sp/>{};</highlight></codeline>
<codeline lineno="305" refid="structhalf__float_1_1detail_1_1is__float_3_01const_01T_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref>&lt;const<sp/>T&gt;<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref>&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="306" refid="structhalf__float_1_1detail_1_1is__float_3_01volatile_01T_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref>&lt;volatile<sp/>T&gt;<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref>&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="307" refid="structhalf__float_1_1detail_1_1is__float_3_01const_01volatile_01T_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref>&lt;const<sp/>volatile<sp/>T&gt;<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref>&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="308" refid="structhalf__float_1_1detail_1_1is__float_3_01float_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref>&lt;float&gt;<sp/>:<sp/>true_type<sp/>{};</highlight></codeline>
<codeline lineno="309" refid="structhalf__float_1_1detail_1_1is__float_3_01double_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref>&lt;double&gt;<sp/>:<sp/>true_type<sp/>{};</highlight></codeline>
<codeline lineno="310" refid="structhalf__float_1_1detail_1_1is__float_3_01long_01double_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float</ref>&lt;long<sp/>double&gt;<sp/>:<sp/>true_type<sp/>{};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref><sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="315" refid="structhalf__float_1_1detail_1_1bits_3_01const_01T_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;const<sp/>T&gt;<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="316" refid="structhalf__float_1_1detail_1_1bits_3_01volatile_01T_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;volatile<sp/>T&gt;<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="317" refid="structhalf__float_1_1detail_1_1bits_3_01const_01volatile_01T_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;const<sp/>volatile<sp/>T&gt;<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CSTDINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::uint_least16_t<sp/><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;float&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::uint_least32_t<sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;double&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::uint_least64_t<sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="structhalf__float_1_1detail_1_1bits_3_01float_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;float&gt;<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1conditional" kindref="compound">conditional</ref>&lt;std::numeric_limits&lt;unsigned<sp/>int&gt;::digits&gt;=32,unsigned<sp/>int,unsigned<sp/>long&gt;<sp/>{};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;double&gt;<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1conditional" kindref="compound">conditional</ref>&lt;std::numeric_limits&lt;unsigned<sp/>long&gt;::digits&gt;=64,unsigned<sp/>long,unsigned<sp/>long<sp/>long&gt;<sp/>{};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>&lt;double&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1conditional_1ace7680db9fa44adf899e0133f39a43b6" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="structhalf__float_1_1detail_1_1binary__t" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1binary__t" kindref="compound">binary_t</ref><sp/>{};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/><ref refid="structhalf__float_1_1detail_1_1binary__t" kindref="compound">binary_t</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref><sp/>=<sp/><ref refid="structhalf__float_1_1detail_1_1binary__t" kindref="compound">binary_t</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="structhalf__float_1_1detail_1_1expr" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356" refid="structhalf__float_1_1detail_1_1expr_1a2a66f42f413a59b38a8d2cef269ea446" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="structhalf__float_1_1detail_1_1expr_1a2a66f42f413a59b38a8d2cef269ea446" kindref="member">expr</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)<sp/><ref refid="half_8hpp_1a04e7940852b33adbb81a8249fef1c508" kindref="member">HALF_NOEXCEPT</ref><sp/>:<sp/>value_(f)<sp/>{}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="structhalf__float_1_1detail_1_1expr_1acf4d1ca1eb867d11b0529e73b2e8e9dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>float()<sp/>const<sp/><ref refid="half_8hpp_1a04e7940852b33adbb81a8249fef1c508" kindref="member">HALF_NOEXCEPT</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_;<sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value_;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="structhalf__float_1_1detail_1_1enable" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">=</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">=</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref><sp/>{};</highlight></codeline>
<codeline lineno="372" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01void_00_01void_01_4_1a3622a516453af349d6f6c29f393e7922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,void,void&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01void_00_01void_01_4_1a3622a516453af349d6f6c29f393e7922" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="373" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01void_00_01void_01_4_1a304f0491d60b73a0be25ff00b24e3bc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,void,void&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01void_00_01void_01_4_1a304f0491d60b73a0be25ff00b24e3bc0" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="374" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01void_01_4_1aceb3d224d5b5da6539c179cb8cb23bda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,void&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01void_01_4_1aceb3d224d5b5da6539c179cb8cb23bda" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="375" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01void_01_4_1a382791489c38b31392293c5f660d0689" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,void&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01void_01_4_1a382791489c38b31392293c5f660d0689" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="376" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01void_01_4_1a40f8fe0ca6c2b5ec34d68b539ac0d399" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,void&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01void_01_4_1a40f8fe0ca6c2b5ec34d68b539ac0d399" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="377" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01void_01_4_1ac5b0ec94780275726b1deadc8affc811" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,void&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01void_01_4_1ac5b0ec94780275726b1deadc8affc811" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="378" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01half_01_4_1a68d2dce4e5c5dd4472e4a0532e221de8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01half_01_4_1a68d2dce4e5c5dd4472e4a0532e221de8" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="379" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01expr_01_4_1a25343bb79287a3bce7ff8611d4b40a47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01half_00_01expr_01_4_1a25343bb79287a3bce7ff8611d4b40a47" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="380" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01half_01_4_1a80132f08c75c820e5b592597050e161f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01half_01_4_1a80132f08c75c820e5b592597050e161f" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="381" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01expr_01_4_1a42da82c2195536cc977d291a06ba7de9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01half_00_01expr_00_01expr_01_4_1a42da82c2195536cc977d291a06ba7de9" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="382" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01half_01_4_1a48d3328de918e7e975e2c2f8c22d0833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01half_01_4_1a48d3328de918e7e975e2c2f8c22d0833" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="383" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01expr_01_4_1a82a85fe2db8508b2e4731c1bcf0edd99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01half_00_01expr_01_4_1a82a85fe2db8508b2e4731c1bcf0edd99" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="384" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01half_01_4_1a9d90de126a82e576c9f3e025c6de7bd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01half_01_4_1a9d90de126a82e576c9f3e025c6de7bd3" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="385" refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01expr_01_4_1a1dee5125aa0c5cfbd25e725ed2530905" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;T,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1enable_3_01T_00_01expr_00_01expr_00_01expr_01_4_1a1dee5125aa0c5cfbd25e725ed2530905" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="structhalf__float_1_1detail_1_1result" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1result" kindref="compound">result</ref><sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable</ref>&lt;expr,T,U&gt;<sp/>{};</highlight></codeline>
<codeline lineno="393" refid="structhalf__float_1_1detail_1_1result_3_01half_00_01half_01_4_1a355650e21ab1992de1511096e2d9cef3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1result" kindref="compound">result</ref>&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1result_3_01half_00_01half_01_4_1a355650e21ab1992de1511096e2d9cef3" kindref="member">type</ref>;<sp/>};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"></codeline>
<codeline lineno="403" refid="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" kindref="member">builtin_isinf</ref>(T<sp/>arg)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a072ecb80d48fc55231963d6a36c2abe4" kindref="member">std::isinf</ref>(arg);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!::_finite(static_cast&lt;double&gt;(arg))<sp/>&amp;&amp;<sp/>!::_isnan(static_cast&lt;double&gt;(arg));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg<sp/>==<sp/>std::numeric_limits&lt;T&gt;::infinity()<sp/>||<sp/>arg<sp/>==<sp/>-std::numeric_limits&lt;T&gt;::infinity();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(T<sp/>arg)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">std::isnan</ref>(arg);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::_isnan(static_cast&lt;double&gt;(arg))<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg<sp/>!=<sp/>arg;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(T<sp/>arg)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac957d466a743fdc5910216506256ea3c" kindref="member">std::signbit</ref>(arg);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg<sp/>&lt;<sp/>T()<sp/>||<sp/>(arg<sp/>==<sp/>T()<sp/>&amp;&amp;<sp/>T(1)/arg<sp/>&lt;<sp/>T());</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"></codeline>
<codeline lineno="453" refid="namespacehalf__float_1_1detail_1a32be02e128131df654adb21672ad1e8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R&gt;<sp/>uint16<sp/><ref refid="namespacehalf__float_1_1detail_1a7a40ca55db89afccd351332db5535ed1" kindref="member">float2half_impl</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/>true_type)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">bits&lt;float&gt;::type</ref><sp/>uint32;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>;</highlight><highlight class="comment">//<sp/>=<sp/>*reinterpret_cast&lt;uint32*&gt;(&amp;value);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//violating<sp/>strict<sp/>aliasing!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(&amp;bits,<sp/>&amp;value,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>hbits<sp/>=<sp/>(bits&gt;&gt;16)<sp/>&amp;<sp/>0x8000;</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>&amp;=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>exp<sp/>=<sp/>bits<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(exp<sp/>==<sp/>255)</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>hbits<sp/>|<sp/>0x7C00<sp/>|<sp/>(0x3FF&amp;-static_cast&lt;unsigned&gt;((bits&amp;0x7FFFFF)!=0));</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(exp<sp/>&gt;<sp/>142)</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>hbits<sp/>|<sp/>0x7C00<sp/>-<sp/>(hbits&gt;&gt;15);</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>hbits<sp/>|<sp/>0x7BFF<sp/>+<sp/>(hbits&gt;&gt;15);</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>hbits<sp/>|<sp/>0x7BFF<sp/>+<sp/>(R!=std::round_toward_zero);</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>g,<sp/>s;</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(exp<sp/>&gt;<sp/>112)</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>(bits&gt;&gt;12)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(bits&amp;0xFFF)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>|=<sp/>((exp-112)&lt;&lt;10)<sp/>|<sp/>((bits&gt;&gt;13)&amp;0x3FF);</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(exp<sp/>&gt;<sp/>101)</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>125<sp/>-<sp/>exp;</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/>(bits&amp;0x7FFFFF)<sp/>|<sp/>0x800000;</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>(bits&gt;&gt;i)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(bits&amp;((1L&lt;&lt;i)-1))<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>|=<sp/>bits<sp/>&gt;&gt;<sp/>(i+1);</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bits<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(R<sp/>==<sp/>std::round_to_nearest)</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ROUND_TIES_TO_EVEN</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>g<sp/>&amp;<sp/>(s|hbits);</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>g;</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>~(hbits&gt;&gt;15)<sp/>&amp;<sp/>(s|g);</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>(hbits&gt;&gt;15)<sp/>&amp;<sp/>(g|s);</highlight></codeline>
<codeline lineno="501"><highlight class="comment">*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16<sp/>base_table[512]<sp/>=<sp/>{<sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0000,<sp/>0x0001,<sp/>0x0002,<sp/>0x0004,<sp/>0x0008,<sp/>0x0010,<sp/>0x0020,<sp/>0x0040,<sp/>0x0080,<sp/>0x0100,<sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0200,<sp/>0x0400,<sp/>0x0800,<sp/>0x0C00,<sp/>0x1000,<sp/>0x1400,<sp/>0x1800,<sp/>0x1C00,<sp/>0x2000,<sp/>0x2400,<sp/>0x2800,<sp/>0x2C00,<sp/>0x3000,<sp/>0x3400,<sp/>0x3800,<sp/>0x3C00,<sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4000,<sp/>0x4400,<sp/>0x4800,<sp/>0x4C00,<sp/>0x5000,<sp/>0x5400,<sp/>0x5800,<sp/>0x5C00,<sp/>0x6000,<sp/>0x6400,<sp/>0x6800,<sp/>0x6C00,<sp/>0x7000,<sp/>0x7400,<sp/>0x7800,<sp/>0x7C00,<sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/>0x7C00,<sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8000,<sp/>0x8001,<sp/>0x8002,<sp/>0x8004,<sp/>0x8008,<sp/>0x8010,<sp/>0x8020,<sp/>0x8040,<sp/>0x8080,<sp/>0x8100,<sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8200,<sp/>0x8400,<sp/>0x8800,<sp/>0x8C00,<sp/>0x9000,<sp/>0x9400,<sp/>0x9800,<sp/>0x9C00,<sp/>0xA000,<sp/>0xA400,<sp/>0xA800,<sp/>0xAC00,<sp/>0xB000,<sp/>0xB400,<sp/>0xB800,<sp/>0xBC00,<sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xC000,<sp/>0xC400,<sp/>0xC800,<sp/>0xCC00,<sp/>0xD000,<sp/>0xD400,<sp/>0xD800,<sp/>0xDC00,<sp/>0xE000,<sp/>0xE400,<sp/>0xE800,<sp/>0xEC00,<sp/>0xF000,<sp/>0xF400,<sp/>0xF800,<sp/>0xFC00,<sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00,<sp/>0xFC00<sp/>};</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>shift_table[512]<sp/>=<sp/>{<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>23,<sp/>22,<sp/>21,<sp/>20,<sp/>19,<sp/>18,<sp/>17,<sp/>16,<sp/>15,<sp/>14,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>13,<sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>23,<sp/>22,<sp/>21,<sp/>20,<sp/>19,<sp/>18,<sp/>17,<sp/>16,<sp/>15,<sp/>14,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>13,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>24,<sp/>13<sp/>};</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>hbits<sp/>=<sp/>base_table[bits&gt;&gt;23]<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint16</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((bits&amp;0x7FFFFF)&gt;&gt;shift_table[bits&gt;&gt;23]);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_to_nearest)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>(((bits&amp;0x7FFFFF)&gt;&gt;(shift_table[bits&gt;&gt;23]-1))|(((bits&gt;&gt;23)&amp;0xFF)==102))<sp/>&amp;<sp/>((hbits&amp;0x7C00)!=0x7C00)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ab0c3c06432f0247f22594abe3df0ebfe" kindref="member">HALF_ROUND_TIES_TO_EVEN</ref></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>(((((static_cast&lt;uint32&gt;(1)&lt;&lt;(shift_table[bits&gt;&gt;23]-1))-1)&amp;bits)!=0)|hbits)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_zero)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>-=<sp/>((hbits&amp;0x7FFF)==0x7C00)<sp/>&amp;<sp/>~shift_table[bits&gt;&gt;23];</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>((((bits&amp;0x7FFFFF&amp;((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)&lt;&lt;(shift_table[bits&gt;&gt;23]))-1))!=0)|(((bits&gt;&gt;23)&lt;=102)&amp;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((bits&gt;&gt;23)!=0)))&amp;(hbits&lt;0x7C00))<sp/>-<sp/>((hbits==0xFC00)&amp;((bits&gt;&gt;23)!=511));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>((((bits&amp;0x7FFFFF&amp;((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)&lt;&lt;(shift_table[bits&gt;&gt;23]))-1))!=0)|(((bits&gt;&gt;23)&lt;=358)&amp;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((bits&gt;&gt;23)!=256)))&amp;(hbits&lt;0xFC00)&amp;(hbits&gt;&gt;15))<sp/>-<sp/>((hbits==0x7C00)&amp;((bits&gt;&gt;23)!=255));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="namespacehalf__float_1_1detail_1a36dca5081e9a14c8e523d2415e476ace" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R&gt;<sp/>uint16<sp/><ref refid="namespacehalf__float_1_1detail_1a7a40ca55db89afccd351332db5535ed1" kindref="member">float2half_impl</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/>true_type)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">bits&lt;float&gt;::type</ref><sp/>uint32;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">bits&lt;double&gt;::type</ref><sp/>uint64;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref>;</highlight><highlight class="comment">//<sp/>=<sp/>*reinterpret_cast&lt;uint64*&gt;(&amp;value);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//violating<sp/>strict<sp/>aliasing!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(&amp;bits,<sp/>&amp;value,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>hi<sp/>=<sp/>bits<sp/>&gt;&gt;<sp/>32,<sp/>lo<sp/>=<sp/>bits<sp/>&amp;<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>hbits<sp/>=<sp/>(hi&gt;&gt;16)<sp/>&amp;<sp/>0x8000;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>&amp;=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref><sp/>=<sp/>hi<sp/>&gt;&gt;<sp/>20;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>==<sp/>2047)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits<sp/>|<sp/>0x7C00<sp/>|<sp/>(0x3FF&amp;-</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((bits&amp;0xFFFFFFFFFFFFF)!=0));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>&gt;<sp/>1038)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits<sp/>|<sp/>0x7C00<sp/>-<sp/>(hbits&gt;&gt;15);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits<sp/>|<sp/>0x7BFF<sp/>+<sp/>(hbits&gt;&gt;15);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits<sp/>|<sp/>0x7BFF<sp/>+<sp/>(R!=std::round_toward_zero);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g,<sp/>s<sp/>=<sp/>lo<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>&gt;<sp/>1008)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>(hi&gt;&gt;9)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>|=<sp/>(hi&amp;0x1FF)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>|=<sp/>((exp-1008)&lt;&lt;10)<sp/>|<sp/>((hi&gt;&gt;10)&amp;0x3FF);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>&gt;<sp/>997)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1018<sp/>-<sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>=<sp/>(hi&amp;0xFFFFF)<sp/>|<sp/>0x100000;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>(hi&gt;&gt;i)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>|=<sp/>(hi&amp;((1L&lt;&lt;i)-1))<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>|=<sp/>hi<sp/>&gt;&gt;<sp/>(i+1);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>|=<sp/>hi<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_to_nearest)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ROUND_TIES_TO_EVEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>g<sp/>&amp;<sp/>(s|hbits);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>g;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>~(hbits&gt;&gt;15)<sp/>&amp;<sp/>(s|g);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>(hbits&gt;&gt;15)<sp/>&amp;<sp/>(g|s);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="namespacehalf__float_1_1detail_1a7a40ca55db89afccd351332db5535ed1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>uint16<sp/><ref refid="namespacehalf__float_1_1detail_1a7a40ca55db89afccd351332db5535ed1" kindref="member">float2half_impl</ref>(T<sp/>value,<sp/>...)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>hbits<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(value))<sp/>&lt;&lt;<sp/>15;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>==<sp/>T())</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(value))</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits<sp/>|<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" kindref="member">builtin_isinf</ref>(value))</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits<sp/>|<sp/>0x7C00;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehalf__float_1_1detail_1ab852ae178e7de565f1731acb2b1cb9f1" kindref="member">std::frexp</ref>(value,<sp/>&amp;exp);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>&gt;<sp/>16)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits<sp/>|<sp/>0x7C00<sp/>-<sp/>(hbits&gt;&gt;15);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits<sp/>|<sp/>0x7BFF<sp/>+<sp/>(hbits&gt;&gt;15);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits<sp/>|<sp/>0x7BFF<sp/>+<sp/>(R!=std::round_toward_zero);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>&lt;<sp/>-13)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" kindref="member">std::ldexp</ref>(value,<sp/>24);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" kindref="member">std::ldexp</ref>(value,<sp/>11-exp);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>|=<sp/>((exp+13)&lt;&lt;10);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>ival,<sp/>frac<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a86229873ef3805ed4ee0d8796a73b421" kindref="member">std::modf</ref>(value,<sp/>&amp;ival);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint16</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">std::abs</ref>(static_cast&lt;int&gt;(ival)));</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_to_nearest)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frac<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">std::abs</ref>(frac);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ROUND_TIES_TO_EVEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>(frac&gt;T(0.5))<sp/>|<sp/>((frac==T(0.5))&amp;hbits);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>frac<sp/>&gt;=<sp/>T(0.5);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>frac<sp/>&gt;<sp/>T();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbits<sp/>+=<sp/>frac<sp/>&lt;<sp/>T();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbits;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="680" refid="namespacehalf__float_1_1detail_1a323f122774a4f85d4ce4c4d91a8d066b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>uint16<sp/><ref refid="namespacehalf__float_1_1detail_1a323f122774a4f85d4ce4c4d91a8d066b" kindref="member">float2half</ref>(T<sp/>value)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>float2half_impl&lt;R&gt;(value,<sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">bool_type&lt;std::numeric_limits&lt;T&gt;::is_iec559</ref>&amp;&amp;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">bits&lt;T&gt;::type</ref>)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)&gt;());</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="namespacehalf__float_1_1detail_1a80ed90b3d769041decdd5eb79e6f3017" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>S,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>uint16<sp/><ref refid="namespacehalf__float_1_1detail_1a80ed90b3d769041decdd5eb79e6f3017" kindref="member">int2half_impl</ref>(T<sp/>value)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_STATIC_ASSERT<sp/>&amp;&amp;<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_integral&lt;T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>to<sp/>half<sp/>conversion<sp/>only<sp/>supports<sp/>builtin<sp/>integer<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(S)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>-value;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref><sp/>=<sp/>S<sp/>&lt;&lt;<sp/>15;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>&gt;<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>0x7C00<sp/>-<sp/>S;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>0x7BFF<sp/>+<sp/>S;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>0x7BFF<sp/>+<sp/>(R!=std::round_toward_zero);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>value,<sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref><sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>m&lt;0x400;<sp/>m&lt;&lt;=1,--<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>m&gt;0x7FF;<sp/>m&gt;&gt;=1,++<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>(exp&lt;&lt;10)<sp/>+<sp/>m;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>&gt;<sp/>24)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_to_nearest)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>+=<sp/>(value&gt;&gt;(exp-25))<sp/>&amp;<sp/>1</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ROUND_TIES_TO_EVEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>(((((1&lt;&lt;(exp-25))-1)&amp;value)!=0)|bits)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>+=<sp/>((value&amp;((1&lt;&lt;(exp-24))-1))!=0)<sp/>&amp;<sp/>!S;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>+=<sp/>((value&amp;((1&lt;&lt;(exp-24))-1))!=0)<sp/>&amp;<sp/>S;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bits;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="namespacehalf__float_1_1detail_1a739b4225bfb0a1a45dff1c76432a90c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>uint16<sp/><ref refid="namespacehalf__float_1_1detail_1a739b4225bfb0a1a45dff1c76432a90c1" kindref="member">int2half</ref>(T<sp/>value)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value&lt;0)<sp/>?<sp/>int2half_impl&lt;R,true&gt;(value)<sp/>:<sp/>int2half_impl&lt;R,false&gt;(value);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="namespacehalf__float_1_1detail_1a1f78a7e278b390a587dea90e02686e28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afe86dfbf3a3bac81cfe88aaec27969c1" kindref="member">half2float_impl</ref>(uint16<sp/>value,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>true_type)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">bits&lt;float&gt;::type</ref><sp/>uint32;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>bits<sp/>=<sp/>static_cast&lt;uint32&gt;(value&amp;0x8000)<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>abs<sp/>=<sp/>value<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(abs)</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>0x38000000<sp/>&lt;&lt;<sp/>static_cast&lt;unsigned&gt;(abs&gt;=0x7C00);</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;<sp/>abs&lt;0x400;<sp/>abs&lt;&lt;=1,bits-=0x800000)<sp/>;</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>+=<sp/>static_cast&lt;uint32&gt;(abs)<sp/>&lt;&lt;<sp/>13;</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="comment">*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32<sp/>mantissa_table[2048]<sp/>=<sp/>{<sp/></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000000,<sp/>0x33800000,<sp/>0x34000000,<sp/>0x34400000,<sp/>0x34800000,<sp/>0x34A00000,<sp/>0x34C00000,<sp/>0x34E00000,<sp/>0x35000000,<sp/>0x35100000,<sp/>0x35200000,<sp/>0x35300000,<sp/>0x35400000,<sp/>0x35500000,<sp/>0x35600000,<sp/>0x35700000,<sp/></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x35800000,<sp/>0x35880000,<sp/>0x35900000,<sp/>0x35980000,<sp/>0x35A00000,<sp/>0x35A80000,<sp/>0x35B00000,<sp/>0x35B80000,<sp/>0x35C00000,<sp/>0x35C80000,<sp/>0x35D00000,<sp/>0x35D80000,<sp/>0x35E00000,<sp/>0x35E80000,<sp/>0x35F00000,<sp/>0x35F80000,<sp/></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x36000000,<sp/>0x36040000,<sp/>0x36080000,<sp/>0x360C0000,<sp/>0x36100000,<sp/>0x36140000,<sp/>0x36180000,<sp/>0x361C0000,<sp/>0x36200000,<sp/>0x36240000,<sp/>0x36280000,<sp/>0x362C0000,<sp/>0x36300000,<sp/>0x36340000,<sp/>0x36380000,<sp/>0x363C0000,<sp/></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x36400000,<sp/>0x36440000,<sp/>0x36480000,<sp/>0x364C0000,<sp/>0x36500000,<sp/>0x36540000,<sp/>0x36580000,<sp/>0x365C0000,<sp/>0x36600000,<sp/>0x36640000,<sp/>0x36680000,<sp/>0x366C0000,<sp/>0x36700000,<sp/>0x36740000,<sp/>0x36780000,<sp/>0x367C0000,<sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x36800000,<sp/>0x36820000,<sp/>0x36840000,<sp/>0x36860000,<sp/>0x36880000,<sp/>0x368A0000,<sp/>0x368C0000,<sp/>0x368E0000,<sp/>0x36900000,<sp/>0x36920000,<sp/>0x36940000,<sp/>0x36960000,<sp/>0x36980000,<sp/>0x369A0000,<sp/>0x369C0000,<sp/>0x369E0000,<sp/></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x36A00000,<sp/>0x36A20000,<sp/>0x36A40000,<sp/>0x36A60000,<sp/>0x36A80000,<sp/>0x36AA0000,<sp/>0x36AC0000,<sp/>0x36AE0000,<sp/>0x36B00000,<sp/>0x36B20000,<sp/>0x36B40000,<sp/>0x36B60000,<sp/>0x36B80000,<sp/>0x36BA0000,<sp/>0x36BC0000,<sp/>0x36BE0000,<sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x36C00000,<sp/>0x36C20000,<sp/>0x36C40000,<sp/>0x36C60000,<sp/>0x36C80000,<sp/>0x36CA0000,<sp/>0x36CC0000,<sp/>0x36CE0000,<sp/>0x36D00000,<sp/>0x36D20000,<sp/>0x36D40000,<sp/>0x36D60000,<sp/>0x36D80000,<sp/>0x36DA0000,<sp/>0x36DC0000,<sp/>0x36DE0000,<sp/></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x36E00000,<sp/>0x36E20000,<sp/>0x36E40000,<sp/>0x36E60000,<sp/>0x36E80000,<sp/>0x36EA0000,<sp/>0x36EC0000,<sp/>0x36EE0000,<sp/>0x36F00000,<sp/>0x36F20000,<sp/>0x36F40000,<sp/>0x36F60000,<sp/>0x36F80000,<sp/>0x36FA0000,<sp/>0x36FC0000,<sp/>0x36FE0000,<sp/></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37000000,<sp/>0x37010000,<sp/>0x37020000,<sp/>0x37030000,<sp/>0x37040000,<sp/>0x37050000,<sp/>0x37060000,<sp/>0x37070000,<sp/>0x37080000,<sp/>0x37090000,<sp/>0x370A0000,<sp/>0x370B0000,<sp/>0x370C0000,<sp/>0x370D0000,<sp/>0x370E0000,<sp/>0x370F0000,<sp/></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37100000,<sp/>0x37110000,<sp/>0x37120000,<sp/>0x37130000,<sp/>0x37140000,<sp/>0x37150000,<sp/>0x37160000,<sp/>0x37170000,<sp/>0x37180000,<sp/>0x37190000,<sp/>0x371A0000,<sp/>0x371B0000,<sp/>0x371C0000,<sp/>0x371D0000,<sp/>0x371E0000,<sp/>0x371F0000,<sp/></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37200000,<sp/>0x37210000,<sp/>0x37220000,<sp/>0x37230000,<sp/>0x37240000,<sp/>0x37250000,<sp/>0x37260000,<sp/>0x37270000,<sp/>0x37280000,<sp/>0x37290000,<sp/>0x372A0000,<sp/>0x372B0000,<sp/>0x372C0000,<sp/>0x372D0000,<sp/>0x372E0000,<sp/>0x372F0000,<sp/></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37300000,<sp/>0x37310000,<sp/>0x37320000,<sp/>0x37330000,<sp/>0x37340000,<sp/>0x37350000,<sp/>0x37360000,<sp/>0x37370000,<sp/>0x37380000,<sp/>0x37390000,<sp/>0x373A0000,<sp/>0x373B0000,<sp/>0x373C0000,<sp/>0x373D0000,<sp/>0x373E0000,<sp/>0x373F0000,<sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37400000,<sp/>0x37410000,<sp/>0x37420000,<sp/>0x37430000,<sp/>0x37440000,<sp/>0x37450000,<sp/>0x37460000,<sp/>0x37470000,<sp/>0x37480000,<sp/>0x37490000,<sp/>0x374A0000,<sp/>0x374B0000,<sp/>0x374C0000,<sp/>0x374D0000,<sp/>0x374E0000,<sp/>0x374F0000,<sp/></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37500000,<sp/>0x37510000,<sp/>0x37520000,<sp/>0x37530000,<sp/>0x37540000,<sp/>0x37550000,<sp/>0x37560000,<sp/>0x37570000,<sp/>0x37580000,<sp/>0x37590000,<sp/>0x375A0000,<sp/>0x375B0000,<sp/>0x375C0000,<sp/>0x375D0000,<sp/>0x375E0000,<sp/>0x375F0000,<sp/></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37600000,<sp/>0x37610000,<sp/>0x37620000,<sp/>0x37630000,<sp/>0x37640000,<sp/>0x37650000,<sp/>0x37660000,<sp/>0x37670000,<sp/>0x37680000,<sp/>0x37690000,<sp/>0x376A0000,<sp/>0x376B0000,<sp/>0x376C0000,<sp/>0x376D0000,<sp/>0x376E0000,<sp/>0x376F0000,<sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37700000,<sp/>0x37710000,<sp/>0x37720000,<sp/>0x37730000,<sp/>0x37740000,<sp/>0x37750000,<sp/>0x37760000,<sp/>0x37770000,<sp/>0x37780000,<sp/>0x37790000,<sp/>0x377A0000,<sp/>0x377B0000,<sp/>0x377C0000,<sp/>0x377D0000,<sp/>0x377E0000,<sp/>0x377F0000,<sp/></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37800000,<sp/>0x37808000,<sp/>0x37810000,<sp/>0x37818000,<sp/>0x37820000,<sp/>0x37828000,<sp/>0x37830000,<sp/>0x37838000,<sp/>0x37840000,<sp/>0x37848000,<sp/>0x37850000,<sp/>0x37858000,<sp/>0x37860000,<sp/>0x37868000,<sp/>0x37870000,<sp/>0x37878000,<sp/></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37880000,<sp/>0x37888000,<sp/>0x37890000,<sp/>0x37898000,<sp/>0x378A0000,<sp/>0x378A8000,<sp/>0x378B0000,<sp/>0x378B8000,<sp/>0x378C0000,<sp/>0x378C8000,<sp/>0x378D0000,<sp/>0x378D8000,<sp/>0x378E0000,<sp/>0x378E8000,<sp/>0x378F0000,<sp/>0x378F8000,<sp/></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37900000,<sp/>0x37908000,<sp/>0x37910000,<sp/>0x37918000,<sp/>0x37920000,<sp/>0x37928000,<sp/>0x37930000,<sp/>0x37938000,<sp/>0x37940000,<sp/>0x37948000,<sp/>0x37950000,<sp/>0x37958000,<sp/>0x37960000,<sp/>0x37968000,<sp/>0x37970000,<sp/>0x37978000,<sp/></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37980000,<sp/>0x37988000,<sp/>0x37990000,<sp/>0x37998000,<sp/>0x379A0000,<sp/>0x379A8000,<sp/>0x379B0000,<sp/>0x379B8000,<sp/>0x379C0000,<sp/>0x379C8000,<sp/>0x379D0000,<sp/>0x379D8000,<sp/>0x379E0000,<sp/>0x379E8000,<sp/>0x379F0000,<sp/>0x379F8000,<sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37A00000,<sp/>0x37A08000,<sp/>0x37A10000,<sp/>0x37A18000,<sp/>0x37A20000,<sp/>0x37A28000,<sp/>0x37A30000,<sp/>0x37A38000,<sp/>0x37A40000,<sp/>0x37A48000,<sp/>0x37A50000,<sp/>0x37A58000,<sp/>0x37A60000,<sp/>0x37A68000,<sp/>0x37A70000,<sp/>0x37A78000,<sp/></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37A80000,<sp/>0x37A88000,<sp/>0x37A90000,<sp/>0x37A98000,<sp/>0x37AA0000,<sp/>0x37AA8000,<sp/>0x37AB0000,<sp/>0x37AB8000,<sp/>0x37AC0000,<sp/>0x37AC8000,<sp/>0x37AD0000,<sp/>0x37AD8000,<sp/>0x37AE0000,<sp/>0x37AE8000,<sp/>0x37AF0000,<sp/>0x37AF8000,<sp/></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37B00000,<sp/>0x37B08000,<sp/>0x37B10000,<sp/>0x37B18000,<sp/>0x37B20000,<sp/>0x37B28000,<sp/>0x37B30000,<sp/>0x37B38000,<sp/>0x37B40000,<sp/>0x37B48000,<sp/>0x37B50000,<sp/>0x37B58000,<sp/>0x37B60000,<sp/>0x37B68000,<sp/>0x37B70000,<sp/>0x37B78000,<sp/></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37B80000,<sp/>0x37B88000,<sp/>0x37B90000,<sp/>0x37B98000,<sp/>0x37BA0000,<sp/>0x37BA8000,<sp/>0x37BB0000,<sp/>0x37BB8000,<sp/>0x37BC0000,<sp/>0x37BC8000,<sp/>0x37BD0000,<sp/>0x37BD8000,<sp/>0x37BE0000,<sp/>0x37BE8000,<sp/>0x37BF0000,<sp/>0x37BF8000,<sp/></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37C00000,<sp/>0x37C08000,<sp/>0x37C10000,<sp/>0x37C18000,<sp/>0x37C20000,<sp/>0x37C28000,<sp/>0x37C30000,<sp/>0x37C38000,<sp/>0x37C40000,<sp/>0x37C48000,<sp/>0x37C50000,<sp/>0x37C58000,<sp/>0x37C60000,<sp/>0x37C68000,<sp/>0x37C70000,<sp/>0x37C78000,<sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37C80000,<sp/>0x37C88000,<sp/>0x37C90000,<sp/>0x37C98000,<sp/>0x37CA0000,<sp/>0x37CA8000,<sp/>0x37CB0000,<sp/>0x37CB8000,<sp/>0x37CC0000,<sp/>0x37CC8000,<sp/>0x37CD0000,<sp/>0x37CD8000,<sp/>0x37CE0000,<sp/>0x37CE8000,<sp/>0x37CF0000,<sp/>0x37CF8000,<sp/></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37D00000,<sp/>0x37D08000,<sp/>0x37D10000,<sp/>0x37D18000,<sp/>0x37D20000,<sp/>0x37D28000,<sp/>0x37D30000,<sp/>0x37D38000,<sp/>0x37D40000,<sp/>0x37D48000,<sp/>0x37D50000,<sp/>0x37D58000,<sp/>0x37D60000,<sp/>0x37D68000,<sp/>0x37D70000,<sp/>0x37D78000,<sp/></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37D80000,<sp/>0x37D88000,<sp/>0x37D90000,<sp/>0x37D98000,<sp/>0x37DA0000,<sp/>0x37DA8000,<sp/>0x37DB0000,<sp/>0x37DB8000,<sp/>0x37DC0000,<sp/>0x37DC8000,<sp/>0x37DD0000,<sp/>0x37DD8000,<sp/>0x37DE0000,<sp/>0x37DE8000,<sp/>0x37DF0000,<sp/>0x37DF8000,<sp/></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37E00000,<sp/>0x37E08000,<sp/>0x37E10000,<sp/>0x37E18000,<sp/>0x37E20000,<sp/>0x37E28000,<sp/>0x37E30000,<sp/>0x37E38000,<sp/>0x37E40000,<sp/>0x37E48000,<sp/>0x37E50000,<sp/>0x37E58000,<sp/>0x37E60000,<sp/>0x37E68000,<sp/>0x37E70000,<sp/>0x37E78000,<sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37E80000,<sp/>0x37E88000,<sp/>0x37E90000,<sp/>0x37E98000,<sp/>0x37EA0000,<sp/>0x37EA8000,<sp/>0x37EB0000,<sp/>0x37EB8000,<sp/>0x37EC0000,<sp/>0x37EC8000,<sp/>0x37ED0000,<sp/>0x37ED8000,<sp/>0x37EE0000,<sp/>0x37EE8000,<sp/>0x37EF0000,<sp/>0x37EF8000,<sp/></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37F00000,<sp/>0x37F08000,<sp/>0x37F10000,<sp/>0x37F18000,<sp/>0x37F20000,<sp/>0x37F28000,<sp/>0x37F30000,<sp/>0x37F38000,<sp/>0x37F40000,<sp/>0x37F48000,<sp/>0x37F50000,<sp/>0x37F58000,<sp/>0x37F60000,<sp/>0x37F68000,<sp/>0x37F70000,<sp/>0x37F78000,<sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37F80000,<sp/>0x37F88000,<sp/>0x37F90000,<sp/>0x37F98000,<sp/>0x37FA0000,<sp/>0x37FA8000,<sp/>0x37FB0000,<sp/>0x37FB8000,<sp/>0x37FC0000,<sp/>0x37FC8000,<sp/>0x37FD0000,<sp/>0x37FD8000,<sp/>0x37FE0000,<sp/>0x37FE8000,<sp/>0x37FF0000,<sp/>0x37FF8000,<sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38000000,<sp/>0x38004000,<sp/>0x38008000,<sp/>0x3800C000,<sp/>0x38010000,<sp/>0x38014000,<sp/>0x38018000,<sp/>0x3801C000,<sp/>0x38020000,<sp/>0x38024000,<sp/>0x38028000,<sp/>0x3802C000,<sp/>0x38030000,<sp/>0x38034000,<sp/>0x38038000,<sp/>0x3803C000,<sp/></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38040000,<sp/>0x38044000,<sp/>0x38048000,<sp/>0x3804C000,<sp/>0x38050000,<sp/>0x38054000,<sp/>0x38058000,<sp/>0x3805C000,<sp/>0x38060000,<sp/>0x38064000,<sp/>0x38068000,<sp/>0x3806C000,<sp/>0x38070000,<sp/>0x38074000,<sp/>0x38078000,<sp/>0x3807C000,<sp/></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38080000,<sp/>0x38084000,<sp/>0x38088000,<sp/>0x3808C000,<sp/>0x38090000,<sp/>0x38094000,<sp/>0x38098000,<sp/>0x3809C000,<sp/>0x380A0000,<sp/>0x380A4000,<sp/>0x380A8000,<sp/>0x380AC000,<sp/>0x380B0000,<sp/>0x380B4000,<sp/>0x380B8000,<sp/>0x380BC000,<sp/></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x380C0000,<sp/>0x380C4000,<sp/>0x380C8000,<sp/>0x380CC000,<sp/>0x380D0000,<sp/>0x380D4000,<sp/>0x380D8000,<sp/>0x380DC000,<sp/>0x380E0000,<sp/>0x380E4000,<sp/>0x380E8000,<sp/>0x380EC000,<sp/>0x380F0000,<sp/>0x380F4000,<sp/>0x380F8000,<sp/>0x380FC000,<sp/></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38100000,<sp/>0x38104000,<sp/>0x38108000,<sp/>0x3810C000,<sp/>0x38110000,<sp/>0x38114000,<sp/>0x38118000,<sp/>0x3811C000,<sp/>0x38120000,<sp/>0x38124000,<sp/>0x38128000,<sp/>0x3812C000,<sp/>0x38130000,<sp/>0x38134000,<sp/>0x38138000,<sp/>0x3813C000,<sp/></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38140000,<sp/>0x38144000,<sp/>0x38148000,<sp/>0x3814C000,<sp/>0x38150000,<sp/>0x38154000,<sp/>0x38158000,<sp/>0x3815C000,<sp/>0x38160000,<sp/>0x38164000,<sp/>0x38168000,<sp/>0x3816C000,<sp/>0x38170000,<sp/>0x38174000,<sp/>0x38178000,<sp/>0x3817C000,<sp/></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38180000,<sp/>0x38184000,<sp/>0x38188000,<sp/>0x3818C000,<sp/>0x38190000,<sp/>0x38194000,<sp/>0x38198000,<sp/>0x3819C000,<sp/>0x381A0000,<sp/>0x381A4000,<sp/>0x381A8000,<sp/>0x381AC000,<sp/>0x381B0000,<sp/>0x381B4000,<sp/>0x381B8000,<sp/>0x381BC000,<sp/></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x381C0000,<sp/>0x381C4000,<sp/>0x381C8000,<sp/>0x381CC000,<sp/>0x381D0000,<sp/>0x381D4000,<sp/>0x381D8000,<sp/>0x381DC000,<sp/>0x381E0000,<sp/>0x381E4000,<sp/>0x381E8000,<sp/>0x381EC000,<sp/>0x381F0000,<sp/>0x381F4000,<sp/>0x381F8000,<sp/>0x381FC000,<sp/></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38200000,<sp/>0x38204000,<sp/>0x38208000,<sp/>0x3820C000,<sp/>0x38210000,<sp/>0x38214000,<sp/>0x38218000,<sp/>0x3821C000,<sp/>0x38220000,<sp/>0x38224000,<sp/>0x38228000,<sp/>0x3822C000,<sp/>0x38230000,<sp/>0x38234000,<sp/>0x38238000,<sp/>0x3823C000,<sp/></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38240000,<sp/>0x38244000,<sp/>0x38248000,<sp/>0x3824C000,<sp/>0x38250000,<sp/>0x38254000,<sp/>0x38258000,<sp/>0x3825C000,<sp/>0x38260000,<sp/>0x38264000,<sp/>0x38268000,<sp/>0x3826C000,<sp/>0x38270000,<sp/>0x38274000,<sp/>0x38278000,<sp/>0x3827C000,<sp/></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38280000,<sp/>0x38284000,<sp/>0x38288000,<sp/>0x3828C000,<sp/>0x38290000,<sp/>0x38294000,<sp/>0x38298000,<sp/>0x3829C000,<sp/>0x382A0000,<sp/>0x382A4000,<sp/>0x382A8000,<sp/>0x382AC000,<sp/>0x382B0000,<sp/>0x382B4000,<sp/>0x382B8000,<sp/>0x382BC000,<sp/></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x382C0000,<sp/>0x382C4000,<sp/>0x382C8000,<sp/>0x382CC000,<sp/>0x382D0000,<sp/>0x382D4000,<sp/>0x382D8000,<sp/>0x382DC000,<sp/>0x382E0000,<sp/>0x382E4000,<sp/>0x382E8000,<sp/>0x382EC000,<sp/>0x382F0000,<sp/>0x382F4000,<sp/>0x382F8000,<sp/>0x382FC000,<sp/></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38300000,<sp/>0x38304000,<sp/>0x38308000,<sp/>0x3830C000,<sp/>0x38310000,<sp/>0x38314000,<sp/>0x38318000,<sp/>0x3831C000,<sp/>0x38320000,<sp/>0x38324000,<sp/>0x38328000,<sp/>0x3832C000,<sp/>0x38330000,<sp/>0x38334000,<sp/>0x38338000,<sp/>0x3833C000,<sp/></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38340000,<sp/>0x38344000,<sp/>0x38348000,<sp/>0x3834C000,<sp/>0x38350000,<sp/>0x38354000,<sp/>0x38358000,<sp/>0x3835C000,<sp/>0x38360000,<sp/>0x38364000,<sp/>0x38368000,<sp/>0x3836C000,<sp/>0x38370000,<sp/>0x38374000,<sp/>0x38378000,<sp/>0x3837C000,<sp/></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38380000,<sp/>0x38384000,<sp/>0x38388000,<sp/>0x3838C000,<sp/>0x38390000,<sp/>0x38394000,<sp/>0x38398000,<sp/>0x3839C000,<sp/>0x383A0000,<sp/>0x383A4000,<sp/>0x383A8000,<sp/>0x383AC000,<sp/>0x383B0000,<sp/>0x383B4000,<sp/>0x383B8000,<sp/>0x383BC000,<sp/></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x383C0000,<sp/>0x383C4000,<sp/>0x383C8000,<sp/>0x383CC000,<sp/>0x383D0000,<sp/>0x383D4000,<sp/>0x383D8000,<sp/>0x383DC000,<sp/>0x383E0000,<sp/>0x383E4000,<sp/>0x383E8000,<sp/>0x383EC000,<sp/>0x383F0000,<sp/>0x383F4000,<sp/>0x383F8000,<sp/>0x383FC000,<sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38400000,<sp/>0x38404000,<sp/>0x38408000,<sp/>0x3840C000,<sp/>0x38410000,<sp/>0x38414000,<sp/>0x38418000,<sp/>0x3841C000,<sp/>0x38420000,<sp/>0x38424000,<sp/>0x38428000,<sp/>0x3842C000,<sp/>0x38430000,<sp/>0x38434000,<sp/>0x38438000,<sp/>0x3843C000,<sp/></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38440000,<sp/>0x38444000,<sp/>0x38448000,<sp/>0x3844C000,<sp/>0x38450000,<sp/>0x38454000,<sp/>0x38458000,<sp/>0x3845C000,<sp/>0x38460000,<sp/>0x38464000,<sp/>0x38468000,<sp/>0x3846C000,<sp/>0x38470000,<sp/>0x38474000,<sp/>0x38478000,<sp/>0x3847C000,<sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38480000,<sp/>0x38484000,<sp/>0x38488000,<sp/>0x3848C000,<sp/>0x38490000,<sp/>0x38494000,<sp/>0x38498000,<sp/>0x3849C000,<sp/>0x384A0000,<sp/>0x384A4000,<sp/>0x384A8000,<sp/>0x384AC000,<sp/>0x384B0000,<sp/>0x384B4000,<sp/>0x384B8000,<sp/>0x384BC000,<sp/></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x384C0000,<sp/>0x384C4000,<sp/>0x384C8000,<sp/>0x384CC000,<sp/>0x384D0000,<sp/>0x384D4000,<sp/>0x384D8000,<sp/>0x384DC000,<sp/>0x384E0000,<sp/>0x384E4000,<sp/>0x384E8000,<sp/>0x384EC000,<sp/>0x384F0000,<sp/>0x384F4000,<sp/>0x384F8000,<sp/>0x384FC000,<sp/></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38500000,<sp/>0x38504000,<sp/>0x38508000,<sp/>0x3850C000,<sp/>0x38510000,<sp/>0x38514000,<sp/>0x38518000,<sp/>0x3851C000,<sp/>0x38520000,<sp/>0x38524000,<sp/>0x38528000,<sp/>0x3852C000,<sp/>0x38530000,<sp/>0x38534000,<sp/>0x38538000,<sp/>0x3853C000,<sp/></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38540000,<sp/>0x38544000,<sp/>0x38548000,<sp/>0x3854C000,<sp/>0x38550000,<sp/>0x38554000,<sp/>0x38558000,<sp/>0x3855C000,<sp/>0x38560000,<sp/>0x38564000,<sp/>0x38568000,<sp/>0x3856C000,<sp/>0x38570000,<sp/>0x38574000,<sp/>0x38578000,<sp/>0x3857C000,<sp/></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38580000,<sp/>0x38584000,<sp/>0x38588000,<sp/>0x3858C000,<sp/>0x38590000,<sp/>0x38594000,<sp/>0x38598000,<sp/>0x3859C000,<sp/>0x385A0000,<sp/>0x385A4000,<sp/>0x385A8000,<sp/>0x385AC000,<sp/>0x385B0000,<sp/>0x385B4000,<sp/>0x385B8000,<sp/>0x385BC000,<sp/></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x385C0000,<sp/>0x385C4000,<sp/>0x385C8000,<sp/>0x385CC000,<sp/>0x385D0000,<sp/>0x385D4000,<sp/>0x385D8000,<sp/>0x385DC000,<sp/>0x385E0000,<sp/>0x385E4000,<sp/>0x385E8000,<sp/>0x385EC000,<sp/>0x385F0000,<sp/>0x385F4000,<sp/>0x385F8000,<sp/>0x385FC000,<sp/></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38600000,<sp/>0x38604000,<sp/>0x38608000,<sp/>0x3860C000,<sp/>0x38610000,<sp/>0x38614000,<sp/>0x38618000,<sp/>0x3861C000,<sp/>0x38620000,<sp/>0x38624000,<sp/>0x38628000,<sp/>0x3862C000,<sp/>0x38630000,<sp/>0x38634000,<sp/>0x38638000,<sp/>0x3863C000,<sp/></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38640000,<sp/>0x38644000,<sp/>0x38648000,<sp/>0x3864C000,<sp/>0x38650000,<sp/>0x38654000,<sp/>0x38658000,<sp/>0x3865C000,<sp/>0x38660000,<sp/>0x38664000,<sp/>0x38668000,<sp/>0x3866C000,<sp/>0x38670000,<sp/>0x38674000,<sp/>0x38678000,<sp/>0x3867C000,<sp/></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38680000,<sp/>0x38684000,<sp/>0x38688000,<sp/>0x3868C000,<sp/>0x38690000,<sp/>0x38694000,<sp/>0x38698000,<sp/>0x3869C000,<sp/>0x386A0000,<sp/>0x386A4000,<sp/>0x386A8000,<sp/>0x386AC000,<sp/>0x386B0000,<sp/>0x386B4000,<sp/>0x386B8000,<sp/>0x386BC000,<sp/></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x386C0000,<sp/>0x386C4000,<sp/>0x386C8000,<sp/>0x386CC000,<sp/>0x386D0000,<sp/>0x386D4000,<sp/>0x386D8000,<sp/>0x386DC000,<sp/>0x386E0000,<sp/>0x386E4000,<sp/>0x386E8000,<sp/>0x386EC000,<sp/>0x386F0000,<sp/>0x386F4000,<sp/>0x386F8000,<sp/>0x386FC000,<sp/></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38700000,<sp/>0x38704000,<sp/>0x38708000,<sp/>0x3870C000,<sp/>0x38710000,<sp/>0x38714000,<sp/>0x38718000,<sp/>0x3871C000,<sp/>0x38720000,<sp/>0x38724000,<sp/>0x38728000,<sp/>0x3872C000,<sp/>0x38730000,<sp/>0x38734000,<sp/>0x38738000,<sp/>0x3873C000,<sp/></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38740000,<sp/>0x38744000,<sp/>0x38748000,<sp/>0x3874C000,<sp/>0x38750000,<sp/>0x38754000,<sp/>0x38758000,<sp/>0x3875C000,<sp/>0x38760000,<sp/>0x38764000,<sp/>0x38768000,<sp/>0x3876C000,<sp/>0x38770000,<sp/>0x38774000,<sp/>0x38778000,<sp/>0x3877C000,<sp/></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38780000,<sp/>0x38784000,<sp/>0x38788000,<sp/>0x3878C000,<sp/>0x38790000,<sp/>0x38794000,<sp/>0x38798000,<sp/>0x3879C000,<sp/>0x387A0000,<sp/>0x387A4000,<sp/>0x387A8000,<sp/>0x387AC000,<sp/>0x387B0000,<sp/>0x387B4000,<sp/>0x387B8000,<sp/>0x387BC000,<sp/></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x387C0000,<sp/>0x387C4000,<sp/>0x387C8000,<sp/>0x387CC000,<sp/>0x387D0000,<sp/>0x387D4000,<sp/>0x387D8000,<sp/>0x387DC000,<sp/>0x387E0000,<sp/>0x387E4000,<sp/>0x387E8000,<sp/>0x387EC000,<sp/>0x387F0000,<sp/>0x387F4000,<sp/>0x387F8000,<sp/>0x387FC000,<sp/></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38000000,<sp/>0x38002000,<sp/>0x38004000,<sp/>0x38006000,<sp/>0x38008000,<sp/>0x3800A000,<sp/>0x3800C000,<sp/>0x3800E000,<sp/>0x38010000,<sp/>0x38012000,<sp/>0x38014000,<sp/>0x38016000,<sp/>0x38018000,<sp/>0x3801A000,<sp/>0x3801C000,<sp/>0x3801E000,<sp/></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38020000,<sp/>0x38022000,<sp/>0x38024000,<sp/>0x38026000,<sp/>0x38028000,<sp/>0x3802A000,<sp/>0x3802C000,<sp/>0x3802E000,<sp/>0x38030000,<sp/>0x38032000,<sp/>0x38034000,<sp/>0x38036000,<sp/>0x38038000,<sp/>0x3803A000,<sp/>0x3803C000,<sp/>0x3803E000,<sp/></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38040000,<sp/>0x38042000,<sp/>0x38044000,<sp/>0x38046000,<sp/>0x38048000,<sp/>0x3804A000,<sp/>0x3804C000,<sp/>0x3804E000,<sp/>0x38050000,<sp/>0x38052000,<sp/>0x38054000,<sp/>0x38056000,<sp/>0x38058000,<sp/>0x3805A000,<sp/>0x3805C000,<sp/>0x3805E000,<sp/></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38060000,<sp/>0x38062000,<sp/>0x38064000,<sp/>0x38066000,<sp/>0x38068000,<sp/>0x3806A000,<sp/>0x3806C000,<sp/>0x3806E000,<sp/>0x38070000,<sp/>0x38072000,<sp/>0x38074000,<sp/>0x38076000,<sp/>0x38078000,<sp/>0x3807A000,<sp/>0x3807C000,<sp/>0x3807E000,<sp/></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38080000,<sp/>0x38082000,<sp/>0x38084000,<sp/>0x38086000,<sp/>0x38088000,<sp/>0x3808A000,<sp/>0x3808C000,<sp/>0x3808E000,<sp/>0x38090000,<sp/>0x38092000,<sp/>0x38094000,<sp/>0x38096000,<sp/>0x38098000,<sp/>0x3809A000,<sp/>0x3809C000,<sp/>0x3809E000,<sp/></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x380A0000,<sp/>0x380A2000,<sp/>0x380A4000,<sp/>0x380A6000,<sp/>0x380A8000,<sp/>0x380AA000,<sp/>0x380AC000,<sp/>0x380AE000,<sp/>0x380B0000,<sp/>0x380B2000,<sp/>0x380B4000,<sp/>0x380B6000,<sp/>0x380B8000,<sp/>0x380BA000,<sp/>0x380BC000,<sp/>0x380BE000,<sp/></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x380C0000,<sp/>0x380C2000,<sp/>0x380C4000,<sp/>0x380C6000,<sp/>0x380C8000,<sp/>0x380CA000,<sp/>0x380CC000,<sp/>0x380CE000,<sp/>0x380D0000,<sp/>0x380D2000,<sp/>0x380D4000,<sp/>0x380D6000,<sp/>0x380D8000,<sp/>0x380DA000,<sp/>0x380DC000,<sp/>0x380DE000,<sp/></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x380E0000,<sp/>0x380E2000,<sp/>0x380E4000,<sp/>0x380E6000,<sp/>0x380E8000,<sp/>0x380EA000,<sp/>0x380EC000,<sp/>0x380EE000,<sp/>0x380F0000,<sp/>0x380F2000,<sp/>0x380F4000,<sp/>0x380F6000,<sp/>0x380F8000,<sp/>0x380FA000,<sp/>0x380FC000,<sp/>0x380FE000,<sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38100000,<sp/>0x38102000,<sp/>0x38104000,<sp/>0x38106000,<sp/>0x38108000,<sp/>0x3810A000,<sp/>0x3810C000,<sp/>0x3810E000,<sp/>0x38110000,<sp/>0x38112000,<sp/>0x38114000,<sp/>0x38116000,<sp/>0x38118000,<sp/>0x3811A000,<sp/>0x3811C000,<sp/>0x3811E000,<sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38120000,<sp/>0x38122000,<sp/>0x38124000,<sp/>0x38126000,<sp/>0x38128000,<sp/>0x3812A000,<sp/>0x3812C000,<sp/>0x3812E000,<sp/>0x38130000,<sp/>0x38132000,<sp/>0x38134000,<sp/>0x38136000,<sp/>0x38138000,<sp/>0x3813A000,<sp/>0x3813C000,<sp/>0x3813E000,<sp/></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38140000,<sp/>0x38142000,<sp/>0x38144000,<sp/>0x38146000,<sp/>0x38148000,<sp/>0x3814A000,<sp/>0x3814C000,<sp/>0x3814E000,<sp/>0x38150000,<sp/>0x38152000,<sp/>0x38154000,<sp/>0x38156000,<sp/>0x38158000,<sp/>0x3815A000,<sp/>0x3815C000,<sp/>0x3815E000,<sp/></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38160000,<sp/>0x38162000,<sp/>0x38164000,<sp/>0x38166000,<sp/>0x38168000,<sp/>0x3816A000,<sp/>0x3816C000,<sp/>0x3816E000,<sp/>0x38170000,<sp/>0x38172000,<sp/>0x38174000,<sp/>0x38176000,<sp/>0x38178000,<sp/>0x3817A000,<sp/>0x3817C000,<sp/>0x3817E000,<sp/></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38180000,<sp/>0x38182000,<sp/>0x38184000,<sp/>0x38186000,<sp/>0x38188000,<sp/>0x3818A000,<sp/>0x3818C000,<sp/>0x3818E000,<sp/>0x38190000,<sp/>0x38192000,<sp/>0x38194000,<sp/>0x38196000,<sp/>0x38198000,<sp/>0x3819A000,<sp/>0x3819C000,<sp/>0x3819E000,<sp/></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x381A0000,<sp/>0x381A2000,<sp/>0x381A4000,<sp/>0x381A6000,<sp/>0x381A8000,<sp/>0x381AA000,<sp/>0x381AC000,<sp/>0x381AE000,<sp/>0x381B0000,<sp/>0x381B2000,<sp/>0x381B4000,<sp/>0x381B6000,<sp/>0x381B8000,<sp/>0x381BA000,<sp/>0x381BC000,<sp/>0x381BE000,<sp/></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x381C0000,<sp/>0x381C2000,<sp/>0x381C4000,<sp/>0x381C6000,<sp/>0x381C8000,<sp/>0x381CA000,<sp/>0x381CC000,<sp/>0x381CE000,<sp/>0x381D0000,<sp/>0x381D2000,<sp/>0x381D4000,<sp/>0x381D6000,<sp/>0x381D8000,<sp/>0x381DA000,<sp/>0x381DC000,<sp/>0x381DE000,<sp/></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x381E0000,<sp/>0x381E2000,<sp/>0x381E4000,<sp/>0x381E6000,<sp/>0x381E8000,<sp/>0x381EA000,<sp/>0x381EC000,<sp/>0x381EE000,<sp/>0x381F0000,<sp/>0x381F2000,<sp/>0x381F4000,<sp/>0x381F6000,<sp/>0x381F8000,<sp/>0x381FA000,<sp/>0x381FC000,<sp/>0x381FE000,<sp/></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38200000,<sp/>0x38202000,<sp/>0x38204000,<sp/>0x38206000,<sp/>0x38208000,<sp/>0x3820A000,<sp/>0x3820C000,<sp/>0x3820E000,<sp/>0x38210000,<sp/>0x38212000,<sp/>0x38214000,<sp/>0x38216000,<sp/>0x38218000,<sp/>0x3821A000,<sp/>0x3821C000,<sp/>0x3821E000,<sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38220000,<sp/>0x38222000,<sp/>0x38224000,<sp/>0x38226000,<sp/>0x38228000,<sp/>0x3822A000,<sp/>0x3822C000,<sp/>0x3822E000,<sp/>0x38230000,<sp/>0x38232000,<sp/>0x38234000,<sp/>0x38236000,<sp/>0x38238000,<sp/>0x3823A000,<sp/>0x3823C000,<sp/>0x3823E000,<sp/></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38240000,<sp/>0x38242000,<sp/>0x38244000,<sp/>0x38246000,<sp/>0x38248000,<sp/>0x3824A000,<sp/>0x3824C000,<sp/>0x3824E000,<sp/>0x38250000,<sp/>0x38252000,<sp/>0x38254000,<sp/>0x38256000,<sp/>0x38258000,<sp/>0x3825A000,<sp/>0x3825C000,<sp/>0x3825E000,<sp/></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38260000,<sp/>0x38262000,<sp/>0x38264000,<sp/>0x38266000,<sp/>0x38268000,<sp/>0x3826A000,<sp/>0x3826C000,<sp/>0x3826E000,<sp/>0x38270000,<sp/>0x38272000,<sp/>0x38274000,<sp/>0x38276000,<sp/>0x38278000,<sp/>0x3827A000,<sp/>0x3827C000,<sp/>0x3827E000,<sp/></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38280000,<sp/>0x38282000,<sp/>0x38284000,<sp/>0x38286000,<sp/>0x38288000,<sp/>0x3828A000,<sp/>0x3828C000,<sp/>0x3828E000,<sp/>0x38290000,<sp/>0x38292000,<sp/>0x38294000,<sp/>0x38296000,<sp/>0x38298000,<sp/>0x3829A000,<sp/>0x3829C000,<sp/>0x3829E000,<sp/></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x382A0000,<sp/>0x382A2000,<sp/>0x382A4000,<sp/>0x382A6000,<sp/>0x382A8000,<sp/>0x382AA000,<sp/>0x382AC000,<sp/>0x382AE000,<sp/>0x382B0000,<sp/>0x382B2000,<sp/>0x382B4000,<sp/>0x382B6000,<sp/>0x382B8000,<sp/>0x382BA000,<sp/>0x382BC000,<sp/>0x382BE000,<sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x382C0000,<sp/>0x382C2000,<sp/>0x382C4000,<sp/>0x382C6000,<sp/>0x382C8000,<sp/>0x382CA000,<sp/>0x382CC000,<sp/>0x382CE000,<sp/>0x382D0000,<sp/>0x382D2000,<sp/>0x382D4000,<sp/>0x382D6000,<sp/>0x382D8000,<sp/>0x382DA000,<sp/>0x382DC000,<sp/>0x382DE000,<sp/></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x382E0000,<sp/>0x382E2000,<sp/>0x382E4000,<sp/>0x382E6000,<sp/>0x382E8000,<sp/>0x382EA000,<sp/>0x382EC000,<sp/>0x382EE000,<sp/>0x382F0000,<sp/>0x382F2000,<sp/>0x382F4000,<sp/>0x382F6000,<sp/>0x382F8000,<sp/>0x382FA000,<sp/>0x382FC000,<sp/>0x382FE000,<sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38300000,<sp/>0x38302000,<sp/>0x38304000,<sp/>0x38306000,<sp/>0x38308000,<sp/>0x3830A000,<sp/>0x3830C000,<sp/>0x3830E000,<sp/>0x38310000,<sp/>0x38312000,<sp/>0x38314000,<sp/>0x38316000,<sp/>0x38318000,<sp/>0x3831A000,<sp/>0x3831C000,<sp/>0x3831E000,<sp/></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38320000,<sp/>0x38322000,<sp/>0x38324000,<sp/>0x38326000,<sp/>0x38328000,<sp/>0x3832A000,<sp/>0x3832C000,<sp/>0x3832E000,<sp/>0x38330000,<sp/>0x38332000,<sp/>0x38334000,<sp/>0x38336000,<sp/>0x38338000,<sp/>0x3833A000,<sp/>0x3833C000,<sp/>0x3833E000,<sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38340000,<sp/>0x38342000,<sp/>0x38344000,<sp/>0x38346000,<sp/>0x38348000,<sp/>0x3834A000,<sp/>0x3834C000,<sp/>0x3834E000,<sp/>0x38350000,<sp/>0x38352000,<sp/>0x38354000,<sp/>0x38356000,<sp/>0x38358000,<sp/>0x3835A000,<sp/>0x3835C000,<sp/>0x3835E000,<sp/></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38360000,<sp/>0x38362000,<sp/>0x38364000,<sp/>0x38366000,<sp/>0x38368000,<sp/>0x3836A000,<sp/>0x3836C000,<sp/>0x3836E000,<sp/>0x38370000,<sp/>0x38372000,<sp/>0x38374000,<sp/>0x38376000,<sp/>0x38378000,<sp/>0x3837A000,<sp/>0x3837C000,<sp/>0x3837E000,<sp/></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38380000,<sp/>0x38382000,<sp/>0x38384000,<sp/>0x38386000,<sp/>0x38388000,<sp/>0x3838A000,<sp/>0x3838C000,<sp/>0x3838E000,<sp/>0x38390000,<sp/>0x38392000,<sp/>0x38394000,<sp/>0x38396000,<sp/>0x38398000,<sp/>0x3839A000,<sp/>0x3839C000,<sp/>0x3839E000,<sp/></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x383A0000,<sp/>0x383A2000,<sp/>0x383A4000,<sp/>0x383A6000,<sp/>0x383A8000,<sp/>0x383AA000,<sp/>0x383AC000,<sp/>0x383AE000,<sp/>0x383B0000,<sp/>0x383B2000,<sp/>0x383B4000,<sp/>0x383B6000,<sp/>0x383B8000,<sp/>0x383BA000,<sp/>0x383BC000,<sp/>0x383BE000,<sp/></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x383C0000,<sp/>0x383C2000,<sp/>0x383C4000,<sp/>0x383C6000,<sp/>0x383C8000,<sp/>0x383CA000,<sp/>0x383CC000,<sp/>0x383CE000,<sp/>0x383D0000,<sp/>0x383D2000,<sp/>0x383D4000,<sp/>0x383D6000,<sp/>0x383D8000,<sp/>0x383DA000,<sp/>0x383DC000,<sp/>0x383DE000,<sp/></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x383E0000,<sp/>0x383E2000,<sp/>0x383E4000,<sp/>0x383E6000,<sp/>0x383E8000,<sp/>0x383EA000,<sp/>0x383EC000,<sp/>0x383EE000,<sp/>0x383F0000,<sp/>0x383F2000,<sp/>0x383F4000,<sp/>0x383F6000,<sp/>0x383F8000,<sp/>0x383FA000,<sp/>0x383FC000,<sp/>0x383FE000,<sp/></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38400000,<sp/>0x38402000,<sp/>0x38404000,<sp/>0x38406000,<sp/>0x38408000,<sp/>0x3840A000,<sp/>0x3840C000,<sp/>0x3840E000,<sp/>0x38410000,<sp/>0x38412000,<sp/>0x38414000,<sp/>0x38416000,<sp/>0x38418000,<sp/>0x3841A000,<sp/>0x3841C000,<sp/>0x3841E000,<sp/></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38420000,<sp/>0x38422000,<sp/>0x38424000,<sp/>0x38426000,<sp/>0x38428000,<sp/>0x3842A000,<sp/>0x3842C000,<sp/>0x3842E000,<sp/>0x38430000,<sp/>0x38432000,<sp/>0x38434000,<sp/>0x38436000,<sp/>0x38438000,<sp/>0x3843A000,<sp/>0x3843C000,<sp/>0x3843E000,<sp/></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38440000,<sp/>0x38442000,<sp/>0x38444000,<sp/>0x38446000,<sp/>0x38448000,<sp/>0x3844A000,<sp/>0x3844C000,<sp/>0x3844E000,<sp/>0x38450000,<sp/>0x38452000,<sp/>0x38454000,<sp/>0x38456000,<sp/>0x38458000,<sp/>0x3845A000,<sp/>0x3845C000,<sp/>0x3845E000,<sp/></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38460000,<sp/>0x38462000,<sp/>0x38464000,<sp/>0x38466000,<sp/>0x38468000,<sp/>0x3846A000,<sp/>0x3846C000,<sp/>0x3846E000,<sp/>0x38470000,<sp/>0x38472000,<sp/>0x38474000,<sp/>0x38476000,<sp/>0x38478000,<sp/>0x3847A000,<sp/>0x3847C000,<sp/>0x3847E000,<sp/></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38480000,<sp/>0x38482000,<sp/>0x38484000,<sp/>0x38486000,<sp/>0x38488000,<sp/>0x3848A000,<sp/>0x3848C000,<sp/>0x3848E000,<sp/>0x38490000,<sp/>0x38492000,<sp/>0x38494000,<sp/>0x38496000,<sp/>0x38498000,<sp/>0x3849A000,<sp/>0x3849C000,<sp/>0x3849E000,<sp/></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x384A0000,<sp/>0x384A2000,<sp/>0x384A4000,<sp/>0x384A6000,<sp/>0x384A8000,<sp/>0x384AA000,<sp/>0x384AC000,<sp/>0x384AE000,<sp/>0x384B0000,<sp/>0x384B2000,<sp/>0x384B4000,<sp/>0x384B6000,<sp/>0x384B8000,<sp/>0x384BA000,<sp/>0x384BC000,<sp/>0x384BE000,<sp/></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x384C0000,<sp/>0x384C2000,<sp/>0x384C4000,<sp/>0x384C6000,<sp/>0x384C8000,<sp/>0x384CA000,<sp/>0x384CC000,<sp/>0x384CE000,<sp/>0x384D0000,<sp/>0x384D2000,<sp/>0x384D4000,<sp/>0x384D6000,<sp/>0x384D8000,<sp/>0x384DA000,<sp/>0x384DC000,<sp/>0x384DE000,<sp/></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x384E0000,<sp/>0x384E2000,<sp/>0x384E4000,<sp/>0x384E6000,<sp/>0x384E8000,<sp/>0x384EA000,<sp/>0x384EC000,<sp/>0x384EE000,<sp/>0x384F0000,<sp/>0x384F2000,<sp/>0x384F4000,<sp/>0x384F6000,<sp/>0x384F8000,<sp/>0x384FA000,<sp/>0x384FC000,<sp/>0x384FE000,<sp/></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38500000,<sp/>0x38502000,<sp/>0x38504000,<sp/>0x38506000,<sp/>0x38508000,<sp/>0x3850A000,<sp/>0x3850C000,<sp/>0x3850E000,<sp/>0x38510000,<sp/>0x38512000,<sp/>0x38514000,<sp/>0x38516000,<sp/>0x38518000,<sp/>0x3851A000,<sp/>0x3851C000,<sp/>0x3851E000,<sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38520000,<sp/>0x38522000,<sp/>0x38524000,<sp/>0x38526000,<sp/>0x38528000,<sp/>0x3852A000,<sp/>0x3852C000,<sp/>0x3852E000,<sp/>0x38530000,<sp/>0x38532000,<sp/>0x38534000,<sp/>0x38536000,<sp/>0x38538000,<sp/>0x3853A000,<sp/>0x3853C000,<sp/>0x3853E000,<sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38540000,<sp/>0x38542000,<sp/>0x38544000,<sp/>0x38546000,<sp/>0x38548000,<sp/>0x3854A000,<sp/>0x3854C000,<sp/>0x3854E000,<sp/>0x38550000,<sp/>0x38552000,<sp/>0x38554000,<sp/>0x38556000,<sp/>0x38558000,<sp/>0x3855A000,<sp/>0x3855C000,<sp/>0x3855E000,<sp/></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38560000,<sp/>0x38562000,<sp/>0x38564000,<sp/>0x38566000,<sp/>0x38568000,<sp/>0x3856A000,<sp/>0x3856C000,<sp/>0x3856E000,<sp/>0x38570000,<sp/>0x38572000,<sp/>0x38574000,<sp/>0x38576000,<sp/>0x38578000,<sp/>0x3857A000,<sp/>0x3857C000,<sp/>0x3857E000,<sp/></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38580000,<sp/>0x38582000,<sp/>0x38584000,<sp/>0x38586000,<sp/>0x38588000,<sp/>0x3858A000,<sp/>0x3858C000,<sp/>0x3858E000,<sp/>0x38590000,<sp/>0x38592000,<sp/>0x38594000,<sp/>0x38596000,<sp/>0x38598000,<sp/>0x3859A000,<sp/>0x3859C000,<sp/>0x3859E000,<sp/></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x385A0000,<sp/>0x385A2000,<sp/>0x385A4000,<sp/>0x385A6000,<sp/>0x385A8000,<sp/>0x385AA000,<sp/>0x385AC000,<sp/>0x385AE000,<sp/>0x385B0000,<sp/>0x385B2000,<sp/>0x385B4000,<sp/>0x385B6000,<sp/>0x385B8000,<sp/>0x385BA000,<sp/>0x385BC000,<sp/>0x385BE000,<sp/></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x385C0000,<sp/>0x385C2000,<sp/>0x385C4000,<sp/>0x385C6000,<sp/>0x385C8000,<sp/>0x385CA000,<sp/>0x385CC000,<sp/>0x385CE000,<sp/>0x385D0000,<sp/>0x385D2000,<sp/>0x385D4000,<sp/>0x385D6000,<sp/>0x385D8000,<sp/>0x385DA000,<sp/>0x385DC000,<sp/>0x385DE000,<sp/></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x385E0000,<sp/>0x385E2000,<sp/>0x385E4000,<sp/>0x385E6000,<sp/>0x385E8000,<sp/>0x385EA000,<sp/>0x385EC000,<sp/>0x385EE000,<sp/>0x385F0000,<sp/>0x385F2000,<sp/>0x385F4000,<sp/>0x385F6000,<sp/>0x385F8000,<sp/>0x385FA000,<sp/>0x385FC000,<sp/>0x385FE000,<sp/></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38600000,<sp/>0x38602000,<sp/>0x38604000,<sp/>0x38606000,<sp/>0x38608000,<sp/>0x3860A000,<sp/>0x3860C000,<sp/>0x3860E000,<sp/>0x38610000,<sp/>0x38612000,<sp/>0x38614000,<sp/>0x38616000,<sp/>0x38618000,<sp/>0x3861A000,<sp/>0x3861C000,<sp/>0x3861E000,<sp/></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38620000,<sp/>0x38622000,<sp/>0x38624000,<sp/>0x38626000,<sp/>0x38628000,<sp/>0x3862A000,<sp/>0x3862C000,<sp/>0x3862E000,<sp/>0x38630000,<sp/>0x38632000,<sp/>0x38634000,<sp/>0x38636000,<sp/>0x38638000,<sp/>0x3863A000,<sp/>0x3863C000,<sp/>0x3863E000,<sp/></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38640000,<sp/>0x38642000,<sp/>0x38644000,<sp/>0x38646000,<sp/>0x38648000,<sp/>0x3864A000,<sp/>0x3864C000,<sp/>0x3864E000,<sp/>0x38650000,<sp/>0x38652000,<sp/>0x38654000,<sp/>0x38656000,<sp/>0x38658000,<sp/>0x3865A000,<sp/>0x3865C000,<sp/>0x3865E000,<sp/></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38660000,<sp/>0x38662000,<sp/>0x38664000,<sp/>0x38666000,<sp/>0x38668000,<sp/>0x3866A000,<sp/>0x3866C000,<sp/>0x3866E000,<sp/>0x38670000,<sp/>0x38672000,<sp/>0x38674000,<sp/>0x38676000,<sp/>0x38678000,<sp/>0x3867A000,<sp/>0x3867C000,<sp/>0x3867E000,<sp/></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38680000,<sp/>0x38682000,<sp/>0x38684000,<sp/>0x38686000,<sp/>0x38688000,<sp/>0x3868A000,<sp/>0x3868C000,<sp/>0x3868E000,<sp/>0x38690000,<sp/>0x38692000,<sp/>0x38694000,<sp/>0x38696000,<sp/>0x38698000,<sp/>0x3869A000,<sp/>0x3869C000,<sp/>0x3869E000,<sp/></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x386A0000,<sp/>0x386A2000,<sp/>0x386A4000,<sp/>0x386A6000,<sp/>0x386A8000,<sp/>0x386AA000,<sp/>0x386AC000,<sp/>0x386AE000,<sp/>0x386B0000,<sp/>0x386B2000,<sp/>0x386B4000,<sp/>0x386B6000,<sp/>0x386B8000,<sp/>0x386BA000,<sp/>0x386BC000,<sp/>0x386BE000,<sp/></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x386C0000,<sp/>0x386C2000,<sp/>0x386C4000,<sp/>0x386C6000,<sp/>0x386C8000,<sp/>0x386CA000,<sp/>0x386CC000,<sp/>0x386CE000,<sp/>0x386D0000,<sp/>0x386D2000,<sp/>0x386D4000,<sp/>0x386D6000,<sp/>0x386D8000,<sp/>0x386DA000,<sp/>0x386DC000,<sp/>0x386DE000,<sp/></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x386E0000,<sp/>0x386E2000,<sp/>0x386E4000,<sp/>0x386E6000,<sp/>0x386E8000,<sp/>0x386EA000,<sp/>0x386EC000,<sp/>0x386EE000,<sp/>0x386F0000,<sp/>0x386F2000,<sp/>0x386F4000,<sp/>0x386F6000,<sp/>0x386F8000,<sp/>0x386FA000,<sp/>0x386FC000,<sp/>0x386FE000,<sp/></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38700000,<sp/>0x38702000,<sp/>0x38704000,<sp/>0x38706000,<sp/>0x38708000,<sp/>0x3870A000,<sp/>0x3870C000,<sp/>0x3870E000,<sp/>0x38710000,<sp/>0x38712000,<sp/>0x38714000,<sp/>0x38716000,<sp/>0x38718000,<sp/>0x3871A000,<sp/>0x3871C000,<sp/>0x3871E000,<sp/></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38720000,<sp/>0x38722000,<sp/>0x38724000,<sp/>0x38726000,<sp/>0x38728000,<sp/>0x3872A000,<sp/>0x3872C000,<sp/>0x3872E000,<sp/>0x38730000,<sp/>0x38732000,<sp/>0x38734000,<sp/>0x38736000,<sp/>0x38738000,<sp/>0x3873A000,<sp/>0x3873C000,<sp/>0x3873E000,<sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38740000,<sp/>0x38742000,<sp/>0x38744000,<sp/>0x38746000,<sp/>0x38748000,<sp/>0x3874A000,<sp/>0x3874C000,<sp/>0x3874E000,<sp/>0x38750000,<sp/>0x38752000,<sp/>0x38754000,<sp/>0x38756000,<sp/>0x38758000,<sp/>0x3875A000,<sp/>0x3875C000,<sp/>0x3875E000,<sp/></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38760000,<sp/>0x38762000,<sp/>0x38764000,<sp/>0x38766000,<sp/>0x38768000,<sp/>0x3876A000,<sp/>0x3876C000,<sp/>0x3876E000,<sp/>0x38770000,<sp/>0x38772000,<sp/>0x38774000,<sp/>0x38776000,<sp/>0x38778000,<sp/>0x3877A000,<sp/>0x3877C000,<sp/>0x3877E000,<sp/></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x38780000,<sp/>0x38782000,<sp/>0x38784000,<sp/>0x38786000,<sp/>0x38788000,<sp/>0x3878A000,<sp/>0x3878C000,<sp/>0x3878E000,<sp/>0x38790000,<sp/>0x38792000,<sp/>0x38794000,<sp/>0x38796000,<sp/>0x38798000,<sp/>0x3879A000,<sp/>0x3879C000,<sp/>0x3879E000,<sp/></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x387A0000,<sp/>0x387A2000,<sp/>0x387A4000,<sp/>0x387A6000,<sp/>0x387A8000,<sp/>0x387AA000,<sp/>0x387AC000,<sp/>0x387AE000,<sp/>0x387B0000,<sp/>0x387B2000,<sp/>0x387B4000,<sp/>0x387B6000,<sp/>0x387B8000,<sp/>0x387BA000,<sp/>0x387BC000,<sp/>0x387BE000,<sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x387C0000,<sp/>0x387C2000,<sp/>0x387C4000,<sp/>0x387C6000,<sp/>0x387C8000,<sp/>0x387CA000,<sp/>0x387CC000,<sp/>0x387CE000,<sp/>0x387D0000,<sp/>0x387D2000,<sp/>0x387D4000,<sp/>0x387D6000,<sp/>0x387D8000,<sp/>0x387DA000,<sp/>0x387DC000,<sp/>0x387DE000,<sp/></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x387E0000,<sp/>0x387E2000,<sp/>0x387E4000,<sp/>0x387E6000,<sp/>0x387E8000,<sp/>0x387EA000,<sp/>0x387EC000,<sp/>0x387EE000,<sp/>0x387F0000,<sp/>0x387F2000,<sp/>0x387F4000,<sp/>0x387F6000,<sp/>0x387F8000,<sp/>0x387FA000,<sp/>0x387FC000,<sp/>0x387FE000<sp/>};</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32<sp/>exponent_table[64]<sp/>=<sp/>{<sp/></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000000,<sp/>0x00800000,<sp/>0x01000000,<sp/>0x01800000,<sp/>0x02000000,<sp/>0x02800000,<sp/>0x03000000,<sp/>0x03800000,<sp/>0x04000000,<sp/>0x04800000,<sp/>0x05000000,<sp/>0x05800000,<sp/>0x06000000,<sp/>0x06800000,<sp/>0x07000000,<sp/>0x07800000,<sp/></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x08000000,<sp/>0x08800000,<sp/>0x09000000,<sp/>0x09800000,<sp/>0x0A000000,<sp/>0x0A800000,<sp/>0x0B000000,<sp/>0x0B800000,<sp/>0x0C000000,<sp/>0x0C800000,<sp/>0x0D000000,<sp/>0x0D800000,<sp/>0x0E000000,<sp/>0x0E800000,<sp/>0x0F000000,<sp/>0x47800000,<sp/></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80000000,<sp/>0x80800000,<sp/>0x81000000,<sp/>0x81800000,<sp/>0x82000000,<sp/>0x82800000,<sp/>0x83000000,<sp/>0x83800000,<sp/>0x84000000,<sp/>0x84800000,<sp/>0x85000000,<sp/>0x85800000,<sp/>0x86000000,<sp/>0x86800000,<sp/>0x87000000,<sp/>0x87800000,<sp/></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x88000000,<sp/>0x88800000,<sp/>0x89000000,<sp/>0x89800000,<sp/>0x8A000000,<sp/>0x8A800000,<sp/>0x8B000000,<sp/>0x8B800000,<sp/>0x8C000000,<sp/>0x8C800000,<sp/>0x8D000000,<sp/>0x8D800000,<sp/>0x8E000000,<sp/>0x8E800000,<sp/>0x8F000000,<sp/>0xC7800000<sp/>};</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>offset_table[64]<sp/>=<sp/>{<sp/></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024,<sp/>1024<sp/>};</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref><sp/>=<sp/>mantissa_table[offset_table[value&gt;&gt;10]+(value&amp;0x3FF)]<sp/>+<sp/>exponent_table[value&gt;&gt;10];</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>*reinterpret_cast&lt;float*&gt;(&amp;bits);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//violating<sp/>strict<sp/>aliasing!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(&amp;out,<sp/>&amp;bits,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="903" refid="namespacehalf__float_1_1detail_1aaf774221cb784d97cb9fdf0edc1a76f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afe86dfbf3a3bac81cfe88aaec27969c1" kindref="member">half2float_impl</ref>(uint16<sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>true_type)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">bits&lt;float&gt;::type</ref><sp/>uint32;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">bits&lt;double&gt;::type</ref><sp/>uint64;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>hi<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value&amp;0x8000)<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">abs</ref><sp/>=<sp/>value<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>|=<sp/>0x3F000000<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(abs&gt;=0x7C00);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>abs&lt;0x400;<sp/>abs&lt;&lt;=1,hi-=0x100000)<sp/>;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">abs</ref>)<sp/>&lt;&lt;<sp/>10;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hi)<sp/>&lt;&lt;<sp/>32;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>*reinterpret_cast&lt;double*&gt;(&amp;bits);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//violating<sp/>strict<sp/>aliasing!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(&amp;out,<sp/>&amp;bits,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="926" refid="namespacehalf__float_1_1detail_1afe86dfbf3a3bac81cfe88aaec27969c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/><ref refid="namespacehalf__float_1_1detail_1afe86dfbf3a3bac81cfe88aaec27969c1" kindref="member">half2float_impl</ref>(uint16<sp/>value,<sp/>T,<sp/>...)</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>out;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">abs</ref><sp/>=<sp/>value<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs<sp/>&gt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>std::numeric_limits&lt;T&gt;::has_quiet_NaN<sp/>?<sp/>std::numeric_limits&lt;T&gt;::quiet_NaN()<sp/>:<sp/>T();</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs<sp/>==<sp/>0x7C00)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>std::numeric_limits&lt;T&gt;::has_infinity<sp/>?<sp/>std::numeric_limits&lt;T&gt;::infinity()<sp/>:<sp/>std::numeric_limits&lt;T&gt;::max();</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs<sp/>&gt;<sp/>0x3FF)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" kindref="member">std::ldexp</ref>(static_cast&lt;T&gt;((abs&amp;0x3FF)|0x400),<sp/>(abs&gt;&gt;10)-25);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" kindref="member">std::ldexp</ref>(static_cast&lt;T&gt;(abs),<sp/>-24);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value&amp;0x8000)<sp/>?<sp/>-out<sp/>:<sp/>out;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="945" refid="namespacehalf__float_1_1detail_1aacbda37363295f0d13fca10c223e8169" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/><ref refid="namespacehalf__float_1_1detail_1aacbda37363295f0d13fca10c223e8169" kindref="member">half2float</ref>(uint16<sp/>value)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afe86dfbf3a3bac81cfe88aaec27969c1" kindref="member">half2float_impl</ref>(value,<sp/>T(),<sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">bool_type</ref>&lt;std::numeric_limits&lt;T&gt;::is_iec559&amp;&amp;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1bits_1a6087f39bed27f25b3be91078a4a6dbdc" kindref="member">bits&lt;T&gt;::type</ref>)==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)&gt;());</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="956" refid="namespacehalf__float_1_1detail_1a93c7f040e64b7cedad971b42bedc85a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>E,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/><ref refid="namespacehalf__float_1_1detail_1a93c7f040e64b7cedad971b42bedc85a2" kindref="member">half2int_impl</ref>(uint16<sp/>value)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_STATIC_ASSERT<sp/>&amp;&amp;<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_integral&lt;T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;half<sp/>to<sp/>int<sp/>conversion<sp/>only<sp/>supports<sp/>builtin<sp/>integer<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>value<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e<sp/>&gt;=<sp/>0x7C00)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value&amp;0x8000)<sp/>?<sp/>std::numeric_limits&lt;T&gt;::min()<sp/>:<sp/>std::numeric_limits&lt;T&gt;::max();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e<sp/>&lt;<sp/>0x3800)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T(~(value&gt;&gt;15)&amp;(e!=0));</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-T(value&gt;0x8000);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T();</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>(value&amp;0x3FF)<sp/>|<sp/>0x400;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>&gt;&gt;=<sp/>10;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e<sp/>&lt;<sp/>25)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_to_nearest)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>+=<sp/>(1&lt;&lt;(24-e))<sp/>-<sp/>(~(m&gt;&gt;(25-e))&amp;E);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>+=<sp/>((value&gt;&gt;15)-1)<sp/>&amp;<sp/>((1&lt;&lt;(25-e))-1U);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>+=<sp/>-(value&gt;&gt;15)<sp/>&amp;<sp/>((1&lt;&lt;(25-e))-1U);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>25<sp/>-<sp/>e;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&lt;&lt;=<sp/>e<sp/>-<sp/>25;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value&amp;0x8000)<sp/>?<sp/>-</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m)<sp/>:<sp/>static_cast&lt;T&gt;(m);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="994" refid="namespacehalf__float_1_1detail_1a78bf248e5c07c8b73adbb0986b430675" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/><ref refid="namespacehalf__float_1_1detail_1a78bf248e5c07c8b73adbb0986b430675" kindref="member">half2int</ref>(uint16<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>half2int_impl&lt;R,HALF_ROUND_TIES_TO_EVEN,T&gt;(value);<sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000" refid="namespacehalf__float_1_1detail_1a1672f8be699238543caa56fc43ed17ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/><ref refid="namespacehalf__float_1_1detail_1a1672f8be699238543caa56fc43ed17ee" kindref="member">half2int_up</ref>(uint16<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>half2int_impl&lt;std::round_to_nearest,0,T&gt;(value);<sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007" refid="namespacehalf__float_1_1detail_1ab4e14ce718b27e88bd319bbac32b6d1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>E&gt;<sp/>uint16<sp/><ref refid="namespacehalf__float_1_1detail_1ab4e14ce718b27e88bd319bbac32b6d1c" kindref="member">round_half_impl</ref>(uint16<sp/>value)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>value<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/><ref refid="structhalf__float_1_1detail_1_1result" kindref="compound">result</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e<sp/>&lt;<sp/>0x3C00)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>&amp;=<sp/>0x8000;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_to_nearest)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/>0x3C00U<sp/>&amp;<sp/>-(e&gt;=(0x3800+E));</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/>0x3C00U<sp/>&amp;<sp/>-(~(value&gt;&gt;15)&amp;(e!=0));</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/>0x3C00U<sp/>&amp;<sp/>-(value&gt;0x8000);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e<sp/>&lt;<sp/>0x6400)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>25<sp/>-<sp/>(e&gt;&gt;10);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>(1&lt;&lt;e)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_to_nearest)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>(1&lt;&lt;(e-1))<sp/>-<sp/>(~(result&gt;&gt;e)&amp;E);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>mask<sp/>&amp;<sp/>((value&gt;&gt;15)-1);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>mask<sp/>&amp;<sp/>-(value&gt;&gt;15);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040" refid="namespacehalf__float_1_1detail_1ad83f9ae057a78ad84ac6a35a3f9b5509" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R&gt;<sp/>uint16<sp/><ref refid="namespacehalf__float_1_1detail_1ad83f9ae057a78ad84ac6a35a3f9b5509" kindref="member">round_half</ref>(uint16<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>round_half_impl&lt;R,HALF_ROUND_TIES_TO_EVEN&gt;(value);<sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045" refid="namespacehalf__float_1_1detail_1ab00a3fec9c3b3d27d5957c85ae5b587b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16<sp/><ref refid="namespacehalf__float_1_1detail_1ab00a3fec9c3b3d27d5957c85ae5b587b" kindref="member">round_half_up</ref>(uint16<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>round_half_impl&lt;std::round_to_nearest,0&gt;(value);<sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1functions" kindref="compound">functions</ref>;</highlight></codeline>
<codeline lineno="1049" refid="structhalf__float_1_1detail_1_1unary__specialized" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1unary__specialized" kindref="compound">unary_specialized</ref>;</highlight></codeline>
<codeline lineno="1050" refid="structhalf__float_1_1detail_1_1binary__specialized" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1binary__specialized" kindref="compound">binary_specialized</ref>;</highlight></codeline>
<codeline lineno="1051" refid="structhalf__float_1_1detail_1_1half__caster" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster</ref>;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074" refid="classhalf__float_1_1half" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhalf__float_1_1half" kindref="compound">half</ref></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076" refid="classhalf__float_1_1half_1a8c62dbcc77cd228ff65300d012535a09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1functions" kindref="compound">detail::functions</ref>;</highlight></codeline>
<codeline lineno="1077" refid="classhalf__float_1_1half_1a66a5c900a45b9733983fc83ae3beaa4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1unary__specialized" kindref="compound">detail::unary_specialized</ref>&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;;</highlight></codeline>
<codeline lineno="1078" refid="classhalf__float_1_1half_1a0549e53309bef497d5ce1d1ad89c4bc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1binary__specialized" kindref="compound">detail::binary_specialized</ref>&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;;</highlight></codeline>
<codeline lineno="1079" refid="classhalf__float_1_1half_1a2ff50b0344ffe4a76ba5d7c868fa8ffa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">detail::half_caster</ref>;</highlight></codeline>
<codeline lineno="1080" refid="classhalf__float_1_1half_1a30984629ce0edc2c2e5de40c72ab0292" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">std::numeric_limits&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_HASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">std::hash&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_USER_LITERALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>literal::operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_h(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1092" refid="classhalf__float_1_1half_1a3f52e869fec499d6b86f2afc90749d6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half_1a3f52e869fec499d6b86f2afc90749d6a" kindref="member">half</ref>()<sp/><ref refid="half_8hpp_1a04e7940852b33adbb81a8249fef1c508" kindref="member">HALF_NOEXCEPT</ref><sp/>:<sp/>data_()<sp/>{}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097" refid="classhalf__float_1_1half_1ab56421622ebddd86fc75ad1eebdfbd8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half_1ab56421622ebddd86fc75ad1eebdfbd8e" kindref="member">half</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">detail::expr</ref><sp/>rhs)<sp/>:<sp/>data_(detail::<ref refid="namespacehalf__float_1_1detail_1a323f122774a4f85d4ce4c4d91a8d066b" kindref="member">float2half</ref>&lt;round_style&gt;(static_cast&lt;float&gt;(rhs)))<sp/>{}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101" refid="classhalf__float_1_1half_1aad7fddc333853c6a37016e2eac3d4d04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half_1aad7fddc333853c6a37016e2eac3d4d04" kindref="member">half</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/>:<sp/>data_(detail::<ref refid="namespacehalf__float_1_1detail_1a323f122774a4f85d4ce4c4d91a8d066b" kindref="member">float2half</ref>&lt;round_style&gt;(rhs))<sp/>{}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1105" refid="classhalf__float_1_1half_1ac44a6dc499322ae9330375f2b0dda8b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>float()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::half2float&lt;float&gt;(data_);<sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111" refid="classhalf__float_1_1half_1ada563d2964479ed1a325eca97933dc9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&amp;<sp/><ref refid="classhalf__float_1_1half_1ada563d2964479ed1a325eca97933dc9f" kindref="member">operator=</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">detail::expr</ref><sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rhs);<sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117" refid="classhalf__float_1_1half_1aa562db3abdbf9c0bca4150f7cfa6bd1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">detail::enable&lt;half&amp;,T&gt;::type</ref><sp/><ref refid="classhalf__float_1_1half_1aa562db3abdbf9c0bca4150f7cfa6bd1b" kindref="member">operator+=</ref>(T<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rhs);<sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123" refid="classhalf__float_1_1half_1a86647595e63e3d0bac1c4b17a3fe162e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">detail::enable&lt;half&amp;,T&gt;::type</ref><sp/><ref refid="classhalf__float_1_1half_1a86647595e63e3d0bac1c4b17a3fe162e" kindref="member">operator-=</ref>(T<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rhs);<sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129" refid="classhalf__float_1_1half_1a6de077e98651981a899b09738e49d3c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">detail::enable&lt;half&amp;,T&gt;::type</ref><sp/><ref refid="classhalf__float_1_1half_1a6de077e98651981a899b09738e49d3c3" kindref="member">operator*=</ref>(T<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rhs);<sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135" refid="classhalf__float_1_1half_1a7a3a8659d8186e9cb14638907c664aa9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">detail::enable&lt;half&amp;,T&gt;::type</ref><sp/><ref refid="classhalf__float_1_1half_1a7a3a8659d8186e9cb14638907c664aa9" kindref="member">operator/=</ref>(T<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rhs);<sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140" refid="classhalf__float_1_1half_1a3baf11c1e7ab4f825f182a801d85369a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&amp;<sp/><ref refid="classhalf__float_1_1half_1a3baf11c1e7ab4f825f182a801d85369a" kindref="member">operator=</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/>{<sp/>data_<sp/>=<sp/>detail::float2half&lt;round_style&gt;(rhs);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145" refid="classhalf__float_1_1half_1a91d580c2fea1b3a7b285341b79874333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&amp;<sp/><ref refid="classhalf__float_1_1half_1a91d580c2fea1b3a7b285341b79874333" kindref="member">operator+=</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/>{<sp/>data_<sp/>=<sp/>detail::float2half&lt;round_style&gt;(detail::half2float&lt;float&gt;(data_)+rhs);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150" refid="classhalf__float_1_1half_1a394f8eec9a67b4577584f994c7c3cb90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&amp;<sp/><ref refid="classhalf__float_1_1half_1a394f8eec9a67b4577584f994c7c3cb90" kindref="member">operator-=</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/>{<sp/>data_<sp/>=<sp/>detail::float2half&lt;round_style&gt;(detail::half2float&lt;float&gt;(data_)-rhs);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155" refid="classhalf__float_1_1half_1ab384d4ffe5c7117d1485f514f1113b50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&amp;<sp/><ref refid="classhalf__float_1_1half_1ab384d4ffe5c7117d1485f514f1113b50" kindref="member">operator*=</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/>{<sp/>data_<sp/>=<sp/>detail::float2half&lt;round_style&gt;(detail::half2float&lt;float&gt;(data_)*rhs);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160" refid="classhalf__float_1_1half_1a4a164803ca231d07f3b27c5c2bcf1715" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&amp;<sp/><ref refid="classhalf__float_1_1half_1a4a164803ca231d07f3b27c5c2bcf1715" kindref="member">operator/=</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/>{<sp/>data_<sp/>=<sp/>detail::float2half&lt;round_style&gt;(detail::half2float&lt;float&gt;(data_)/rhs);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164" refid="classhalf__float_1_1half_1ad902e63995af7942b1e498eb381dcdd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&amp;<sp/><ref refid="classhalf__float_1_1half_1ad902e63995af7942b1e498eb381dcdd9" kindref="member">operator++</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+=<sp/>1.0f;<sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168" refid="classhalf__float_1_1half_1a3f6f801be0522edc5ae5146012748e5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&amp;<sp/><ref refid="classhalf__float_1_1half_1a3f6f801be0522edc5ae5146012748e5d" kindref="member">operator--</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-=<sp/>1.0f;<sp/>}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172" refid="classhalf__float_1_1half_1a1a88e6a51b683bb7f3c57997d73561ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="classhalf__float_1_1half_1a1a88e6a51b683bb7f3c57997d73561ed" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>out(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>++*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;<sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176" refid="classhalf__float_1_1half_1ae89579e80863e11ad9aae90e7883d4cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="classhalf__float_1_1half_1ae89579e80863e11ad9aae90e7883d4cd" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>out(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>--*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;<sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::float_round_style<sp/>round_style<sp/>=<sp/>(std::float_round_style)(<ref refid="half_8hpp_1af470ed60568b3e7f4fde6092d22abbde" kindref="member">HALF_ROUND_STYLE</ref>);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="structhalf__float_1_1detail_1_1binary__t" kindref="compound">detail::binary_t</ref>,<sp/><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">detail::uint16</ref><sp/>bits)<sp/><ref refid="half_8hpp_1a04e7940852b33adbb81a8249fef1c508" kindref="member">HALF_NOEXCEPT</ref><sp/>:<sp/>data_(bits)<sp/>{}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">detail::uint16</ref><sp/>data_;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HALF_ENABLE_CPP11_USER_LITERALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">literal</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_h(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">detail::binary</ref>,<sp/>detail::float2half&lt;half::round_style&gt;(value));<sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1205" refid="structhalf__float_1_1detail_1_1functions" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1functions" kindref="compound">functions</ref></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1211" refid="structhalf__float_1_1detail_1_1functions_1a00e552f89df586b355b7aaa3668bdfa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a00e552f89df586b355b7aaa3668bdfa1" kindref="member">plus</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(x+y);<sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217" refid="structhalf__float_1_1detail_1_1functions_1ad2d876e13910f4e95ea64161dc69d581" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ad2d876e13910f4e95ea64161dc69d581" kindref="member">minus</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(x-y);<sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223" refid="structhalf__float_1_1detail_1_1functions_1a3d2a59f7891825142a62f7663bdefd73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a3d2a59f7891825142a62f7663bdefd73" kindref="member">multiplies</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(x*y);<sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="structhalf__float_1_1detail_1_1functions_1ac9dfde49f70098d39e83d1123574c60a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ac9dfde49f70098d39e83d1123574c60a" kindref="member">divides</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(x/y);<sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235" refid="structhalf__float_1_1detail_1_1functions_1a240e518b170e2c43df73fe28c3be7ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::basic_ostream&lt;charT,traits&gt;&amp;<sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a240e518b170e2c43df73fe28c3be7ed3" kindref="member">write</ref>(std::basic_ostream&lt;charT,traits&gt;<sp/>&amp;out,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/>arg;<sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241" refid="structhalf__float_1_1detail_1_1functions_1a11c9c85a160dab9b3569d1e051bf6ba5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::basic_istream&lt;charT,traits&gt;&amp;<sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a11c9c85a160dab9b3569d1e051bf6ba5" kindref="member">read</ref>(std::basic_istream&lt;charT,traits&gt;<sp/>&amp;in,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>&amp;arg)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in<sp/>&gt;&gt;<sp/>f)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253" refid="structhalf__float_1_1detail_1_1functions_1ab738d01b18f68f9a1472490d1f20ffd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ab738d01b18f68f9a1472490d1f20ffd0" kindref="member">fmod</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">std::fmod</ref>(x,<sp/>y));<sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259" refid="structhalf__float_1_1detail_1_1functions_1ae50ef512e0b117a0de654f54f31c6862" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ae50ef512e0b117a0de654f54f31c6862" kindref="member">remainder</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" kindref="member">std::remainder</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(x)<sp/>||<sp/><ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(y))</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::numeric_limits&lt;float&gt;::quiet_NaN());</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ax<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">std::fabs</ref>(x),<sp/>ay<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">std::fabs</ref>(y);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&gt;=<sp/>65536.0f<sp/>||<sp/>ay<sp/>&lt;<sp/><ref refid="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" kindref="member">std::ldexp</ref>(1.0f,<sp/>-24))</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::numeric_limits&lt;float&gt;::quiet_NaN());</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ay<sp/>&gt;=<sp/>65536.0f)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(x);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>==<sp/>ay)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(x)<sp/>?<sp/>-0.0f<sp/>:<sp/>0.0f);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">std::fmod</ref>(ax,<sp/>ay+ay);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>0.5f<sp/>*<sp/>ay;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&gt;<sp/>y2)</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax<sp/>-=<sp/>ay;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&gt;=<sp/>y2)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax<sp/>-=<sp/>ay;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(x)<sp/>?<sp/>-ax<sp/>:<sp/>ax);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290" refid="structhalf__float_1_1detail_1_1functions_1a9d78bde132fdf1cddf832f17cf86ffec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a9d78bde132fdf1cddf832f17cf86ffec" kindref="member">remquo</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*quo)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" kindref="member">std::remquo</ref>(x,<sp/>y,<sp/>quo));</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(x)<sp/>||<sp/><ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(y))</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::numeric_limits&lt;float&gt;::quiet_NaN());</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(x),<sp/>qsign<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sign^<ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(y));</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ax<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">std::fabs</ref>(x),<sp/>ay<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">std::fabs</ref>(y);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&gt;=<sp/>65536.0f<sp/>||<sp/>ay<sp/>&lt;<sp/><ref refid="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" kindref="member">std::ldexp</ref>(1.0f,<sp/>-24))</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::numeric_limits&lt;float&gt;::quiet_NaN());</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ay<sp/>&gt;=<sp/>65536.0f)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(x);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>==<sp/>ay)</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*quo<sp/>=<sp/>qsign<sp/>?<sp/>-1<sp/>:<sp/>1,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(sign<sp/>?<sp/>-0.0f<sp/>:<sp/>0.0f);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">std::fmod</ref>(ax,<sp/>8.0f*ay);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cquo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&gt;=<sp/>4.0f<sp/>*<sp/>ay)</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax<sp/>-=<sp/>4.0f<sp/>*<sp/>ay;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cquo<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&gt;=<sp/>2.0f<sp/>*<sp/>ay)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax<sp/>-=<sp/>2.0f<sp/>*<sp/>ay;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cquo<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>0.5f<sp/>*<sp/>ay;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&gt;<sp/>y2)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax<sp/>-=<sp/>ay;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cquo;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&gt;=<sp/>y2)</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax<sp/>-=<sp/>ay;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cquo;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*quo<sp/>=<sp/>qsign<sp/>?<sp/>-cquo<sp/>:<sp/>cquo,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(sign<sp/>?<sp/>-ax<sp/>:<sp/>ax);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336" refid="structhalf__float_1_1detail_1_1functions_1a9850489a627096344f41d3e18976eaff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a9850489a627096344f41d3e18976eaff" kindref="member">fdim</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" kindref="member">std::fdim</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>((x&lt;=y)<sp/>?<sp/>0.0f<sp/>:<sp/>(x-y));</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350" refid="structhalf__float_1_1detail_1_1functions_1ac35e47ff8b9b77d1dc0a64f575477517" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ac35e47ff8b9b77d1dc0a64f575477517" kindref="member">fma</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH<sp/>&amp;&amp;<sp/>defined(FP_FAST_FMAF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">std::fma</ref>(x,<sp/>y,<sp/>z));</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(x*y+z);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361" refid="structhalf__float_1_1detail_1_1functions_1a1195cacfc5295c6baa4763ca0bb4ccc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a1195cacfc5295c6baa4763ca0bb4ccc0" kindref="member">nanh</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>0x7FFF);<sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366" refid="structhalf__float_1_1detail_1_1functions_1ae615d0479597521f69a3da7ae543c03b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ae615d0479597521f69a3da7ae543c03b" kindref="member">exp</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">std::exp</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371" refid="structhalf__float_1_1detail_1_1functions_1af188a99ac370d4c183b83a59cc733036" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1af188a99ac370d4c183b83a59cc733036" kindref="member">expm1</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1afdac01457ab03f14285ce6b358221bda" kindref="member">std::expm1</ref>(arg));</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">std::exp</ref>(static_cast&lt;double&gt;(arg))-1.0));</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383" refid="structhalf__float_1_1detail_1_1functions_1a4e43ae021698940af0aee27ae9026818" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a4e43ae021698940af0aee27ae9026818" kindref="member">exp2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1aacebd17acf9b67ae3748ea3461d3cfad" kindref="member">std::exp2</ref>(arg));</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">std::exp</ref>(arg*0.69314718055994530941723212145818)));</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395" refid="structhalf__float_1_1detail_1_1functions_1a587c13df1bce45e25cac92e44fe58602" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a587c13df1bce45e25cac92e44fe58602" kindref="member">log</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">std::log</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400" refid="structhalf__float_1_1detail_1_1functions_1a7cf0027f88e319725aaa3da81c21ac1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a7cf0027f88e319725aaa3da81c21ac1d" kindref="member">log10</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a968a57d32cab0e05f9e8bf12ea6f9c5a" kindref="member">std::log10</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405" refid="structhalf__float_1_1detail_1_1functions_1a27ae5cf1c13b9d98f943e9cd968db554" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a27ae5cf1c13b9d98f943e9cd968db554" kindref="member">log1p</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a427f2f960568816873d1f80f0a464232" kindref="member">std::log1p</ref>(arg));</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">std::log</ref>(1.0+arg)));</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417" refid="structhalf__float_1_1detail_1_1functions_1ae4a595c90b4fa280bf5dd1e96a6b3207" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ae4a595c90b4fa280bf5dd1e96a6b3207" kindref="member">log2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a897c86d265108d3326d57436bcd75562" kindref="member">std::log2</ref>(arg));</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">std::log</ref>(static_cast&lt;double&gt;(arg))*1.4426950408889634073599246810019));</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429" refid="structhalf__float_1_1detail_1_1functions_1af8d54d1d78867f658f35306e0588a7fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1af8d54d1d78867f658f35306e0588a7fd" kindref="member">sqrt</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" kindref="member">std::sqrt</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434" refid="structhalf__float_1_1detail_1_1functions_1ab756ef470ed99e39b670e08dd1126331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ab756ef470ed99e39b670e08dd1126331" kindref="member">cbrt</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a0efca8d667af3c6d23589e899ac23d51" kindref="member">std::cbrt</ref>(arg));</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(arg)<sp/>||<sp/><ref refid="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" kindref="member">builtin_isinf</ref>(arg))</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(arg);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(arg)<sp/>?<sp/>-static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">std::pow</ref>(-static_cast&lt;double&gt;(arg),<sp/>1.0/3.0))<sp/>:<sp/></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">std::pow</ref>(static_cast&lt;double&gt;(arg),<sp/>1.0/3.0)));</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450" refid="structhalf__float_1_1detail_1_1functions_1a1ea6c3b5f49e742b82828c69c755210c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a1ea6c3b5f49e742b82828c69c755210c" kindref="member">hypot</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" kindref="member">std::hypot</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>((<ref refid="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" kindref="member">builtin_isinf</ref>(x)<sp/>||<sp/><ref refid="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" kindref="member">builtin_isinf</ref>(y))<sp/>?<sp/>std::numeric_limits&lt;float&gt;::infinity()<sp/>:<sp/></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" kindref="member">std::sqrt</ref>(static_cast&lt;double&gt;(x)*x+static_cast&lt;double&gt;(y)*y)));</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464" refid="structhalf__float_1_1detail_1_1functions_1ad5ed7e96d8e10cef742e385262e311b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ad5ed7e96d8e10cef742e385262e311b3" kindref="member">pow</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>base,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">std::pow</ref>(base,<sp/>exp));<sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469" refid="structhalf__float_1_1detail_1_1functions_1a8735008b48f7638a344b6cf0da48063d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a8735008b48f7638a344b6cf0da48063d" kindref="member">sin</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a5ae15ff362de65ac7784397ea32e4d3d" kindref="member">std::sin</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474" refid="structhalf__float_1_1detail_1_1functions_1ab300defee608b0fa52aca095babd495c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ab300defee608b0fa52aca095babd495c" kindref="member">cos</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a79354f6efe07d6587202e75395d31f49" kindref="member">std::cos</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479" refid="structhalf__float_1_1detail_1_1functions_1a420e4d5c94115d9229b726ea76f26cb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a420e4d5c94115d9229b726ea76f26cb3" kindref="member">tan</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a570237a84cf8ce08088e61a60ed58a11" kindref="member">std::tan</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484" refid="structhalf__float_1_1detail_1_1functions_1affe61d343c1d3a6b647290fe7c2f1b34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1affe61d343c1d3a6b647290fe7c2f1b34" kindref="member">asin</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1ae1ccfb00bd0c246fc79582a98b173c5a" kindref="member">std::asin</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489" refid="structhalf__float_1_1detail_1_1functions_1a89ec536194900bba8dd56271458f2083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a89ec536194900bba8dd56271458f2083" kindref="member">acos</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a3633af9d8cf722fe454f83784cb5cf90" kindref="member">std::acos</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494" refid="structhalf__float_1_1detail_1_1functions_1a3f0cae3135e53b5d5197f667da683879" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a3f0cae3135e53b5d5197f667da683879" kindref="member">atan</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1ab90ceee4ff49e1bc2f733112837cd03b" kindref="member">std::atan</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500" refid="structhalf__float_1_1detail_1_1functions_1af8ac17386217cf681433dff7d176af32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1af8ac17386217cf681433dff7d176af32" kindref="member">atan2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" kindref="member">std::atan2</ref>(x,<sp/>y));<sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505" refid="structhalf__float_1_1detail_1_1functions_1a2fb1e87f5a6c136bd7ffd0d6c4400a7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a2fb1e87f5a6c136bd7ffd0d6c4400a7e" kindref="member">sinh</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1ab885f21afbf075b3b3bfe3e028360a4f" kindref="member">std::sinh</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510" refid="structhalf__float_1_1detail_1_1functions_1a662fccaf35128b6a0349f52f04ec8625" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a662fccaf35128b6a0349f52f04ec8625" kindref="member">cosh</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a70e455e2c9707767d81bee70b7cb2118" kindref="member">std::cosh</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515" refid="structhalf__float_1_1detail_1_1functions_1a186af458d15802461dfa73b5a8f7e44b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a186af458d15802461dfa73b5a8f7e44b" kindref="member">tanh</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a5c1c93204314b1e36f09f5cd64e53213" kindref="member">std::tanh</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520" refid="structhalf__float_1_1detail_1_1functions_1a33affc06820efb1dbbbf2f4d3f221c43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a33affc06820efb1dbbbf2f4d3f221c43" kindref="member">asinh</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a16e8fe208bed6715d96720cd52484519" kindref="member">std::asinh</ref>(arg));</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>((arg==-std::numeric_limits&lt;float&gt;::infinity())<sp/>?<sp/>arg<sp/>:<sp/>static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">std::log</ref>(arg+<ref refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" kindref="member">std::sqrt</ref>(arg*arg+1.0))));</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532" refid="structhalf__float_1_1detail_1_1functions_1a973c481a675e66cc1bed66b4de291242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a973c481a675e66cc1bed66b4de291242" kindref="member">acosh</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a770438bb92d31e565c573ec6c2018809" kindref="member">std::acosh</ref>(arg));</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>((arg&lt;-1.0f)<sp/>?<sp/>std::numeric_limits&lt;float&gt;::quiet_NaN()<sp/>:<sp/>static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">std::log</ref>(arg+<ref refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" kindref="member">std::sqrt</ref>(arg*arg-1.0))));</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544" refid="structhalf__float_1_1detail_1_1functions_1a86b85df92954c684bfe4e1b462f67dea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a86b85df92954c684bfe4e1b462f67dea" kindref="member">atanh</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1ac77afd4c7e55ed6a9b017d6ffa28d6e1" kindref="member">std::atanh</ref>(arg));</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(0.5*<ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">std::log</ref>((1.0+arg)/(1.0-arg))));</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556" refid="structhalf__float_1_1detail_1_1functions_1aa6292fbc82ddddce2ed9853506a51af4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1aa6292fbc82ddddce2ed9853506a51af4" kindref="member">erf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" kindref="member">std::erf</ref>(arg));</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" kindref="member">erf</ref>(static_cast&lt;double&gt;(arg))));</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568" refid="structhalf__float_1_1detail_1_1functions_1a874b7a9f50954f082a3928db716943c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a874b7a9f50954f082a3928db716943c5" kindref="member">erfc</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a987a584f9cd8b5e84339c8f4cefca641" kindref="member">std::erfc</ref>(arg));</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(1.0-<ref refid="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" kindref="member">erf</ref>(static_cast&lt;double&gt;(arg))));</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580" refid="structhalf__float_1_1detail_1_1functions_1a84d46a2a632e0c48ceaca75c9afa6654" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a84d46a2a632e0c48ceaca75c9afa6654" kindref="member">lgamma</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">std::lgamma</ref>(arg));</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" kindref="member">builtin_isinf</ref>(arg))</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::numeric_limits&lt;float&gt;::infinity());</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arg<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>i,<sp/>f<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a86229873ef3805ed4ee0d8796a73b421" kindref="member">std::modf</ref>(-arg,<sp/>&amp;i);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::numeric_limits&lt;float&gt;::infinity());</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(1.1447298858494001741434273513531-</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">std::log</ref>(<ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">std::abs</ref>(<ref refid="namespacehalf__float_1_1detail_1a5ae15ff362de65ac7784397ea32e4d3d" kindref="member">std::sin</ref>(3.1415926535897932384626433832795*f)))-<ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">lgamma</ref>(1.0-arg)));</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">lgamma</ref>(static_cast&lt;double&gt;(arg))));</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602" refid="structhalf__float_1_1detail_1_1functions_1a2e732684ac8c44f7a546010a299136bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a2e732684ac8c44f7a546010a299136bb" kindref="member">tgamma</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1aa9767c4f2cb1260978d67745b8533882" kindref="member">std::tgamma</ref>(arg));</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arg<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(arg)<sp/>?<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(-std::numeric_limits&lt;float&gt;::infinity())<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::numeric_limits&lt;float&gt;::infinity());</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arg<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>i,<sp/>f<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a86229873ef3805ed4ee0d8796a73b421" kindref="member">std::modf</ref>(-arg,<sp/>&amp;i);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::numeric_limits&lt;float&gt;::quiet_NaN());</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>3.1415926535897932384626433832795<sp/>/<sp/>(<ref refid="namespacehalf__float_1_1detail_1a5ae15ff362de65ac7784397ea32e4d3d" kindref="member">std::sin</ref>(3.1415926535897932384626433832795*f)*<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">std::exp</ref>(<ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">lgamma</ref>(1.0-arg)));</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;((<ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">std::fmod</ref>(i,<sp/>2.0f)==0.0f)<sp/>?<sp/>-value<sp/>:<sp/>value));</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" kindref="member">builtin_isinf</ref>(arg))</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(arg);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(static_cast&lt;float&gt;(<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">std::exp</ref>(<ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">lgamma</ref>(static_cast&lt;double&gt;(arg)))));</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626" refid="structhalf__float_1_1detail_1_1functions_1ac468426b43557f8afbdcb60b94b5a8a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ac468426b43557f8afbdcb60b94b5a8a1" kindref="member">floor</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>round_half&lt;std::round_toward_neg_infinity&gt;(arg.data_));<sp/>}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631" refid="structhalf__float_1_1detail_1_1functions_1a9ba7383bbc00cd9d4ff2a3c3649f501a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a9ba7383bbc00cd9d4ff2a3c3649f501a" kindref="member">ceil</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>round_half&lt;std::round_toward_infinity&gt;(arg.data_));<sp/>}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636" refid="structhalf__float_1_1detail_1_1functions_1ae57908c6ec13fb42daf326811f99038b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ae57908c6ec13fb42daf326811f99038b" kindref="member">trunc</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>round_half&lt;std::round_toward_zero&gt;(arg.data_));<sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641" refid="structhalf__float_1_1detail_1_1functions_1a2f34968b39ed058747382fad81b81d4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a2f34968b39ed058747382fad81b81d4e" kindref="member">round</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/><ref refid="namespacehalf__float_1_1detail_1ab00a3fec9c3b3d27d5957c85ae5b587b" kindref="member">round_half_up</ref>(arg.data_));<sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646" refid="structhalf__float_1_1detail_1_1functions_1a6b10452ed4a7cc29eb30cce0c449eab0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a6b10452ed4a7cc29eb30cce0c449eab0" kindref="member">lround</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::half2int_up&lt;long&gt;(arg.data_);<sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651" refid="structhalf__float_1_1detail_1_1functions_1a0c63e4465b7a27da2d139e3089316cc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a0c63e4465b7a27da2d139e3089316cc3" kindref="member">rint</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>round_half&lt;half::round_style&gt;(arg.data_));<sp/>}</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656" refid="structhalf__float_1_1detail_1_1functions_1a5446ed91e4b33637d20a2a46fc03a97b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a5446ed91e4b33637d20a2a46fc03a97b" kindref="member">lrint</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::half2int&lt;half::round_style,long&gt;(arg.data_);<sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>llround(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::half2int_up&lt;long<sp/>long&gt;(arg.data_);<sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>llrint(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::half2int&lt;half::round_style,long<sp/>long&gt;(arg.data_);<sp/>}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674" refid="structhalf__float_1_1detail_1_1functions_1a891b725664bb1c2127db9d4dbc31671f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a891b725664bb1c2127db9d4dbc31671f" kindref="member">frexp</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>arg.data_<sp/>&amp;<sp/>0x7FFF,<sp/>e<sp/>=<sp/>-14;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m<sp/>&gt;=<sp/>0x7C00<sp/>||<sp/>!m)</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*exp<sp/>=<sp/>0,<sp/>arg;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>m&lt;0x400;<sp/>m&lt;&lt;=1,--e)<sp/>;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*exp<sp/>=<sp/>e+(m&gt;&gt;10),<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>(arg.data_&amp;0x8000)|0x3800|(m&amp;0x3FF));</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687" refid="structhalf__float_1_1detail_1_1functions_1a542863ae1da47122fa56b3665f7654f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a542863ae1da47122fa56b3665f7654f7" kindref="member">modf</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>*iptr)</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>arg.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e<sp/>&gt;=<sp/>0x6400)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*iptr<sp/>=<sp/>arg,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>arg.data_&amp;(0x8000U|-(e&gt;0x7C00)));</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e<sp/>&lt;<sp/>0x3C00)</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iptr-&gt;data_<sp/>=<sp/>arg.data_<sp/>&amp;<sp/>0x8000,<sp/>arg;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>&gt;&gt;=<sp/>10;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>(1&lt;&lt;(25-e))<sp/>-<sp/>1,<sp/>m<sp/>=<sp/>arg.data_<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iptr-&gt;data_<sp/>=<sp/>arg.data_<sp/>&amp;<sp/>~mask;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m)</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>half(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>arg.data_&amp;0x8000);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>m&lt;0x400;<sp/>m&lt;&lt;=1,--e)<sp/>;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>half(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>static_cast&lt;uint16&gt;((arg.data_&amp;0x8000)|(e&lt;&lt;10)|(m&amp;0x3FF)));</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707" refid="structhalf__float_1_1detail_1_1functions_1adb515e8e2f5a4dd8fde43e5a6700525f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1adb515e8e2f5a4dd8fde43e5a6700525f" kindref="member">scalbln</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>arg.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m<sp/>&gt;=<sp/>0x7C00<sp/>||<sp/>!m)</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>m&lt;0x400;<sp/>m&lt;&lt;=1,--<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp<sp/>+=<sp/>m<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref><sp/>value<sp/>=<sp/>arg.data_<sp/>&amp;<sp/>0x8000;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>&gt;<sp/>30)</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(half::round_style<sp/>==<sp/>std::round_toward_zero)</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>|=<sp/>0x7BFF;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(half::round_style<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>|=<sp/>0x7C00<sp/>-<sp/>(value&gt;&gt;15);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(half::round_style<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>|=<sp/>0x7BFF<sp/>+<sp/>(value&gt;&gt;15);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>|=<sp/>0x7C00;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>|=<sp/>(exp&lt;&lt;10)<sp/>|<sp/>(m&amp;0x3FF);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp<sp/>&gt;<sp/>-11)</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(m&amp;0x3FF)<sp/>|<sp/>0x400;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(half::round_style<sp/>==<sp/>std::round_to_nearest)</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>+=<sp/>1<sp/>&lt;&lt;<sp/>-<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ROUND_TIES_TO_EVEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>-=<sp/>(m&gt;&gt;(1-<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>))<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(half::round_style<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>+=<sp/>((value&gt;&gt;15)-1)<sp/>&amp;<sp/>((1&lt;&lt;(1-<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>))-1U);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(half::round_style<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>+=<sp/>-(value&gt;&gt;15)<sp/>&amp;<sp/>((1&lt;&lt;(1-exp))-1U);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>|=<sp/>m<sp/>&gt;&gt;<sp/>(1-<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(half::round_style<sp/>==<sp/>std::round_toward_infinity)</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>-=<sp/>(value&gt;&gt;15)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(half::round_style<sp/>==<sp/>std::round_toward_neg_infinity)</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>value<sp/>&gt;&gt;<sp/>15;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754" refid="structhalf__float_1_1detail_1_1functions_1a06cd09aa623a569dd547c143bc19b972" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a06cd09aa623a569dd547c143bc19b972" kindref="member">ilogb</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">abs</ref><sp/>=<sp/>arg.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!abs)</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a9ec0e31304d15c42262b2c4a3b58443c" kindref="member">FP_ILOGB0</ref>;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs<sp/>&lt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref><sp/>=<sp/>(abs&gt;&gt;10)<sp/>-<sp/>15;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs<sp/>&lt;<sp/>0x400)</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>abs&lt;0x200;<sp/>abs&lt;&lt;=1,--<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs<sp/>&gt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a01e2e5be97c739a5bdcbc619b44f9742" kindref="member">FP_ILOGBNAN</ref>;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INT_MAX;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774" refid="structhalf__float_1_1detail_1_1functions_1a859445458e098d648a09ac603790abd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a859445458e098d648a09ac603790abd9" kindref="member">logb</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">abs</ref><sp/>=<sp/>arg.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!abs)</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>0xFC00);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs<sp/>&lt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref><sp/>=<sp/>(abs&gt;&gt;10)<sp/>-<sp/>15;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs<sp/>&lt;<sp/>0x400)</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>abs&lt;0x200;<sp/>abs&lt;&lt;=1,--<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref><sp/><ref refid="structhalf__float_1_1detail_1_1bits" kindref="compound">bits</ref><sp/>=<sp/>(exp&lt;0)<sp/>&lt;&lt;<sp/>15;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exp)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">std::abs</ref>(exp)<sp/>&lt;&lt;<sp/>6,<sp/>e<sp/>=<sp/>18;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>m&lt;0x400;<sp/>m&lt;&lt;=1,--e)<sp/>;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>(e&lt;&lt;10)<sp/>+<sp/>m;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>bits);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs<sp/>&gt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>0x7C00);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802" refid="structhalf__float_1_1detail_1_1functions_1afad03c7ead9b0e39825852f274c72c5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1afad03c7ead9b0e39825852f274c72c5c" kindref="member">nextafter</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>from,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>to)</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehalf__float_1_1detail_1a239ec58092b4e4849b444baee1a01088" kindref="member">uint16</ref><sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">fabs</ref><sp/>=<sp/>from.data_<sp/>&amp;<sp/>0x7FFF,<sp/>tabs<sp/>=<sp/>to.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs<sp/>&gt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>from;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tabs<sp/>&gt;<sp/>0x7C00<sp/>||<sp/>from.data_<sp/>==<sp/>to.data_<sp/>||<sp/>!(fabs|tabs))</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fabs)</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>(to.data_&amp;0x8000)+1);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lt<sp/>=<sp/>((fabs==from.data_)<sp/>?<sp/>static_cast&lt;int&gt;(fabs)<sp/>:<sp/>-</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">fabs</ref>))<sp/>&lt;<sp/></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tabs==to.data_)<sp/>?<sp/>static_cast&lt;int&gt;(tabs)<sp/>:<sp/>-</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tabs));</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>from.data_+(((from.data_&gt;&gt;15)^static_cast&lt;unsigned&gt;(lt))&lt;&lt;1)-1);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820" refid="structhalf__float_1_1detail_1_1functions_1a5d2061cb44af36a55953d764442236de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a5d2061cb44af36a55953d764442236de" kindref="member">nexttoward</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>from,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to)</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">isnan</ref>(from))</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>from;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lfrom<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(from);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(to)<sp/>||<sp/>lfrom<sp/>==<sp/>to)</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(static_cast&lt;float&gt;(to));</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(from.data_&amp;0x7FFF))</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>(static_cast&lt;detail::uint16&gt;(<ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(to))&lt;&lt;15)+1);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>from.data_+(((from.data_&gt;&gt;15)^static_cast&lt;unsigned&gt;(lfrom&lt;to))&lt;&lt;1)-1);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836" refid="structhalf__float_1_1detail_1_1functions_1acd23a9057b257a6871f5599ee98a61df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1acd23a9057b257a6871f5599ee98a61df" kindref="member">copysign</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>x.data_^((x.data_^y.data_)&amp;0x8000));<sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842" refid="structhalf__float_1_1detail_1_1functions_1ac62c77ee38c3a83cd91c1edb84f2ce56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ac62c77ee38c3a83cd91c1edb84f2ce56" kindref="member">fpclassify</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">abs</ref><sp/>=<sp/>arg.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs<sp/>?<sp/>((abs&gt;0x3FF)<sp/>?<sp/>((abs&gt;=0x7C00)<sp/>?<sp/>((abs&gt;0x7C00)<sp/>?<sp/><ref refid="half_8hpp_1a1d481cc6e6a8ff729147ed46e61a4c9f" kindref="member">FP_NAN</ref><sp/>:<sp/><ref refid="half_8hpp_1a4f64bcc64f8b84dd9daf5a4e56abf0ca" kindref="member">FP_INFINITE</ref>)<sp/>:<sp/><ref refid="half_8hpp_1ab9e29bb9e853934c4ba647c840b7e5de" kindref="member">FP_NORMAL</ref>)<sp/>:<ref refid="half_8hpp_1adbc0a13ec75c05d238ca12ef1f8c6b2b" kindref="member">FP_SUBNORMAL</ref>)<sp/>:<sp/><ref refid="half_8hpp_1a32eba50da417c9f303ba49583d5b9f40" kindref="member">FP_ZERO</ref>;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852" refid="structhalf__float_1_1detail_1_1functions_1a421895ad95c77e9cbd559e520ea882af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a421895ad95c77e9cbd559e520ea882af" kindref="member">isfinite</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg.data_&amp;0x7C00)<sp/>!=<sp/>0x7C00;<sp/>}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858" refid="structhalf__float_1_1detail_1_1functions_1a02f00e5d24c969fc7791ada42a310bf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a02f00e5d24c969fc7791ada42a310bf9" kindref="member">isinf</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg.data_&amp;0x7FFF)<sp/>==<sp/>0x7C00;<sp/>}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864" refid="structhalf__float_1_1detail_1_1functions_1ae049e1078647aa584d44f6a7d1d68c57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ae049e1078647aa584d44f6a7d1d68c57" kindref="member">isnan</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg.data_&amp;0x7FFF)<sp/>&gt;<sp/>0x7C00;<sp/>}</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870" refid="structhalf__float_1_1detail_1_1functions_1a8f289f8c2b013d8106ba944e5b9ba220" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a8f289f8c2b013d8106ba944e5b9ba220" kindref="member">isnormal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((arg.data_&amp;0x7C00)!=0)<sp/>&amp;<sp/>((arg.data_&amp;0x7C00)!=0x7C00);<sp/>}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876" refid="structhalf__float_1_1detail_1_1functions_1a4683543fc6459fc07d915cdef863b98e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a4683543fc6459fc07d915cdef863b98e" kindref="member">signbit</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg.data_&amp;0x8000)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883" refid="structhalf__float_1_1detail_1_1functions_1a4d42677ed5a1de4fb5a7f7930bcb0914" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a4d42677ed5a1de4fb5a7f7930bcb0914" kindref="member">isequal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x.data_==y.data_<sp/>||<sp/>!((x.data_|y.data_)&amp;0x7FFF))<sp/>&amp;&amp;<sp/>!<ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">isnan</ref>(x);<sp/>}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890" refid="structhalf__float_1_1detail_1_1functions_1a074b4b55f735a8ae1ef6ba8ce8f22c23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a074b4b55f735a8ae1ef6ba8ce8f22c23" kindref="member">isnotequal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x.data_!=y.data_<sp/>&amp;&amp;<sp/>((x.data_|y.data_)&amp;0x7FFF))<sp/>||<sp/><ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">isnan</ref>(x);<sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897" refid="structhalf__float_1_1detail_1_1functions_1aaa71c321d72a6ffee8d99747741bb9a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1aaa71c321d72a6ffee8d99747741bb9a9" kindref="member">isgreater</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xabs<sp/>=<sp/>x.data_<sp/>&amp;<sp/>0x7FFF,<sp/>yabs<sp/>=<sp/>y.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xabs&lt;=0x7C00<sp/>&amp;&amp;<sp/>yabs&lt;=0x7C00<sp/>&amp;&amp;<sp/>(((xabs==x.data_)<sp/>?<sp/>xabs<sp/>:<sp/>-xabs)<sp/>&gt;<sp/>((yabs==y.data_)<sp/>?<sp/>yabs<sp/>:<sp/>-yabs));</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908" refid="structhalf__float_1_1detail_1_1functions_1afc22391d30212aca4e6a5ce8f526a919" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1afc22391d30212aca4e6a5ce8f526a919" kindref="member">isgreaterequal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xabs<sp/>=<sp/>x.data_<sp/>&amp;<sp/>0x7FFF,<sp/>yabs<sp/>=<sp/>y.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xabs&lt;=0x7C00<sp/>&amp;&amp;<sp/>yabs&lt;=0x7C00<sp/>&amp;&amp;<sp/>(((xabs==x.data_)<sp/>?<sp/>xabs<sp/>:<sp/>-xabs)<sp/>&gt;=<sp/>((yabs==y.data_)<sp/>?<sp/>yabs<sp/>:<sp/>-yabs));</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919" refid="structhalf__float_1_1detail_1_1functions_1ae7fa55cb15f5de0e0a1969073c95100e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ae7fa55cb15f5de0e0a1969073c95100e" kindref="member">isless</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xabs<sp/>=<sp/>x.data_<sp/>&amp;<sp/>0x7FFF,<sp/>yabs<sp/>=<sp/>y.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xabs&lt;=0x7C00<sp/>&amp;&amp;<sp/>yabs&lt;=0x7C00<sp/>&amp;&amp;<sp/>(((xabs==x.data_)<sp/>?<sp/>xabs<sp/>:<sp/>-xabs)<sp/>&lt;<sp/>((yabs==y.data_)<sp/>?<sp/>yabs<sp/>:<sp/>-yabs));</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930" refid="structhalf__float_1_1detail_1_1functions_1a9cde13ebf697e76dffbda455b547a793" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a9cde13ebf697e76dffbda455b547a793" kindref="member">islessequal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xabs<sp/>=<sp/>x.data_<sp/>&amp;<sp/>0x7FFF,<sp/>yabs<sp/>=<sp/>y.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xabs&lt;=0x7C00<sp/>&amp;&amp;<sp/>yabs&lt;=0x7C00<sp/>&amp;&amp;<sp/>(((xabs==x.data_)<sp/>?<sp/>xabs<sp/>:<sp/>-xabs)<sp/>&lt;=<sp/>((yabs==y.data_)<sp/>?<sp/>yabs<sp/>:<sp/>-yabs));</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941" refid="structhalf__float_1_1detail_1_1functions_1ae7d37c5ba8779f25fdc9c4097bc2cd6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1ae7d37c5ba8779f25fdc9c4097bc2cd6b" kindref="member">islessgreater</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xabs<sp/>=<sp/>x.data_<sp/>&amp;<sp/>0x7FFF,<sp/>yabs<sp/>=<sp/>y.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xabs<sp/>&gt;<sp/>0x7C00<sp/>||<sp/>yabs<sp/>&gt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>(xabs==x.data_)<sp/>?<sp/>xabs<sp/>:<sp/>-xabs,<sp/>b<sp/>=<sp/>(yabs==y.data_)<sp/>?<sp/>yabs<sp/>:<sp/>-yabs;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;<sp/>b<sp/>||<sp/>a<sp/>&gt;<sp/>b;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955" refid="structhalf__float_1_1detail_1_1functions_1a8e7eeb1db635d626702613bf61cd629f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1functions_1a8e7eeb1db635d626702613bf61cd629f" kindref="member">isunordered</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">isnan</ref>(x)<sp/>||<sp/><ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">isnan</ref>(y);<sp/>}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" kindref="member">erf</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1aeb1b5890af847586d019111c931e7f3b" kindref="member">builtin_isinf</ref>(arg))</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg&lt;0.0)<sp/>?<sp/>-1.0<sp/>:<sp/>1.0;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>arg<sp/>*<sp/>arg,<sp/>ax2<sp/>=<sp/>0.147<sp/>*<sp/>x2,<sp/>value<sp/>=<sp/><ref refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" kindref="member">std::sqrt</ref>(1.0-<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">std::exp</ref>(-x2*(1.2732395447351626861510701069801+ax2)/(1.0+ax2)));</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a0f1b0ddcef962521b4c76f661659e5a7" kindref="member">builtin_signbit</ref>(arg)<sp/>?<sp/>-value<sp/>:<sp/>value;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">lgamma</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>arg&lt;8.0;<sp/>++arg)<sp/>v<sp/>*=<sp/>arg;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>1.0<sp/>/<sp/>(arg*arg);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((((((-0.02955065359477124183006535947712*w+0.00641025641025641025641025641026)*w+</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.00191752691752691752691752691753)*w+8.4175084175084175084175084175084e-4)*w+</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-5.952380952380952380952380952381e-4)*w+7.9365079365079365079365079365079e-4)*w+</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.00277777777777777777777777777778)*w+0.08333333333333333333333333333333)/arg<sp/>+<sp/></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.91893853320467274178032973640562<sp/>-<sp/><ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">std::log</ref>(v)<sp/>-<sp/>arg<sp/>+<sp/>(arg-0.5)<sp/>*<sp/><ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">std::log</ref>(arg);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1unary__specialized" kindref="compound">unary_specialized</ref></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1986" refid="structhalf__float_1_1detail_1_1unary__specialized_1a6b8b9de170c31ccbcc6ef56ed9c488a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1unary__specialized_1a6b8b9de170c31ccbcc6ef56ed9c488a1" kindref="member">negate</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>arg.data_^0x8000);<sp/>}</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991" refid="structhalf__float_1_1detail_1_1unary__specialized_1a9f98cb43656e90319b63016c7dbadfc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1unary__specialized_1a9f98cb43656e90319b63016c7dbadfc0" kindref="member">fabs</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>arg.data_&amp;0x7FFF);<sp/>}</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1993" refid="structhalf__float_1_1detail_1_1unary__specialized_3_01expr_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1unary__specialized" kindref="compound">unary_specialized</ref>&lt;<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>&gt;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1995" refid="structhalf__float_1_1detail_1_1unary__specialized_3_01expr_01_4_1a52fafe72dd5633b391289700c7d41851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1unary__specialized_3_01expr_01_4_1a52fafe72dd5633b391289700c7d41851" kindref="member">negate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(-arg);<sp/>}</highlight></codeline>
<codeline lineno="1996" refid="structhalf__float_1_1detail_1_1unary__specialized_3_01expr_01_4_1a8e93062c896cf81bcc9e6d079d55df63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1unary__specialized_3_01expr_01_4_1a8e93062c896cf81bcc9e6d079d55df63" kindref="member">fabs</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">std::fabs</ref>(arg));<sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1binary__specialized" kindref="compound">binary_specialized</ref></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2008" refid="structhalf__float_1_1detail_1_1binary__specialized_1afb9ec4bebd2df86f570d20a6e7c6392f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1binary__specialized_1afb9ec4bebd2df86f570d20a6e7c6392f" kindref="member">fmin</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" kindref="member">std::fmin</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(x))</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(y);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(y))</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(x);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::min(x,<sp/>y));</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025" refid="structhalf__float_1_1detail_1_1binary__specialized_1a3d46871722c0a117f1921cc11bf47a89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="structhalf__float_1_1detail_1_1binary__specialized_1a3d46871722c0a117f1921cc11bf47a89" kindref="member">fmax</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_CMATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(<ref refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" kindref="member">std::fmax</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(x))</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(y);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacehalf__float_1_1detail_1a20cedf19efac6e017090e17ea38342cf" kindref="member">builtin_isnan</ref>(y))</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(x);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>(std::max(x,<sp/>y));</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2038" refid="structhalf__float_1_1detail_1_1binary__specialized_3_01half_00_01half_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1binary__specialized" kindref="compound">binary_specialized</ref>&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>&gt;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2040" refid="structhalf__float_1_1detail_1_1binary__specialized_3_01half_00_01half_01_4_1a26cf067eeb5a5a7b20d0da1ddade32ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1binary__specialized_3_01half_00_01half_01_4_1a26cf067eeb5a5a7b20d0da1ddade32ad" kindref="member">fmin</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xabs<sp/>=<sp/>x.data_<sp/>&amp;<sp/>0x7FFF,<sp/>yabs<sp/>=<sp/>y.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xabs<sp/>&gt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(yabs<sp/>&gt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((xabs==x.data_)<sp/>?<sp/>xabs<sp/>:<sp/>-xabs)<sp/>&gt;<sp/>((yabs==y.data_)<sp/>?<sp/>yabs<sp/>:<sp/>-yabs))<sp/>?<sp/>y<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2049" refid="structhalf__float_1_1detail_1_1binary__specialized_3_01half_00_01half_01_4_1a906748ac07462c30c52cfe7145ae307c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1binary__specialized_3_01half_00_01half_01_4_1a906748ac07462c30c52cfe7145ae307c" kindref="member">fmax</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xabs<sp/>=<sp/>x.data_<sp/>&amp;<sp/>0x7FFF,<sp/>yabs<sp/>=<sp/>y.data_<sp/>&amp;<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xabs<sp/>&gt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(yabs<sp/>&gt;<sp/>0x7C00)</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((xabs==x.data_)<sp/>?<sp/>xabs<sp/>:<sp/>-xabs)<sp/>&lt;<sp/>((yabs==y.data_)<sp/>?<sp/>yabs<sp/>:<sp/>-yabs))<sp/>?<sp/>y<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R=(std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style)(HALF_ROUND_STYLE)&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster</ref><sp/>{};</highlight></codeline>
<codeline lineno="2067" refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01U_00_01R_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster</ref>&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,U,R&gt;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_STATIC_ASSERT<sp/>&amp;&amp;<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_arithmetic&lt;U&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;half_cast<sp/>from<sp/>non-arithmetic<sp/>type<sp/>unsupported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073" refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01U_00_01R_01_4_1aa32ee58e119cf3e82017c420893c3adb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01U_00_01R_01_4_1aa32ee58e119cf3e82017c420893c3adb" kindref="member">cast</ref>(U<sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cast_impl(arg,<sp/><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float&lt;U&gt;</ref>());<sp/>};</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>cast_impl(U<sp/>arg,<sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">true_type</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>float2half&lt;R&gt;(arg));<sp/>}</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>cast_impl(U<sp/>arg,<sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">false_type</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">binary</ref>,<sp/>int2half&lt;R&gt;(arg));<sp/>}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2079" refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01half_00_01R_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster</ref>&lt;T,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,R&gt;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_STATIC_ASSERT<sp/>&amp;&amp;<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_arithmetic&lt;T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;half_cast<sp/>to<sp/>non-arithmetic<sp/>type<sp/>unsupported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085" refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01half_00_01R_01_4_1abab2f9d3906f11fd4a24493c0121b14a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01half_00_01R_01_4_1abab2f9d3906f11fd4a24493c0121b14a" kindref="member">cast</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cast_impl(arg,<sp/><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float&lt;T&gt;</ref>());<sp/>}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>cast_impl(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">true_type</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>half2float&lt;T&gt;(arg.data_);<sp/>}</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>cast_impl(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">false_type</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>half2int&lt;R,T&gt;(arg.data_);<sp/>}</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2091" refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01expr_00_01R_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster</ref>&lt;T,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,R&gt;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_STATIC_ASSERT<sp/>&amp;&amp;<sp/>HALF_ENABLE_CPP11_TYPE_TRAITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_arithmetic&lt;T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;half_cast<sp/>to<sp/>non-arithmetic<sp/>type<sp/>unsupported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097" refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01expr_00_01R_01_4_1a8952ef178ea8fcc5faa71b7d6571dcd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhalf__float_1_1detail_1_1half__caster_3_01T_00_01expr_00_01R_01_4_1a8952ef178ea8fcc5faa71b7d6571dcd2" kindref="member">cast</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cast_impl(arg,<sp/><ref refid="structhalf__float_1_1detail_1_1is__float" kindref="compound">is_float&lt;T&gt;</ref>());<sp/>}</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>cast_impl(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg,<sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">true_type</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg);<sp/>}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>cast_impl(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/><ref refid="structhalf__float_1_1detail_1_1bool__type" kindref="compound">false_type</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>half2int&lt;R,T&gt;(arg.data_);<sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2103" refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01half_00_01R_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster</ref>&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,R&gt;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2105" refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01half_00_01R_01_4_1afaaa63731da3198dc70a01cd784ac078" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01half_00_01R_01_4_1afaaa63731da3198dc70a01cd784ac078" kindref="member">cast</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;<sp/>}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2107" refid="structhalf__float_1_1detail_1_1half__caster_3_01half_00_01expr_00_01R_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster</ref>&lt;<ref refid="classhalf__float_1_1half" kindref="compound">half</ref>,<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref>,R&gt;<sp/>:<sp/><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster</ref>&lt;half,half,R&gt;<sp/>{};</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"></codeline>
<codeline lineno="2117" refid="namespacehalf__float_1_1detail_1a6c0b83f30940719c1dd8f5a85323388a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;bool,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a6c0b83f30940719c1dd8f5a85323388a" kindref="member">operator==</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::isequal(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124" refid="namespacehalf__float_1_1detail_1a387b8a8af08fba40aff80054f52d0ba0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;bool,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a387b8a8af08fba40aff80054f52d0ba0" kindref="member">operator!=</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::isnotequal(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131" refid="namespacehalf__float_1_1detail_1afe873e6cae401e97d4d8d88c08eb29e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;bool,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1afe873e6cae401e97d4d8d88c08eb29e0" kindref="member">operator&lt;</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" kindref="member">functions::isless</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138" refid="namespacehalf__float_1_1detail_1ab5bceccadce3723b7c7b25dc63760025" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;bool,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab5bceccadce3723b7c7b25dc63760025" kindref="member">operator&gt;</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" kindref="member">functions::isgreater</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145" refid="namespacehalf__float_1_1detail_1a0588a6476f8569f2b81dd99d4e87d83b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;bool,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a0588a6476f8569f2b81dd99d4e87d83b" kindref="member">operator&lt;=</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" kindref="member">functions::islessequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152" refid="namespacehalf__float_1_1detail_1ad5a5e2d4da6f36b5b6ee2dced3fb3e72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;bool,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ad5a5e2d4da6f36b5b6ee2dced3fb3e72" kindref="member">operator&gt;=</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" kindref="member">functions::isgreaterequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"></codeline>
<codeline lineno="2162" refid="namespacehalf__float_1_1detail_1ab68ed4e1f0a86aebf4337957f1639070" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;expr,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a7afa8822c81700c74bf8be208cded547" kindref="member">operator+</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::plus(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168" refid="namespacehalf__float_1_1detail_1aa44e802bd306be8f49dd7d193630253e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;expr,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a8479fc53f679b85f40e6d511706627c4" kindref="member">operator-</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::minus(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174" refid="namespacehalf__float_1_1detail_1a39439907cd8f62aa71ed6e1e50f1c860" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;expr,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a39439907cd8f62aa71ed6e1e50f1c860" kindref="member">operator*</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::multiplies(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180" refid="namespacehalf__float_1_1detail_1a6cea2c4b4740528b2f86fb55990107bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;expr,T,U&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a6cea2c4b4740528b2f86fb55990107bf" kindref="member">operator/</ref>(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::divides(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185" refid="namespacehalf__float_1_1detail_1a7afa8822c81700c74bf8be208cded547" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;T,T&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a7afa8822c81700c74bf8be208cded547" kindref="member">operator+</ref>(T<sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;<sp/>}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190" refid="namespacehalf__float_1_1detail_1a8479fc53f679b85f40e6d511706627c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;T,T&gt;::type</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a8479fc53f679b85f40e6d511706627c4" kindref="member">operator-</ref>(T<sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1unary__specialized" kindref="compound">unary_specialized&lt;T&gt;::negate</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1enable" kindref="compound">enable&lt;std::basic_ostream&lt;charT,traits&gt;</ref>&amp;,T&gt;::type</highlight></codeline>
<codeline lineno="2201" refid="namespacehalf__float_1_1detail_1a91f6492ee3c6586e6d9dcdfcb31bccca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator&lt;&lt;(std::basic_ostream&lt;charT,traits&gt;<sp/>&amp;out,<sp/>T<sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::write(out,<sp/>arg);<sp/>}</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits&gt;<sp/>std::basic_istream&lt;charT,traits&gt;&amp;</highlight></codeline>
<codeline lineno="2208" refid="namespacehalf__float_1_1detail_1a50bcccb2f7042c23766a4f39090ed709" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehalf__float_1_1detail_1a50bcccb2f7042c23766a4f39090ed709" kindref="member">operator&gt;&gt;</ref>(std::basic_istream&lt;charT,traits&gt;<sp/>&amp;in,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>&amp;arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::read(in,<sp/>arg);<sp/>}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"></codeline>
<codeline lineno="2217"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;T,T&gt;::type<sp/>abs(T<sp/>arg)<sp/>{<sp/>return<sp/>unary_specialized&lt;T&gt;::fabs(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218" refid="namespacehalf__float_1_1detail_1a25d76d0f9f18298a1096716c0da7b6e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">abs</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">unary_specialized&lt;half&gt;::fabs</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2219" refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a7453dfce91b2c6b4ce6688f452ff8d64" kindref="member">abs</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">unary_specialized&lt;expr&gt;::fabs</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;T,T&gt;::type<sp/>fabs(T<sp/>arg)<sp/>{<sp/>return<sp/>unary_specialized&lt;T&gt;::fabs(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225" refid="namespacehalf__float_1_1detail_1a70f276b86204e71756d873694cf1e2ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">fabs</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">unary_specialized&lt;half&gt;::fabs</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2226" refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">fabs</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1af04ac1aefbabcf120d3cdf3ec75555ac" kindref="member">unary_specialized&lt;expr&gt;::fabs</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;expr,T,U&gt;::type<sp/>fmod(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::fmod(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233" refid="namespacehalf__float_1_1detail_1a935147b16040f424271a380e274577ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">fmod</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">functions::fmod</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2234" refid="namespacehalf__float_1_1detail_1a2a98a82b2c995cbf00d5a8aeca3e1104" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">fmod</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">functions::fmod</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2235" refid="namespacehalf__float_1_1detail_1a7d0143ad75876583a33b9efd238dfbdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">fmod</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">functions::fmod</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2236" refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">fmod</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a41a633d8b26ee3e7e1775d2109dee3a8" kindref="member">functions::fmod</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;expr,T,U&gt;::type<sp/>remainder(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::remainder(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243" refid="namespacehalf__float_1_1detail_1ab5ec4bbe576c7a623212d2a8e5fe4a30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" kindref="member">remainder</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" kindref="member">functions::remainder</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2244" refid="namespacehalf__float_1_1detail_1af34ace7578dcc806426d3399ff1d6e8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" kindref="member">remainder</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" kindref="member">functions::remainder</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2245" refid="namespacehalf__float_1_1detail_1a45e1dc6152c5212225561095b0181609" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" kindref="member">remainder</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" kindref="member">functions::remainder</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2246" refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" kindref="member">remainder</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a2d0fe7c3ea8f109a32cdec2a27dedf70" kindref="member">functions::remainder</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;expr,T,U&gt;::type<sp/>remquo(T<sp/>x,<sp/>U<sp/>y,<sp/>int<sp/>*quo)<sp/>{<sp/>return<sp/>functions::remquo(x,<sp/>y,<sp/>quo);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254" refid="namespacehalf__float_1_1detail_1aaeeae804024549bd70c30603126dbe3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" kindref="member">remquo</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*quo)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" kindref="member">functions::remquo</ref>(x,<sp/>y,<sp/>quo);<sp/>}</highlight></codeline>
<codeline lineno="2255" refid="namespacehalf__float_1_1detail_1aee094ed4d68df7b10e1708e94108db12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" kindref="member">remquo</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*quo)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" kindref="member">functions::remquo</ref>(x,<sp/>y,<sp/>quo);<sp/>}</highlight></codeline>
<codeline lineno="2256" refid="namespacehalf__float_1_1detail_1a550caa1e77f29aa409a10b3f9c238c0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" kindref="member">remquo</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*quo)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" kindref="member">functions::remquo</ref>(x,<sp/>y,<sp/>quo);<sp/>}</highlight></codeline>
<codeline lineno="2257" refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" kindref="member">remquo</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*quo)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aebf442dc0106b9d1efcd140bdf7c6afe" kindref="member">functions::remquo</ref>(x,<sp/>y,<sp/>quo);<sp/>}</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U,typename<sp/>V&gt;<sp/>typename<sp/>enable&lt;expr,T,U,V&gt;::type<sp/>fma(T<sp/>x,<sp/>U<sp/>y,<sp/>V<sp/>z)<sp/>{<sp/>return<sp/>functions::fma(x,<sp/>y,<sp/>z);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265" refid="namespacehalf__float_1_1detail_1a280ee0782f6d036ec43848c549a36e21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">fma</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>z)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">functions::fma</ref>(x,<sp/>y,<sp/>z);<sp/>}</highlight></codeline>
<codeline lineno="2266" refid="namespacehalf__float_1_1detail_1aa0cb023ea6c7d8001f5ef3d27d19aa08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">fma</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>z)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">functions::fma</ref>(x,<sp/>y,<sp/>z);<sp/>}</highlight></codeline>
<codeline lineno="2267" refid="namespacehalf__float_1_1detail_1a7c3742da5a38f674945f00920afa5471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">fma</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>z)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">functions::fma</ref>(x,<sp/>y,<sp/>z);<sp/>}</highlight></codeline>
<codeline lineno="2268" refid="namespacehalf__float_1_1detail_1ab6bd73ba9ce8e0d276b5660add1f3ec3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">fma</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>z)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">functions::fma</ref>(x,<sp/>y,<sp/>z);<sp/>}</highlight></codeline>
<codeline lineno="2269" refid="namespacehalf__float_1_1detail_1a44b4dfdc8a51edd86c0f6c6be1e8c362" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">fma</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>z)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">functions::fma</ref>(x,<sp/>y,<sp/>z);<sp/>}</highlight></codeline>
<codeline lineno="2270" refid="namespacehalf__float_1_1detail_1a8ad5fde03f4a89ee0a6febefff2b2951" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">fma</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>z)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">functions::fma</ref>(x,<sp/>y,<sp/>z);<sp/>}</highlight></codeline>
<codeline lineno="2271" refid="namespacehalf__float_1_1detail_1a4e699585abe71ccdf22a16eaa9fbdf2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">fma</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>z)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">functions::fma</ref>(x,<sp/>y,<sp/>z);<sp/>}</highlight></codeline>
<codeline lineno="2272" refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">fma</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>z)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a888c0b1d35bed6ccb5484cfe021099ac" kindref="member">functions::fma</ref>(x,<sp/>y,<sp/>z);<sp/>}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>result&lt;T,U&gt;::type<sp/>fmax(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>binary_specialized&lt;T,U&gt;::fmax(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279" refid="namespacehalf__float_1_1detail_1a465b9d2dc41f1c10dd7ab9ce3dc2866f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" kindref="member">fmax</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" kindref="member">binary_specialized&lt;half,half&gt;::fmax</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2280" refid="namespacehalf__float_1_1detail_1a684ce72377acab35d3568390a12629a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" kindref="member">fmax</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" kindref="member">binary_specialized&lt;half,expr&gt;::fmax</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2281" refid="namespacehalf__float_1_1detail_1a7bf0e2d7ac5511a0b70b9d4bf2ad3830" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" kindref="member">fmax</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" kindref="member">binary_specialized&lt;expr,half&gt;::fmax</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2282" refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" kindref="member">fmax</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a28654fedb6753018e804eab6f53a5efb" kindref="member">binary_specialized&lt;expr,expr&gt;::fmax</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>result&lt;T,U&gt;::type<sp/>fmin(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>binary_specialized&lt;T,U&gt;::fmin(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289" refid="namespacehalf__float_1_1detail_1a9b147d2e64476167b7e9ee41ce14f36c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" kindref="member">fmin</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" kindref="member">binary_specialized&lt;half,half&gt;::fmin</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2290" refid="namespacehalf__float_1_1detail_1a9ba6bab3339ee8ba80447452e780e33c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" kindref="member">fmin</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" kindref="member">binary_specialized&lt;half,expr&gt;::fmin</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2291" refid="namespacehalf__float_1_1detail_1a55ef2a52b5f71daa27a14aebc27ff772" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" kindref="member">fmin</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" kindref="member">binary_specialized&lt;expr,half&gt;::fmin</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2292" refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" kindref="member">fmin</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ada351aa3dc001fcb1c210e790cccdd64" kindref="member">binary_specialized&lt;expr,expr&gt;::fmin</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;expr,T,U&gt;::type<sp/>fdim(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::fdim(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2299" refid="namespacehalf__float_1_1detail_1a09a51a6e291a38991305ecdc8721ed85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" kindref="member">fdim</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" kindref="member">functions::fdim</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2300" refid="namespacehalf__float_1_1detail_1abc68948d8a694a01e4f07994dec98a42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" kindref="member">fdim</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" kindref="member">functions::fdim</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2301" refid="namespacehalf__float_1_1detail_1ae61860ac1f7a992e560e37d7340e662d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" kindref="member">fdim</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" kindref="member">functions::fdim</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2302" refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" kindref="member">fdim</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abcd504ab32799e08fc260c412b136f27" kindref="member">functions::fdim</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306" refid="namespacehalf__float_1_1detail_1af73da38f1f425ad36f7c90268d401397" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1af73da38f1f425ad36f7c90268d401397" kindref="member">nanh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1af73da38f1f425ad36f7c90268d401397" kindref="member">functions::nanh</ref>();<sp/>}</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"></codeline>
<codeline lineno="2315"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>exp(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::exp(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316" refid="namespacehalf__float_1_1detail_1a22c1f76fc6a8dd8e469e54cabc4a7f42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">functions::exp</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2317" refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">functions::exp</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>expm1(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::expm1(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323" refid="namespacehalf__float_1_1detail_1a7b50ad39eee026747f621d17eb982d47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1afdac01457ab03f14285ce6b358221bda" kindref="member">expm1</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afdac01457ab03f14285ce6b358221bda" kindref="member">functions::expm1</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2324" refid="namespacehalf__float_1_1detail_1afdac01457ab03f14285ce6b358221bda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1afdac01457ab03f14285ce6b358221bda" kindref="member">expm1</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afdac01457ab03f14285ce6b358221bda" kindref="member">functions::expm1</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>exp2(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::exp2(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330" refid="namespacehalf__float_1_1detail_1a6840d19bb305207e0bb01f47cb4fbe34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aacebd17acf9b67ae3748ea3461d3cfad" kindref="member">exp2</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aacebd17acf9b67ae3748ea3461d3cfad" kindref="member">functions::exp2</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2331" refid="namespacehalf__float_1_1detail_1aacebd17acf9b67ae3748ea3461d3cfad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aacebd17acf9b67ae3748ea3461d3cfad" kindref="member">exp2</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aacebd17acf9b67ae3748ea3461d3cfad" kindref="member">functions::exp2</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>log(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::log(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337" refid="namespacehalf__float_1_1detail_1aae4eda4733dc4a863b635473008d9bc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">log</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">functions::log</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2338" refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">log</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8682019f0663d47925c56bff848c30f2" kindref="member">functions::log</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>log10(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::log10(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344" refid="namespacehalf__float_1_1detail_1ad8d7b7769a3053dd74344ca0b122bb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a968a57d32cab0e05f9e8bf12ea6f9c5a" kindref="member">log10</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a968a57d32cab0e05f9e8bf12ea6f9c5a" kindref="member">functions::log10</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2345" refid="namespacehalf__float_1_1detail_1a968a57d32cab0e05f9e8bf12ea6f9c5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a968a57d32cab0e05f9e8bf12ea6f9c5a" kindref="member">log10</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a968a57d32cab0e05f9e8bf12ea6f9c5a" kindref="member">functions::log10</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>log1p(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::log1p(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351" refid="namespacehalf__float_1_1detail_1aaab6664f3cee88c7c0474396c8ba8219" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a427f2f960568816873d1f80f0a464232" kindref="member">log1p</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a427f2f960568816873d1f80f0a464232" kindref="member">functions::log1p</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2352" refid="namespacehalf__float_1_1detail_1a427f2f960568816873d1f80f0a464232" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a427f2f960568816873d1f80f0a464232" kindref="member">log1p</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a427f2f960568816873d1f80f0a464232" kindref="member">functions::log1p</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>log2(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::log2(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358" refid="namespacehalf__float_1_1detail_1ac864f8697a78ce420e343a9c5d37118f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a897c86d265108d3326d57436bcd75562" kindref="member">log2</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a897c86d265108d3326d57436bcd75562" kindref="member">functions::log2</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2359" refid="namespacehalf__float_1_1detail_1a897c86d265108d3326d57436bcd75562" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a897c86d265108d3326d57436bcd75562" kindref="member">log2</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a897c86d265108d3326d57436bcd75562" kindref="member">functions::log2</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"></codeline>
<codeline lineno="2368"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>sqrt(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::sqrt(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2369" refid="namespacehalf__float_1_1detail_1af714c124a18db9b79b703007b8d66162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" kindref="member">sqrt</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" kindref="member">functions::sqrt</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2370" refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" kindref="member">sqrt</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aafd2dced9a16f7e192b0fa7ee1a80b9e" kindref="member">functions::sqrt</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>cbrt(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::cbrt(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376" refid="namespacehalf__float_1_1detail_1accbe3a1c2cd180f62be82a1b8b784390" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a0efca8d667af3c6d23589e899ac23d51" kindref="member">cbrt</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a0efca8d667af3c6d23589e899ac23d51" kindref="member">functions::cbrt</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2377" refid="namespacehalf__float_1_1detail_1a0efca8d667af3c6d23589e899ac23d51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a0efca8d667af3c6d23589e899ac23d51" kindref="member">cbrt</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a0efca8d667af3c6d23589e899ac23d51" kindref="member">functions::cbrt</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;expr,T,U&gt;::type<sp/>hypot(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::hypot(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384" refid="namespacehalf__float_1_1detail_1a380a4c5a399e3dc14fdf39c53277edc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" kindref="member">hypot</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" kindref="member">functions::hypot</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2385" refid="namespacehalf__float_1_1detail_1a540836fd441b3d89f321b9db43c6e2ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" kindref="member">hypot</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" kindref="member">functions::hypot</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2386" refid="namespacehalf__float_1_1detail_1a10f0a3e50b1bc0a0c6760ce5f0a378bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" kindref="member">hypot</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" kindref="member">functions::hypot</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2387" refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" kindref="member">hypot</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ad5632f31bdd1c66892231c5c4027ecd8" kindref="member">functions::hypot</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;expr,T,U&gt;::type<sp/>pow(T<sp/>base,<sp/>U<sp/>exp)<sp/>{<sp/>return<sp/>functions::pow(base,<sp/>exp);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394" refid="namespacehalf__float_1_1detail_1adf4df435c03de776c4ed53d5cf278e31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">pow</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>base,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">functions::pow</ref>(base,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2395" refid="namespacehalf__float_1_1detail_1a7289d67db5c1b06379f40586325de380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">pow</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>base,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">functions::pow</ref>(base,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2396" refid="namespacehalf__float_1_1detail_1a05cde994c26a250d02d8fc9607396837" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">pow</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>base,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">functions::pow</ref>(base,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2397" refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">pow</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>base,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a3904b20401171c0a102e4a8498d6acbc" kindref="member">functions::pow</ref>(base,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"></codeline>
<codeline lineno="2406"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>sin(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::sin(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407" refid="namespacehalf__float_1_1detail_1a3c1cc34288f381ee6543c05034783c93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5ae15ff362de65ac7784397ea32e4d3d" kindref="member">sin</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5ae15ff362de65ac7784397ea32e4d3d" kindref="member">functions::sin</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2408" refid="namespacehalf__float_1_1detail_1a5ae15ff362de65ac7784397ea32e4d3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5ae15ff362de65ac7784397ea32e4d3d" kindref="member">sin</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5ae15ff362de65ac7784397ea32e4d3d" kindref="member">functions::sin</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>cos(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::cos(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414" refid="namespacehalf__float_1_1detail_1a3932690572419d6a40ce760c897ac2cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a79354f6efe07d6587202e75395d31f49" kindref="member">cos</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a79354f6efe07d6587202e75395d31f49" kindref="member">functions::cos</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2415" refid="namespacehalf__float_1_1detail_1a79354f6efe07d6587202e75395d31f49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a79354f6efe07d6587202e75395d31f49" kindref="member">cos</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a79354f6efe07d6587202e75395d31f49" kindref="member">functions::cos</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>tan(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::tan(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421" refid="namespacehalf__float_1_1detail_1a0173ced6e30b993f3c622c765ad53ea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a570237a84cf8ce08088e61a60ed58a11" kindref="member">tan</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a570237a84cf8ce08088e61a60ed58a11" kindref="member">functions::tan</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2422" refid="namespacehalf__float_1_1detail_1a570237a84cf8ce08088e61a60ed58a11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a570237a84cf8ce08088e61a60ed58a11" kindref="member">tan</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a570237a84cf8ce08088e61a60ed58a11" kindref="member">functions::tan</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>asin(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::asin(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428" refid="namespacehalf__float_1_1detail_1ad93b1ac42816b8519b0653f58f327ba5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ae1ccfb00bd0c246fc79582a98b173c5a" kindref="member">asin</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ae1ccfb00bd0c246fc79582a98b173c5a" kindref="member">functions::asin</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2429" refid="namespacehalf__float_1_1detail_1ae1ccfb00bd0c246fc79582a98b173c5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ae1ccfb00bd0c246fc79582a98b173c5a" kindref="member">asin</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ae1ccfb00bd0c246fc79582a98b173c5a" kindref="member">functions::asin</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>acos(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::acos(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2435" refid="namespacehalf__float_1_1detail_1a12f68bb5d9a3e88d46af47071ef4e259" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a3633af9d8cf722fe454f83784cb5cf90" kindref="member">acos</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a3633af9d8cf722fe454f83784cb5cf90" kindref="member">functions::acos</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2436" refid="namespacehalf__float_1_1detail_1a3633af9d8cf722fe454f83784cb5cf90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a3633af9d8cf722fe454f83784cb5cf90" kindref="member">acos</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a3633af9d8cf722fe454f83784cb5cf90" kindref="member">functions::acos</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>atan(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::atan(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442" refid="namespacehalf__float_1_1detail_1a70ee2b0c4152c8633270faa7b5c5158c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab90ceee4ff49e1bc2f733112837cd03b" kindref="member">atan</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab90ceee4ff49e1bc2f733112837cd03b" kindref="member">functions::atan</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2443" refid="namespacehalf__float_1_1detail_1ab90ceee4ff49e1bc2f733112837cd03b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab90ceee4ff49e1bc2f733112837cd03b" kindref="member">atan</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab90ceee4ff49e1bc2f733112837cd03b" kindref="member">functions::atan</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;expr,T,U&gt;::type<sp/>atan2(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::atan2(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450" refid="namespacehalf__float_1_1detail_1a85003efe03f71ec6c069237612a2f84f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" kindref="member">atan2</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" kindref="member">functions::atan2</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2451" refid="namespacehalf__float_1_1detail_1a8e10018401784e57520350cf5ebf0ee2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" kindref="member">atan2</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" kindref="member">functions::atan2</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2452" refid="namespacehalf__float_1_1detail_1a476bd28794fb1aa832984132b6e1d78b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" kindref="member">atan2</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" kindref="member">functions::atan2</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2453" refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" kindref="member">atan2</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5a00ed39da24ed7caf6b247bf2af7441" kindref="member">functions::atan2</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"></codeline>
<codeline lineno="2462"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>sinh(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::sinh(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463" refid="namespacehalf__float_1_1detail_1aa56d689bec38bfbf9d86192209e705f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab885f21afbf075b3b3bfe3e028360a4f" kindref="member">sinh</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab885f21afbf075b3b3bfe3e028360a4f" kindref="member">functions::sinh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2464" refid="namespacehalf__float_1_1detail_1ab885f21afbf075b3b3bfe3e028360a4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab885f21afbf075b3b3bfe3e028360a4f" kindref="member">sinh</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab885f21afbf075b3b3bfe3e028360a4f" kindref="member">functions::sinh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>cosh(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::cosh(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2470" refid="namespacehalf__float_1_1detail_1a4eca9c9999253f864e291defe7acc67b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a70e455e2c9707767d81bee70b7cb2118" kindref="member">cosh</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a70e455e2c9707767d81bee70b7cb2118" kindref="member">functions::cosh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2471" refid="namespacehalf__float_1_1detail_1a70e455e2c9707767d81bee70b7cb2118" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a70e455e2c9707767d81bee70b7cb2118" kindref="member">cosh</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a70e455e2c9707767d81bee70b7cb2118" kindref="member">functions::cosh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>tanh(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::tanh(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477" refid="namespacehalf__float_1_1detail_1a06795625a388d617e44ea490903c8984" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5c1c93204314b1e36f09f5cd64e53213" kindref="member">tanh</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5c1c93204314b1e36f09f5cd64e53213" kindref="member">functions::tanh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2478" refid="namespacehalf__float_1_1detail_1a5c1c93204314b1e36f09f5cd64e53213" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5c1c93204314b1e36f09f5cd64e53213" kindref="member">tanh</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5c1c93204314b1e36f09f5cd64e53213" kindref="member">functions::tanh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>asinh(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::asinh(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484" refid="namespacehalf__float_1_1detail_1aa5f5994b0842a116dc20f1603e1f4cbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a16e8fe208bed6715d96720cd52484519" kindref="member">asinh</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a16e8fe208bed6715d96720cd52484519" kindref="member">functions::asinh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2485" refid="namespacehalf__float_1_1detail_1a16e8fe208bed6715d96720cd52484519" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a16e8fe208bed6715d96720cd52484519" kindref="member">asinh</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a16e8fe208bed6715d96720cd52484519" kindref="member">functions::asinh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>acosh(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::acosh(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491" refid="namespacehalf__float_1_1detail_1ab449a1df5e728eea9892dec37c3d17b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a770438bb92d31e565c573ec6c2018809" kindref="member">acosh</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a770438bb92d31e565c573ec6c2018809" kindref="member">functions::acosh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2492" refid="namespacehalf__float_1_1detail_1a770438bb92d31e565c573ec6c2018809" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a770438bb92d31e565c573ec6c2018809" kindref="member">acosh</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a770438bb92d31e565c573ec6c2018809" kindref="member">functions::acosh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>atanh(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::atanh(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498" refid="namespacehalf__float_1_1detail_1a50f52a411fa0758d9b30d1693a94abd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ac77afd4c7e55ed6a9b017d6ffa28d6e1" kindref="member">atanh</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac77afd4c7e55ed6a9b017d6ffa28d6e1" kindref="member">functions::atanh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2499" refid="namespacehalf__float_1_1detail_1ac77afd4c7e55ed6a9b017d6ffa28d6e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ac77afd4c7e55ed6a9b017d6ffa28d6e1" kindref="member">atanh</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac77afd4c7e55ed6a9b017d6ffa28d6e1" kindref="member">functions::atanh</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"></codeline>
<codeline lineno="2508"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>erf(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::erf(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509" refid="namespacehalf__float_1_1detail_1a91bfb5ecc731b688a5a866d1da4c6699" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" kindref="member">erf</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" kindref="member">functions::erf</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2510" refid="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" kindref="member">erf</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab4dcbfac787425f31d61309cecdded5d" kindref="member">functions::erf</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>erfc(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::erfc(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516" refid="namespacehalf__float_1_1detail_1ae03035153282371dbc8691ebadcc4fb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a987a584f9cd8b5e84339c8f4cefca641" kindref="member">erfc</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a987a584f9cd8b5e84339c8f4cefca641" kindref="member">functions::erfc</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2517" refid="namespacehalf__float_1_1detail_1a987a584f9cd8b5e84339c8f4cefca641" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a987a584f9cd8b5e84339c8f4cefca641" kindref="member">erfc</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a987a584f9cd8b5e84339c8f4cefca641" kindref="member">functions::erfc</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>lgamma(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::lgamma(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523" refid="namespacehalf__float_1_1detail_1a7cf73acde909ef9f522b49f47e54843f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">lgamma</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">functions::lgamma</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2524" refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">lgamma</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa53d3da977e832380b5b42d7d9f08743" kindref="member">functions::lgamma</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;expr,T&gt;::type<sp/>tgamma(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::tgamma(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530" refid="namespacehalf__float_1_1detail_1a23014ba07b4073225072ecaf1159d106" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aa9767c4f2cb1260978d67745b8533882" kindref="member">tgamma</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa9767c4f2cb1260978d67745b8533882" kindref="member">functions::tgamma</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2531" refid="namespacehalf__float_1_1detail_1aa9767c4f2cb1260978d67745b8533882" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aa9767c4f2cb1260978d67745b8533882" kindref="member">tgamma</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa9767c4f2cb1260978d67745b8533882" kindref="member">functions::tgamma</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"></codeline>
<codeline lineno="2540"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>ceil(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::ceil(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541" refid="namespacehalf__float_1_1detail_1a86421b3112018437512cf26b915ef979" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a021a3543d2b972d72b770226b7c181df" kindref="member">ceil</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a021a3543d2b972d72b770226b7c181df" kindref="member">functions::ceil</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2542" refid="namespacehalf__float_1_1detail_1a021a3543d2b972d72b770226b7c181df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a021a3543d2b972d72b770226b7c181df" kindref="member">ceil</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a021a3543d2b972d72b770226b7c181df" kindref="member">functions::ceil</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>floor(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::floor(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548" refid="namespacehalf__float_1_1detail_1ad34d698311b83780c4df38d8a8274756" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a07d6873ffe14938135fa22fb235cc49f" kindref="member">floor</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a07d6873ffe14938135fa22fb235cc49f" kindref="member">functions::floor</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2549" refid="namespacehalf__float_1_1detail_1a07d6873ffe14938135fa22fb235cc49f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a07d6873ffe14938135fa22fb235cc49f" kindref="member">floor</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a07d6873ffe14938135fa22fb235cc49f" kindref="member">functions::floor</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>trunc(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::trunc(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555" refid="namespacehalf__float_1_1detail_1ad2f636a625c44e0e2e939cf4fcdd8980" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a200c486961a2c2aea24ed7c323acad97" kindref="member">trunc</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a200c486961a2c2aea24ed7c323acad97" kindref="member">functions::trunc</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2556" refid="namespacehalf__float_1_1detail_1a200c486961a2c2aea24ed7c323acad97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a200c486961a2c2aea24ed7c323acad97" kindref="member">trunc</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a200c486961a2c2aea24ed7c323acad97" kindref="member">functions::trunc</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>round(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::round(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562" refid="namespacehalf__float_1_1detail_1ae60c2e9b87102c08084c81d546113c91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab5b61d50f0c874faf8d0a949386242ff" kindref="member">round</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab5b61d50f0c874faf8d0a949386242ff" kindref="member">functions::round</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2563" refid="namespacehalf__float_1_1detail_1ab5b61d50f0c874faf8d0a949386242ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab5b61d50f0c874faf8d0a949386242ff" kindref="member">round</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab5b61d50f0c874faf8d0a949386242ff" kindref="member">functions::round</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;long,T&gt;::type<sp/>lround(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::lround(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569" refid="namespacehalf__float_1_1detail_1abff729297b6ad9e7ad431f73d280b76d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a6d1973ada01f199686cc173ea627052b" kindref="member">lround</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a6d1973ada01f199686cc173ea627052b" kindref="member">functions::lround</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2570" refid="namespacehalf__float_1_1detail_1a6d1973ada01f199686cc173ea627052b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a6d1973ada01f199686cc173ea627052b" kindref="member">lround</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a6d1973ada01f199686cc173ea627052b" kindref="member">functions::lround</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>nearbyint(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::nearbyint(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576" refid="namespacehalf__float_1_1detail_1aa18533c0035bfe9c4f143acfd2b47272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aebcfe947c8904d558b9a572d13b7a3ae" kindref="member">nearbyint</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aea0610c62a916840b0d0409b239965d4" kindref="member">functions::rint</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2577" refid="namespacehalf__float_1_1detail_1aebcfe947c8904d558b9a572d13b7a3ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aebcfe947c8904d558b9a572d13b7a3ae" kindref="member">nearbyint</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aea0610c62a916840b0d0409b239965d4" kindref="member">functions::rint</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>rint(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::rint(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583" refid="namespacehalf__float_1_1detail_1a25d6e6a301530bc1b48159f74cb5a0b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aea0610c62a916840b0d0409b239965d4" kindref="member">rint</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aea0610c62a916840b0d0409b239965d4" kindref="member">functions::rint</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2584" refid="namespacehalf__float_1_1detail_1aea0610c62a916840b0d0409b239965d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1aea0610c62a916840b0d0409b239965d4" kindref="member">rint</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aea0610c62a916840b0d0409b239965d4" kindref="member">functions::rint</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;long,T&gt;::type<sp/>lrint(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::lrint(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590" refid="namespacehalf__float_1_1detail_1aa2ee848c78f938434f485e75904bee45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a25108b6b800a6693f27963e6183f8c19" kindref="member">lrint</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a25108b6b800a6693f27963e6183f8c19" kindref="member">functions::lrint</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2591" refid="namespacehalf__float_1_1detail_1a25108b6b800a6693f27963e6183f8c19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a25108b6b800a6693f27963e6183f8c19" kindref="member">lrint</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a25108b6b800a6693f27963e6183f8c19" kindref="member">functions::lrint</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>HALF_ENABLE_CPP11_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;long<sp/>long,T&gt;::type<sp/>llround(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::llround(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>llround(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::llround(arg);<sp/>}</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>llround(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::llround(arg);<sp/>}</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;long<sp/>long,T&gt;::type<sp/>llrint(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::llrint(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>llrint(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::llrint(arg);<sp/>}</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>llrint(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functions::llrint(arg);<sp/>}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"></codeline>
<codeline lineno="2616"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>frexp(T<sp/>arg,<sp/>int<sp/>*exp)<sp/>{<sp/>return<sp/>functions::frexp(arg,<sp/>exp);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2617" refid="namespacehalf__float_1_1detail_1ac50a04fe4afdfae67b7aeb163fa92c72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab852ae178e7de565f1731acb2b1cb9f1" kindref="member">frexp</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab852ae178e7de565f1731acb2b1cb9f1" kindref="member">functions::frexp</ref>(arg,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2618" refid="namespacehalf__float_1_1detail_1ab852ae178e7de565f1731acb2b1cb9f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ab852ae178e7de565f1731acb2b1cb9f1" kindref="member">frexp</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab852ae178e7de565f1731acb2b1cb9f1" kindref="member">functions::frexp</ref>(arg,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>ldexp(T<sp/>arg,<sp/>int<sp/>exp)<sp/>{<sp/>return<sp/>functions::scalbln(arg,<sp/>exp);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2625" refid="namespacehalf__float_1_1detail_1a4540a29921074f33bc8be71904e12aef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" kindref="member">ldexp</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" kindref="member">functions::scalbln</ref>(arg,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2626" refid="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a78e551ce438f7098e0872fceb09c8c75" kindref="member">ldexp</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" kindref="member">functions::scalbln</ref>(arg,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>modf(T<sp/>arg,<sp/>half<sp/>*iptr)<sp/>{<sp/>return<sp/>functions::modf(arg,<sp/>iptr);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633" refid="namespacehalf__float_1_1detail_1a5ec08b7eaba0159f189fedeaea43946e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a86229873ef3805ed4ee0d8796a73b421" kindref="member">modf</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>*iptr)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a86229873ef3805ed4ee0d8796a73b421" kindref="member">functions::modf</ref>(arg,<sp/>iptr);<sp/>}</highlight></codeline>
<codeline lineno="2634" refid="namespacehalf__float_1_1detail_1a86229873ef3805ed4ee0d8796a73b421" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a86229873ef3805ed4ee0d8796a73b421" kindref="member">modf</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>*iptr)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a86229873ef3805ed4ee0d8796a73b421" kindref="member">functions::modf</ref>(arg,<sp/>iptr);<sp/>}</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>scalbn(T<sp/>arg,<sp/>int<sp/>exp)<sp/>{<sp/>return<sp/>functions::scalbln(arg,<sp/>exp);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641" refid="namespacehalf__float_1_1detail_1afa69fde98551e3537a77d267b1fc4187" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ad38a2f6279448caa187ea823b520085c" kindref="member">scalbn</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" kindref="member">functions::scalbln</ref>(arg,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2642" refid="namespacehalf__float_1_1detail_1ad38a2f6279448caa187ea823b520085c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ad38a2f6279448caa187ea823b520085c" kindref="member">scalbn</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" kindref="member">functions::scalbln</ref>(arg,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>scalbln(T<sp/>arg,<sp/>long<sp/>exp)<sp/>{<sp/>return<sp/>functions::scalbln(arg,<sp/>exp);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649" refid="namespacehalf__float_1_1detail_1a924a0abc9d3ee7742200574a803a9bfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" kindref="member">scalbln</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" kindref="member">functions::scalbln</ref>(arg,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2650" refid="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" kindref="member">scalbln</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09e538127fc0c503d11489a95f3edffd" kindref="member">exp</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5466f8ca5b1bc5df9326c250b8f1bf2c" kindref="member">functions::scalbln</ref>(arg,<sp/>exp);<sp/>}</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;int,T&gt;::type<sp/>ilogb(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::ilogb(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659" refid="namespacehalf__float_1_1detail_1acd3e6c3b07beae2997cef825944411fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afd96f3123343818501b552174ef98dca" kindref="member">ilogb</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afd96f3123343818501b552174ef98dca" kindref="member">functions::ilogb</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2660" refid="namespacehalf__float_1_1detail_1afd96f3123343818501b552174ef98dca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afd96f3123343818501b552174ef98dca" kindref="member">ilogb</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afd96f3123343818501b552174ef98dca" kindref="member">functions::ilogb</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>logb(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::logb(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666" refid="namespacehalf__float_1_1detail_1a9963a6cdd7b45287f35438e07717eba2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a37ddd9d452d9bd4c6d31f56adf9f6620" kindref="member">logb</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a37ddd9d452d9bd4c6d31f56adf9f6620" kindref="member">functions::logb</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2667" refid="namespacehalf__float_1_1detail_1a37ddd9d452d9bd4c6d31f56adf9f6620" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a37ddd9d452d9bd4c6d31f56adf9f6620" kindref="member">logb</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a37ddd9d452d9bd4c6d31f56adf9f6620" kindref="member">functions::logb</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;half,T,U&gt;::type<sp/>nextafter(T<sp/>from,<sp/>U<sp/>to)<sp/>{<sp/>return<sp/>functions::nextafter(from,<sp/>to);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674" refid="namespacehalf__float_1_1detail_1abaff6defbabab12cdfbb47ebf2d757a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" kindref="member">nextafter</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>from,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>to)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" kindref="member">functions::nextafter</ref>(from,<sp/>to);<sp/>}</highlight></codeline>
<codeline lineno="2675" refid="namespacehalf__float_1_1detail_1ab1e7231cc386bb596373cf6618d63541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" kindref="member">nextafter</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>from,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>to)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" kindref="member">functions::nextafter</ref>(from,<sp/>to);<sp/>}</highlight></codeline>
<codeline lineno="2676" refid="namespacehalf__float_1_1detail_1ae9f4932000e04299199ad07b764f9757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" kindref="member">nextafter</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>from,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>to)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" kindref="member">functions::nextafter</ref>(from,<sp/>to);<sp/>}</highlight></codeline>
<codeline lineno="2677" refid="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" kindref="member">nextafter</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>from,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>to)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abcc7d0402bd1f7a94709bc16012baff2" kindref="member">functions::nextafter</ref>(from,<sp/>to);<sp/>}</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;half,T&gt;::type<sp/>nexttoward(T<sp/>from,<sp/>long<sp/>double<sp/>to)<sp/>{<sp/>return<sp/>functions::nexttoward(from,<sp/>to);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684" refid="namespacehalf__float_1_1detail_1aef57aa188ad54b4740b8c3aed38c3c36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ae9f3e0b8320a8104eecd193179ee58d5" kindref="member">nexttoward</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>from,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ae9f3e0b8320a8104eecd193179ee58d5" kindref="member">functions::nexttoward</ref>(from,<sp/>to);<sp/>}</highlight></codeline>
<codeline lineno="2685" refid="namespacehalf__float_1_1detail_1ae9f3e0b8320a8104eecd193179ee58d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1ae9f3e0b8320a8104eecd193179ee58d5" kindref="member">nexttoward</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>from,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ae9f3e0b8320a8104eecd193179ee58d5" kindref="member">functions::nexttoward</ref>(from,<sp/>to);<sp/>}</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;half,T,U&gt;::type<sp/>copysign(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::copysign(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692" refid="namespacehalf__float_1_1detail_1aca0e10e9b77c1231f05521e08d016a2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" kindref="member">copysign</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" kindref="member">functions::copysign</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2693" refid="namespacehalf__float_1_1detail_1a831056e8fa4d5a57221ef93835d7279f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" kindref="member">copysign</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" kindref="member">functions::copysign</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2694" refid="namespacehalf__float_1_1detail_1a2e29b846ced6aa37b7806563e5e12bc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" kindref="member">copysign</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" kindref="member">functions::copysign</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2695" refid="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/><ref refid="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" kindref="member">copysign</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a2ab58ff6ab481a5e8bbf6ad1383b7842" kindref="member">functions::copysign</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;int,T&gt;::type<sp/>fpclassify(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::fpclassify(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710" refid="namespacehalf__float_1_1detail_1a35cb57616468455d2e4e0b7e28fe97c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a1691a54abfd35fa9c1880288aa3f1244" kindref="member">fpclassify</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a1691a54abfd35fa9c1880288aa3f1244" kindref="member">functions::fpclassify</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2711" refid="namespacehalf__float_1_1detail_1a1691a54abfd35fa9c1880288aa3f1244" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a1691a54abfd35fa9c1880288aa3f1244" kindref="member">fpclassify</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a1691a54abfd35fa9c1880288aa3f1244" kindref="member">functions::fpclassify</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;bool,T&gt;::type<sp/>isfinite(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::isfinite(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2718" refid="namespacehalf__float_1_1detail_1a976e0b18b3e84b7173457c28411de94a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7d652c289107cb5f35c591f89bdffe36" kindref="member">isfinite</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7d652c289107cb5f35c591f89bdffe36" kindref="member">functions::isfinite</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2719" refid="namespacehalf__float_1_1detail_1a7d652c289107cb5f35c591f89bdffe36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7d652c289107cb5f35c591f89bdffe36" kindref="member">isfinite</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7d652c289107cb5f35c591f89bdffe36" kindref="member">functions::isfinite</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;bool,T&gt;::type<sp/>isinf(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::isinf(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726" refid="namespacehalf__float_1_1detail_1a8963179a7b2e95bb126aea404732e2d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a072ecb80d48fc55231963d6a36c2abe4" kindref="member">isinf</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a072ecb80d48fc55231963d6a36c2abe4" kindref="member">functions::isinf</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2727" refid="namespacehalf__float_1_1detail_1a072ecb80d48fc55231963d6a36c2abe4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a072ecb80d48fc55231963d6a36c2abe4" kindref="member">isinf</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a072ecb80d48fc55231963d6a36c2abe4" kindref="member">functions::isinf</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;bool,T&gt;::type<sp/>isnan(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::isnan(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2734" refid="namespacehalf__float_1_1detail_1ac997496b119af340bfe047bff0583ee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">isnan</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">functions::isnan</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2735" refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">isnan</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8f05e6f9157536d7bc25fe4232491924" kindref="member">functions::isnan</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;bool,T&gt;::type<sp/>isnormal(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::isnormal(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742" refid="namespacehalf__float_1_1detail_1a8cb72b0b732c9ad285220edbf2cdf303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa68c8d309a1adebe2de30c3ea5c9c577" kindref="member">isnormal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa68c8d309a1adebe2de30c3ea5c9c577" kindref="member">functions::isnormal</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2743" refid="namespacehalf__float_1_1detail_1aa68c8d309a1adebe2de30c3ea5c9c577" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa68c8d309a1adebe2de30c3ea5c9c577" kindref="member">isnormal</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa68c8d309a1adebe2de30c3ea5c9c577" kindref="member">functions::isnormal</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>typename<sp/>enable&lt;bool,T&gt;::type<sp/>signbit(T<sp/>arg)<sp/>{<sp/>return<sp/>functions::signbit(arg);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2750" refid="namespacehalf__float_1_1detail_1a889e57734de1100a401c1f148d1e6354" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac957d466a743fdc5910216506256ea3c" kindref="member">signbit</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac957d466a743fdc5910216506256ea3c" kindref="member">functions::signbit</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2751" refid="namespacehalf__float_1_1detail_1ac957d466a743fdc5910216506256ea3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac957d466a743fdc5910216506256ea3c" kindref="member">signbit</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac957d466a743fdc5910216506256ea3c" kindref="member">functions::signbit</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"></codeline>
<codeline lineno="2762"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;bool,T,U&gt;::type<sp/>isgreater(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::isgreater(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763" refid="namespacehalf__float_1_1detail_1ac6634b70f77be4d111f27b801e5db865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" kindref="member">isgreater</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" kindref="member">functions::isgreater</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2764" refid="namespacehalf__float_1_1detail_1a78e952bbbc53aeb9a9b1e21a8bfa72d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" kindref="member">isgreater</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" kindref="member">functions::isgreater</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2765" refid="namespacehalf__float_1_1detail_1a4fd226fe51f2d00ca53ff54e1db4d93c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" kindref="member">isgreater</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" kindref="member">functions::isgreater</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2766" refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" kindref="member">isgreater</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9ccecf7168d51b6c85c9495f4b9bfda8" kindref="member">functions::isgreater</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;bool,T,U&gt;::type<sp/>isgreaterequal(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::isgreaterequal(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2774" refid="namespacehalf__float_1_1detail_1a93796728de672120ebdab9519c3e33d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" kindref="member">isgreaterequal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" kindref="member">functions::isgreaterequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2775" refid="namespacehalf__float_1_1detail_1a2b2f028b697b695c82cde2bf921af6d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" kindref="member">isgreaterequal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" kindref="member">functions::isgreaterequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2776" refid="namespacehalf__float_1_1detail_1a9b3c938dfd20bb945fcf1d4ae16f1989" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" kindref="member">isgreaterequal</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" kindref="member">functions::isgreaterequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2777" refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" kindref="member">isgreaterequal</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4e163595f6122e6bd7b911e5730f5087" kindref="member">functions::isgreaterequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;bool,T,U&gt;::type<sp/>isless(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::isless(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785" refid="namespacehalf__float_1_1detail_1a38cad803bcd84b49ef25e9181678284e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" kindref="member">isless</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" kindref="member">functions::isless</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2786" refid="namespacehalf__float_1_1detail_1a284488fe5519a429d1834b76bb59d152" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" kindref="member">isless</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" kindref="member">functions::isless</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2787" refid="namespacehalf__float_1_1detail_1a0bf94752c22c1cdb1273beeb67164e7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" kindref="member">isless</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" kindref="member">functions::isless</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2788" refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" kindref="member">isless</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a911db07a9c4a7307537a77d0a1b63020" kindref="member">functions::isless</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;bool,T,U&gt;::type<sp/>islessequal(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::islessequal(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796" refid="namespacehalf__float_1_1detail_1ac4890222c4073ad446d877c321b335d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" kindref="member">islessequal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" kindref="member">functions::islessequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2797" refid="namespacehalf__float_1_1detail_1ab84536d5ba40f3d79a8a90942625279b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" kindref="member">islessequal</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" kindref="member">functions::islessequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2798" refid="namespacehalf__float_1_1detail_1adfa3321c4be8e22cbd300eaa157d9961" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" kindref="member">islessequal</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" kindref="member">functions::islessequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2799" refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" kindref="member">islessequal</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a403f2453b664076031e8dc915cc897e6" kindref="member">functions::islessequal</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;bool,T,U&gt;::type<sp/>islessgreater(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::islessgreater(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807" refid="namespacehalf__float_1_1detail_1a1c8c80126de214bbee6021d1d7ace69f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" kindref="member">islessgreater</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" kindref="member">functions::islessgreater</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2808" refid="namespacehalf__float_1_1detail_1abe2ef7f721b2153143e677f5382fa823" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" kindref="member">islessgreater</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" kindref="member">functions::islessgreater</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2809" refid="namespacehalf__float_1_1detail_1ae711abc410125d0b904d2d086d8e831c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" kindref="member">islessgreater</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" kindref="member">functions::islessgreater</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2810" refid="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" kindref="member">islessgreater</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a61b362b9545dbc9319ac437b57963538" kindref="member">functions::islessgreater</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,typename<sp/>U&gt;<sp/>typename<sp/>enable&lt;bool,T,U&gt;::type<sp/>isunordered(T<sp/>x,<sp/>U<sp/>y)<sp/>{<sp/>return<sp/>functions::isunordered(x,<sp/>y);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818" refid="namespacehalf__float_1_1detail_1a9d7bd7653ebeced3088e8ab759456728" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" kindref="member">isunordered</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" kindref="member">functions::isunordered</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2819" refid="namespacehalf__float_1_1detail_1af94f1ec641bbd4dcf8528eeb01a2ac20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" kindref="member">isunordered</ref>(<ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" kindref="member">functions::isunordered</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2820" refid="namespacehalf__float_1_1detail_1ad479f10441ff35fd89038940623edf32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" kindref="member">isunordered</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="classhalf__float_1_1half" kindref="compound">half</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" kindref="member">functions::isunordered</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2821" refid="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" kindref="member">isunordered</ref>(<ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>x,<sp/><ref refid="structhalf__float_1_1detail_1_1expr" kindref="compound">expr</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a55803fd7a2045e188c2e23f312ef8390" kindref="member">functions::isunordered</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"></codeline>
<codeline lineno="2838" refid="namespacehalf__float_1_1detail_1a2d6a65bc1f34f19797f558a31deefe84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/>T<sp/><ref refid="namespacehalf__float_1_1detail_1aa886fe2fe51f0ead5eca42060889b331" kindref="member">half_cast</ref>(U<sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster&lt;T,U&gt;::cast</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2852" refid="namespacehalf__float_1_1detail_1aa886fe2fe51f0ead5eca42060889b331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,std::</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">_round_style<sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/>T<sp/><ref refid="namespacehalf__float_1_1detail_1aa886fe2fe51f0ead5eca42060889b331" kindref="member">half_cast</ref>(U<sp/>arg)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structhalf__float_1_1detail_1_1half__caster" kindref="compound">half_caster&lt;T,U,R&gt;::cast</ref>(arg);<sp/>}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator==;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator!=;</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator&lt;;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator&gt;;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator&lt;=;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator&gt;=;</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator+;</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator-;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator*;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator/;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator&lt;&lt;;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::operator&gt;&gt;;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a25d76d0f9f18298a1096716c0da7b6e5" kindref="member">detail::abs</ref>;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a70f276b86204e71756d873694cf1e2ca" kindref="member">detail::fabs</ref>;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a935147b16040f424271a380e274577ee" kindref="member">detail::fmod</ref>;</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab5ec4bbe576c7a623212d2a8e5fe4a30" kindref="member">detail::remainder</ref>;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aaeeae804024549bd70c30603126dbe3f" kindref="member">detail::remquo</ref>;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a280ee0782f6d036ec43848c549a36e21" kindref="member">detail::fma</ref>;</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a465b9d2dc41f1c10dd7ab9ce3dc2866f" kindref="member">detail::fmax</ref>;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9b147d2e64476167b7e9ee41ce14f36c" kindref="member">detail::fmin</ref>;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a09a51a6e291a38991305ecdc8721ed85" kindref="member">detail::fdim</ref>;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1af73da38f1f425ad36f7c90268d401397" kindref="member">detail::nanh</ref>;</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a22c1f76fc6a8dd8e469e54cabc4a7f42" kindref="member">detail::exp</ref>;</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7b50ad39eee026747f621d17eb982d47" kindref="member">detail::expm1</ref>;</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a6840d19bb305207e0bb01f47cb4fbe34" kindref="member">detail::exp2</ref>;</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aae4eda4733dc4a863b635473008d9bc0" kindref="member">detail::log</ref>;</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ad8d7b7769a3053dd74344ca0b122bb7b" kindref="member">detail::log10</ref>;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aaab6664f3cee88c7c0474396c8ba8219" kindref="member">detail::log1p</ref>;</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac864f8697a78ce420e343a9c5d37118f" kindref="member">detail::log2</ref>;</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1af714c124a18db9b79b703007b8d66162" kindref="member">detail::sqrt</ref>;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1accbe3a1c2cd180f62be82a1b8b784390" kindref="member">detail::cbrt</ref>;</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a380a4c5a399e3dc14fdf39c53277edc5" kindref="member">detail::hypot</ref>;</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1adf4df435c03de776c4ed53d5cf278e31" kindref="member">detail::pow</ref>;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a3c1cc34288f381ee6543c05034783c93" kindref="member">detail::sin</ref>;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a3932690572419d6a40ce760c897ac2cd" kindref="member">detail::cos</ref>;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a0173ced6e30b993f3c622c765ad53ea8" kindref="member">detail::tan</ref>;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ad93b1ac42816b8519b0653f58f327ba5" kindref="member">detail::asin</ref>;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a12f68bb5d9a3e88d46af47071ef4e259" kindref="member">detail::acos</ref>;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a70ee2b0c4152c8633270faa7b5c5158c" kindref="member">detail::atan</ref>;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a85003efe03f71ec6c069237612a2f84f" kindref="member">detail::atan2</ref>;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa56d689bec38bfbf9d86192209e705f7" kindref="member">detail::sinh</ref>;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4eca9c9999253f864e291defe7acc67b" kindref="member">detail::cosh</ref>;</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a06795625a388d617e44ea490903c8984" kindref="member">detail::tanh</ref>;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa5f5994b0842a116dc20f1603e1f4cbb" kindref="member">detail::asinh</ref>;</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ab449a1df5e728eea9892dec37c3d17b3" kindref="member">detail::acosh</ref>;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a50f52a411fa0758d9b30d1693a94abd5" kindref="member">detail::atanh</ref>;</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a91bfb5ecc731b688a5a866d1da4c6699" kindref="member">detail::erf</ref>;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ae03035153282371dbc8691ebadcc4fb0" kindref="member">detail::erfc</ref>;</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a7cf73acde909ef9f522b49f47e54843f" kindref="member">detail::lgamma</ref>;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a23014ba07b4073225072ecaf1159d106" kindref="member">detail::tgamma</ref>;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a86421b3112018437512cf26b915ef979" kindref="member">detail::ceil</ref>;</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ad34d698311b83780c4df38d8a8274756" kindref="member">detail::floor</ref>;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ad2f636a625c44e0e2e939cf4fcdd8980" kindref="member">detail::trunc</ref>;</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ae60c2e9b87102c08084c81d546113c91" kindref="member">detail::round</ref>;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abff729297b6ad9e7ad431f73d280b76d" kindref="member">detail::lround</ref>;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa18533c0035bfe9c4f143acfd2b47272" kindref="member">detail::nearbyint</ref>;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a25d6e6a301530bc1b48159f74cb5a0b4" kindref="member">detail::rint</ref>;</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aa2ee848c78f938434f485e75904bee45" kindref="member">detail::lrint</ref>;</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HALF_ENABLE_CPP11_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::llround;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detail::llrint;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac50a04fe4afdfae67b7aeb163fa92c72" kindref="member">detail::frexp</ref>;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a4540a29921074f33bc8be71904e12aef" kindref="member">detail::ldexp</ref>;</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a5ec08b7eaba0159f189fedeaea43946e" kindref="member">detail::modf</ref>;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1afa69fde98551e3537a77d267b1fc4187" kindref="member">detail::scalbn</ref>;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a924a0abc9d3ee7742200574a803a9bfb" kindref="member">detail::scalbln</ref>;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1acd3e6c3b07beae2997cef825944411fe" kindref="member">detail::ilogb</ref>;</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9963a6cdd7b45287f35438e07717eba2" kindref="member">detail::logb</ref>;</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1abaff6defbabab12cdfbb47ebf2d757a8" kindref="member">detail::nextafter</ref>;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aef57aa188ad54b4740b8c3aed38c3c36" kindref="member">detail::nexttoward</ref>;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1aca0e10e9b77c1231f05521e08d016a2d" kindref="member">detail::copysign</ref>;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a35cb57616468455d2e4e0b7e28fe97c0" kindref="member">detail::fpclassify</ref>;</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a976e0b18b3e84b7173457c28411de94a" kindref="member">detail::isfinite</ref>;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8963179a7b2e95bb126aea404732e2d3" kindref="member">detail::isinf</ref>;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac997496b119af340bfe047bff0583ee4" kindref="member">detail::isnan</ref>;</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a8cb72b0b732c9ad285220edbf2cdf303" kindref="member">detail::isnormal</ref>;</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a889e57734de1100a401c1f148d1e6354" kindref="member">detail::signbit</ref>;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac6634b70f77be4d111f27b801e5db865" kindref="member">detail::isgreater</ref>;</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a93796728de672120ebdab9519c3e33d5" kindref="member">detail::isgreaterequal</ref>;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a38cad803bcd84b49ef25e9181678284e" kindref="member">detail::isless</ref>;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1ac4890222c4073ad446d877c321b335d6" kindref="member">detail::islessequal</ref>;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a1c8c80126de214bbee6021d1d7ace69f" kindref="member">detail::islessgreater</ref>;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a9d7bd7653ebeced3088e8ab759456728" kindref="member">detail::isunordered</ref>;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehalf__float_1_1detail_1a2d6a65bc1f34f19797f558a31deefe84" kindref="member">detail::half_cast</ref>;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"></highlight></codeline>
<codeline lineno="2947" refid="namespacestd" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref></highlight></codeline>
<codeline lineno="2948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2952" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">numeric_limits&lt;<ref refid="namespacehalf__float" kindref="compound">half_float</ref>::half&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>numeric_limits&lt;float&gt;</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2956" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a259bf36384293f18c4fbd40011b75107" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_signed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2959" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a503b8e3d6c6828c85b21c17fda0e2bf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_exact<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight></codeline>
<codeline lineno="2962" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a77ce83e1744e781334a6c7f68e2b7e38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_modulo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2965" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1acdf5541f7eda3f27d4537c1e4c4528ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_iec559<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight></codeline>
<codeline lineno="2968" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a808d88d6c6782112d8c8ce51ee77c4dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_infinity<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight></codeline>
<codeline lineno="2971" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a83611ff822d78d69ed6fd58c4ba48c33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_quiet_NaN<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a120d8b8b5e5c5d5ba0d7d3802859ee4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/>float_denorm_style<sp/>has_denorm<sp/>=<sp/>denorm_present;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2981" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a17a70ce9e02f8b890a0ebf5eb04c385b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/>float_round_style<sp/>round_style<sp/>=<sp/>(std::numeric_limits&lt;float&gt;::round_style==</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>half_float::half::round_style)<sp/>?<sp/>half_float::half::round_style<sp/>:<sp/>round_indeterminate;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight></codeline>
<codeline lineno="2985" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a25dd523e9495b75166757d5f73197068" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>digits<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight></codeline>
<codeline lineno="2988" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1adb8ec10ec96a1c60db49b40554fb13ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>digits10<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2991" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a07d190feb781f88a0d6190afd1d5279a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_digits10<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight></codeline>
<codeline lineno="2994" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1af8a3c3c34ae601c519a4e5be73b81998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radix<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2997" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1ae545fa9d20d845ae1bf55bb6ce6b7e1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_exponent<sp/>=<sp/>-13;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"></highlight></codeline>
<codeline lineno="3000" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1ac8e5727691c06e4ee4fc124e7567edc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_exponent10<sp/>=<sp/>-4;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a41f49d6fa628325afbe7870b0ce945c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_exponent<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1aed5c9a3c44d6e9e6949926674648d7ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1a5df92c245e5d4e45d35fad7b6de73354" kindref="member">HALF_CONSTEXPR_CONST</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_exponent10<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight></codeline>
<codeline lineno="3009" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a52dd448e009c0a1a7e463c773cbd8f9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/><ref refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a52dd448e009c0a1a7e463c773cbd8f9e" kindref="member">min</ref>()<sp/><ref refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" kindref="member">HALF_NOTHROW</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">half_float::detail::binary</ref>,<sp/>0x0400);<sp/>}</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"></highlight></codeline>
<codeline lineno="3012" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1abe8e9622711ffafb029c35b349d18af4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/><ref refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1abe8e9622711ffafb029c35b349d18af4" kindref="member">lowest</ref>()<sp/><ref refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" kindref="member">HALF_NOTHROW</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">half_float::detail::binary</ref>,<sp/>0xFBFF);<sp/>}</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a18dff56a912af3306b967a49a7a1a859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/><ref refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a18dff56a912af3306b967a49a7a1a859" kindref="member">max</ref>()<sp/><ref refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" kindref="member">HALF_NOTHROW</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">half_float::detail::binary</ref>,<sp/>0x7BFF);<sp/>}</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1ab0a429948d6c6be91abbd36f4d73eb08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/><ref refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1ab0a429948d6c6be91abbd36f4d73eb08" kindref="member">epsilon</ref>()<sp/><ref refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" kindref="member">HALF_NOTHROW</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">half_float::detail::binary</ref>,<sp/>0x1400);<sp/>}</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a93220b59e5afbdb473c87f7046a95b06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/><ref refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a93220b59e5afbdb473c87f7046a95b06" kindref="member">round_error</ref>()<sp/><ref refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" kindref="member">HALF_NOTHROW</ref></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">half_float::detail::binary</ref>,<sp/>(round_style==std::round_to_nearest)<sp/>?<sp/>0x3800<sp/>:<sp/>0x3C00);<sp/>}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3025" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1aafcca31b982e48b928c1e6cc318f6e6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/><ref refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1aafcca31b982e48b928c1e6cc318f6e6f" kindref="member">infinity</ref>()<sp/><ref refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" kindref="member">HALF_NOTHROW</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">half_float::detail::binary</ref>,<sp/>0x7C00);<sp/>}</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight></codeline>
<codeline lineno="3028" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a4583df9bd2b496cb47e7c0fa7d1fe7eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/><ref refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1a4583df9bd2b496cb47e7c0fa7d1fe7eb" kindref="member">quiet_NaN</ref>()<sp/><ref refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" kindref="member">HALF_NOTHROW</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">half_float::detail::binary</ref>,<sp/>0x7FFF);<sp/>}</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1ae0451fbc23a2d62bfd9f6bbf7956b4f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/><ref refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1ae0451fbc23a2d62bfd9f6bbf7956b4f3" kindref="member">signaling_NaN</ref>()<sp/><ref refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" kindref="member">HALF_NOTHROW</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">half_float::detail::binary</ref>,<sp/>0x7DFF);<sp/>}</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight></codeline>
<codeline lineno="3034" refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1ae6c0f9e198bc76d3edd0565e11c63664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="half_8hpp_1ace3116a3e2cd66dd15780b92060987c7" kindref="member">HALF_CONSTEXPR</ref><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/><ref refid="classstd_1_1numeric__limits_3_01half__float_1_1half_01_4_1ae6c0f9e198bc76d3edd0565e11c63664" kindref="member">denorm_min</ref>()<sp/><ref refid="half_8hpp_1a76353b496550acb4b523ad263d09908a" kindref="member">HALF_NOTHROW</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref>(<ref refid="namespacehalf__float_1_1detail_1a083e9a0ced4c4a5495ac89dd753dd215" kindref="member">half_float::detail::binary</ref>,<sp/>0x0001);<sp/>}</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HALF_ENABLE_CPP11_HASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hash&lt;half_float::half&gt;<sp/></highlight><highlight class="comment">//:<sp/>unary_function&lt;half_float::half,size_t&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classhalf__float_1_1half" kindref="compound">half_float::half</ref><sp/>argument_type;</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result_type;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_type<sp/>operator()(argument_type<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3052"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash&lt;half_float::detail::uint16&gt;()(static_cast&lt;unsigned&gt;(arg.data_)&amp;-(arg.data_!=0x8000));<sp/>}</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>HALF_CONSTEXPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>HALF_CONSTEXPR_CONST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>HALF_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>HALF_NOTHROW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HALF_POP_WARNINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>HALF_POP_WARNINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/external/half.hpp"/>
  </compounddef>
</doxygen>

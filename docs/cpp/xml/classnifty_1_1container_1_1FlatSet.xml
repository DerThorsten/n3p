<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classnifty_1_1container_1_1FlatSet" kind="class" language="C++" prot="public">
    <compoundname>nifty::container::FlatSet</compoundname>
    <includes refid="flat__set_8hxx" local="no">flat_set.hxx</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Key</declname>
        <defname>Key</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Comparison</declname>
        <defname>Comparison</defname>
        <defval>std::less&lt;Key&gt;</defval>
      </param>
      <param>
        <type>class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval>std::allocator&lt;Key&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1ad8389ff277d005a7314e33f5db5dc225" prot="private" static="no">
        <type>std::vector&lt; Key, Allocator &gt;</type>
        <definition>typedef std::vector&lt;Key, Allocator&gt; nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::Vector</definition>
        <argsstring></argsstring>
        <name>Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="20" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" prot="public" static="no">
        <type>Key</type>
        <definition>typedef Key nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::key_type</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="23" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a2366c665ec49d585ff8a77362468d82d" prot="public" static="no">
        <type>Key</type>
        <definition>typedef Key nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="24" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1ab88802e81d77a08a7a74e8ba9d2083c7" prot="public" static="no">
        <type>Comparison</type>
        <definition>typedef Comparison nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::key_compare</definition>
        <argsstring></argsstring>
        <name>key_compare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="25" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a4ec0fabbb2d2f25b985c12581c576384" prot="public" static="no">
        <type>Comparison</type>
        <definition>typedef Comparison nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::value_compare</definition>
        <argsstring></argsstring>
        <name>value_compare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="26" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1aafc00d7d957c81f01ee8cd5dcabb4c78" prot="public" static="no">
        <type>Allocator</type>
        <definition>typedef Allocator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::allocator_type</definition>
        <argsstring></argsstring>
        <name>allocator_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="27" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a9fc6932b53d6a86ec15830e31805f8d4" prot="public" static="no">
        <type>Allocator::const_reference</type>
        <definition>typedef Allocator::const_reference nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="29" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" prot="public" static="no">
        <type>Vector::iterator</type>
        <definition>typedef Vector::iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="30" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" prot="public" static="no">
        <type>Vector::const_iterator</type>
        <definition>typedef Vector::const_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="31" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a5ad537835e3b8911ac1beed1a95d3ac2" prot="public" static="no">
        <type>Vector::reverse_iterator</type>
        <definition>typedef Vector::reverse_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="32" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1ab7858d2e6eeeb311e21988d9b4a5b802" prot="public" static="no">
        <type>Vector::const_reverse_iterator</type>
        <definition>typedef Vector::const_reverse_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="33" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a06ddeba4c1be37279497ed698dfeb812" prot="public" static="no">
        <type>Vector::size_type</type>
        <definition>typedef Vector::size_type nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="34" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a84e65d3e380dc5d376c9176780333700" prot="public" static="no">
        <type>Vector::difference_type</type>
        <definition>typedef Vector::difference_type nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="35" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnifty_1_1container_1_1FlatSet_1a87a82a407ecc181303e62a86b3132e38" prot="public" static="no">
        <type>Vector::const_pointer</type>
        <definition>typedef Vector::const_pointer nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="36" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnifty_1_1container_1_1FlatSet_1a43e2feb8a26af0a858fa9efbfc41a831" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Key &gt;</type>
        <definition>std::vector&lt;Key&gt; nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::vector_</definition>
        <argsstring></argsstring>
        <name>vector_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="90" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnifty_1_1container_1_1FlatSet_1a7038414c3b3bc641647a0c3ecdfc7679" prot="private" static="no" mutable="no">
        <type>Comparison</type>
        <definition>Comparison nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::compare_</definition>
        <argsstring></argsstring>
        <name>compare_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="91" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a8fdc9c4a6bf11be6e7be0d81d450ae47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::FlatSet</definition>
        <argsstring>(const std::size_t, const Comparison &amp;=Comparison(), const Allocator &amp;=Allocator())</argsstring>
        <name>FlatSet</name>
        <param>
          <type>const std::size_t</type>
          <defname>reserveSize</defname>
        </param>
        <param>
          <type>const Comparison &amp;</type>
          <defname>comparison</defname>
          <defval>Comparison()</defval>
        </param>
        <param>
          <type>const Allocator &amp;</type>
          <defname>allocator</defname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="38" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="106" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a1f36a0b023633f58bf90e0660f0bc16c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::FlatSet</definition>
        <argsstring>(const Comparison &amp;=Comparison(), const Allocator &amp;=Allocator())</argsstring>
        <name>FlatSet</name>
        <param>
          <type>const Comparison &amp;</type>
          <defname>comparison</defname>
          <defval>Comparison()</defval>
        </param>
        <param>
          <type>const Allocator &amp;</type>
          <defname>allocator</defname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="40" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="96" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a4ac0179c196a52ca4cbe2c82b5b7e4fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::FlatSet</definition>
        <argsstring>(Iterator, Iterator, const Comparison &amp;=Comparison(), const Allocator &amp;=Allocator())</argsstring>
        <name>FlatSet</name>
        <param>
          <type>Iterator</type>
          <defname>beginInput</defname>
        </param>
        <param>
          <type>Iterator</type>
          <defname>endInput</defname>
        </param>
        <param>
          <type>const Comparison &amp;</type>
          <defname>comparison</defname>
          <defval>Comparison()</defval>
        </param>
        <param>
          <type>const Allocator &amp;</type>
          <defname>allocator</defname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="43" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="120" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1ab27d508690712397b377227cfd8341fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a2366c665ec49d585ff8a77362468d82d" kindref="member">value_type</ref> &amp;</type>
        <definition>const FlatSet&lt; Key, Comparison, Allocator &gt;::value_type &amp; nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::operator[]</definition>
        <argsstring>(const size_type) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a06ddeba4c1be37279497ed698dfeb812" kindref="member">size_type</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="46" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a08126138beb50522a6ff9e16f242c08e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">const_iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::const_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="48" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1aecdce54d4d18b3b7bfc4605aa9486883" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">const_iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::const_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="49" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a2965a5b139947cf36bb90d594d3cb6c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="50" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a93ce7a3126ef6e45f1d82cd71c335741" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="51" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a612b58eb7cf9c93424ead2af4ec1b8be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1ab7858d2e6eeeb311e21988d9b4a5b802" kindref="member">const_reverse_iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::const_reverse_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::rbegin</definition>
        <argsstring>() const</argsstring>
        <name>rbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="53" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1adad37eee25033eb4210619e61808229f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1ab7858d2e6eeeb311e21988d9b4a5b802" kindref="member">const_reverse_iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::const_reverse_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::rend</definition>
        <argsstring>() const</argsstring>
        <name>rend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="54" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a82523673d9285f43e73e90b37b00d105" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a5ad537835e3b8911ac1beed1a95d3ac2" kindref="member">reverse_iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::reverse_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="55" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1ae40f27aa1a23e148de77b596825cb205" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a5ad537835e3b8911ac1beed1a95d3ac2" kindref="member">reverse_iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::reverse_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="56" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1ad12a5bbeb3a6a3c29ab173fb0f9572c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">const_iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::const_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::find</definition>
        <argsstring>(const key_type &amp;) const</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="58" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="301" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1ac78650ca9a84bc0a8324a9aa03f626d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::find</definition>
        <argsstring>(const key_type &amp;)</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="59" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="313" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a543bb831ef2dd97b6906aabc34d606ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="61" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a6d265f3f83e18a1342a172acaf57a15c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a06ddeba4c1be37279497ed698dfeb812" kindref="member">size_type</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::size_type nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="62" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a9f76cdc060ea18e60d7aceb506e5eece" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a06ddeba4c1be37279497ed698dfeb812" kindref="member">size_type</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::size_type nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::max_size</definition>
        <argsstring>() const</argsstring>
        <name>max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="63" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a3e59cfe8b3d5eb53750ef761cce7b652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">const_iterator</ref>, bool &gt;</type>
        <definition>std::pair&lt;const_iterator, bool&gt; nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::insert</definition>
        <argsstring>(const value_type &amp;)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a2366c665ec49d585ff8a77362468d82d" kindref="member">value_type</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a2681201810070decb9eeb7f5beb47f0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::insert</definition>
        <argsstring>(Iterator, Iterator)</argsstring>
        <name>insert</name>
        <param>
          <type>Iterator</type>
          <defname>first</defname>
        </param>
        <param>
          <type>Iterator</type>
          <defname>last</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="67" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="226" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a603c16d2c24bd8b6190f688011dea171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">const_iterator</ref></type>
        <definition>const_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::insert</definition>
        <argsstring>(iterator, const value_type &amp;)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref></type>
        </param>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a2366c665ec49d585ff8a77362468d82d" kindref="member">value_type</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1aaccabadd6ed0c654095a2c0b03f0a9f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::erase</definition>
        <argsstring>(iterator position)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1af6e5ab750891cff2f2accc1b2b5f075e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a06ddeba4c1be37279497ed698dfeb812" kindref="member">size_type</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::size_type nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::erase</definition>
        <argsstring>(const key_type &amp;)</argsstring>
        <name>erase</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="71" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="261" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1ac4e7ad9474d0247ae5c0369ea4cf1a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::erase</definition>
        <argsstring>(iterator, iterator)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref></type>
        </param>
        <param>
          <type><ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a8ff66c7635048e4e14dd70253fd1620b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="73" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="283" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1ac7e6cc8196c095c0416ee27873ccc665" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a06ddeba4c1be37279497ed698dfeb812" kindref="member">size_type</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::size_type nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::count</definition>
        <argsstring>(const key_type &amp;) const</argsstring>
        <name>count</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="75" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="325" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1ae598feab5426ef294dee226d89a40672" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1ab88802e81d77a08a7a74e8ba9d2083c7" kindref="member">key_compare</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::key_compare nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::key_comp</definition>
        <argsstring>() const</argsstring>
        <name>key_comp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="76" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="289" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1aebece9a30a7237adb9b8f95ad4442e91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a4ec0fabbb2d2f25b985c12581c576384" kindref="member">value_compare</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::value_compare nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::value_comp</definition>
        <argsstring>() const</argsstring>
        <name>value_comp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="77" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a19bd4a6c2a0f0de6dca31cf5a62331cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">const_iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::const_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::lower_bound</definition>
        <argsstring>(const key_type &amp;) const</argsstring>
        <name>lower_bound</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="78" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a0ac07324feb622244c7f91bcf153af87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">const_iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::const_iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::upper_bound</definition>
        <argsstring>(const key_type &amp;) const</argsstring>
        <name>upper_bound</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="79" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="354" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a824de5a2d87a1d938af264a8e06c4a2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::lower_bound</definition>
        <argsstring>(const key_type &amp;)</argsstring>
        <name>lower_bound</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="80" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="346" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1ad29a9db87f15925db9d5569482720b5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::iterator nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::upper_bound</definition>
        <argsstring>(const key_type &amp;)</argsstring>
        <name>upper_bound</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="81" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="362" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a1ab96837744fc952be75365c00c815e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">const_iterator</ref>, <ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">const_iterator</ref> &gt;</type>
        <definition>std::pair&lt; typename FlatSet&lt; Key, Comparison, Allocator &gt;::const_iterator, typename FlatSet&lt; Key, Comparison, Allocator &gt;::const_iterator &gt; nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::equal_range</definition>
        <argsstring>(const key_type &amp;) const</argsstring>
        <name>equal_range</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="82" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="370" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a777b777d0e79a499a72661e62fabc903" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref>, <ref refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" kindref="member">iterator</ref> &gt;</type>
        <definition>std::pair&lt; typename FlatSet&lt; Key, Comparison, Allocator &gt;::iterator, typename FlatSet&lt; Key, Comparison, Allocator &gt;::iterator &gt; nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::equal_range</definition>
        <argsstring>(const key_type &amp;)</argsstring>
        <name>equal_range</name>
        <param>
          <type>const <ref refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" kindref="member">key_type</ref> &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="83" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="378" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classnifty_1_1container_1_1FlatSet_1a1e302c2990cee7d044e0793fdb0dcf7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnifty_1_1container_1_1FlatSet_1aafc00d7d957c81f01ee8cd5dcabb4c78" kindref="member">allocator_type</ref></type>
        <definition>FlatSet&lt; Key, Comparison, Allocator &gt;::allocator_type nifty::container::FlatSet&lt; Key, Comparison, Allocator &gt;::get_allocator</definition>
        <argsstring>() const</argsstring>
        <name>get_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="85" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="386" bodyend="388"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" line="18" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/container/flat_set.hxx" bodystart="18" bodyend="92"/>
    <listofallmembers>
      <member refid="classnifty_1_1container_1_1FlatSet_1aafc00d7d957c81f01ee8cd5dcabb4c78" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>allocator_type</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a08126138beb50522a6ff9e16f242c08e" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>begin</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a2965a5b139947cf36bb90d594d3cb6c1" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>begin</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a8ff66c7635048e4e14dd70253fd1620b" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>clear</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a7038414c3b3bc641647a0c3ecdfc7679" prot="private" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>compare_</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>const_iterator</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a87a82a407ecc181303e62a86b3132e38" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>const_pointer</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a9fc6932b53d6a86ec15830e31805f8d4" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>const_reference</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ab7858d2e6eeeb311e21988d9b4a5b802" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>const_reverse_iterator</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ac7e6cc8196c095c0416ee27873ccc665" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>count</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a84e65d3e380dc5d376c9176780333700" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>difference_type</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a543bb831ef2dd97b6906aabc34d606ac" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>empty</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1aecdce54d4d18b3b7bfc4605aa9486883" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>end</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a93ce7a3126ef6e45f1d82cd71c335741" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>end</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a1ab96837744fc952be75365c00c815e0" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>equal_range</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a777b777d0e79a499a72661e62fabc903" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>equal_range</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1aaccabadd6ed0c654095a2c0b03f0a9f3" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>erase</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1af6e5ab750891cff2f2accc1b2b5f075e" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>erase</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ac4e7ad9474d0247ae5c0369ea4cf1a07" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>erase</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ad12a5bbeb3a6a3c29ab173fb0f9572c9" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>find</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ac78650ca9a84bc0a8324a9aa03f626d4" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>find</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a8fdc9c4a6bf11be6e7be0d81d450ae47" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>FlatSet</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a1f36a0b023633f58bf90e0660f0bc16c" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>FlatSet</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a4ac0179c196a52ca4cbe2c82b5b7e4fa" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>FlatSet</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a1e302c2990cee7d044e0793fdb0dcf7f" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>get_allocator</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a3e59cfe8b3d5eb53750ef761cce7b652" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>insert</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a2681201810070decb9eeb7f5beb47f0d" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>insert</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a603c16d2c24bd8b6190f688011dea171" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>insert</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a9c7fd20cd6b1878ccb8a7e068072c795" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>iterator</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ae598feab5426ef294dee226d89a40672" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>key_comp</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ab88802e81d77a08a7a74e8ba9d2083c7" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>key_compare</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a0101a4574052389646be8d9bf092a949" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>key_type</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a19bd4a6c2a0f0de6dca31cf5a62331cb" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>lower_bound</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a824de5a2d87a1d938af264a8e06c4a2a" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>lower_bound</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a9f76cdc060ea18e60d7aceb506e5eece" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>max_size</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ab27d508690712397b377227cfd8341fc" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>operator[]</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a612b58eb7cf9c93424ead2af4ec1b8be" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>rbegin</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a82523673d9285f43e73e90b37b00d105" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>rbegin</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1adad37eee25033eb4210619e61808229f" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>rend</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ae40f27aa1a23e148de77b596825cb205" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>rend</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a5ad537835e3b8911ac1beed1a95d3ac2" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>reverse_iterator</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a6d265f3f83e18a1342a172acaf57a15c" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>size</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a06ddeba4c1be37279497ed698dfeb812" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>size_type</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a0ac07324feb622244c7f91bcf153af87" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>upper_bound</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ad29a9db87f15925db9d5569482720b5b" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>upper_bound</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1aebece9a30a7237adb9b8f95ad4442e91" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>value_comp</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a4ec0fabbb2d2f25b985c12581c576384" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>value_compare</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a2366c665ec49d585ff8a77362468d82d" prot="public" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>value_type</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1ad8389ff277d005a7314e33f5db5dc225" prot="private" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>Vector</name></member>
      <member refid="classnifty_1_1container_1_1FlatSet_1a43e2feb8a26af0a858fa9efbfc41a831" prot="private" virt="non-virtual"><scope>nifty::container::FlatSet</scope><name>vector_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

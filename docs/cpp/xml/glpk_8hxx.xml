<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="glpk_8hxx" kind="file" language="C++">
    <compoundname>glpk.hxx</compoundname>
    <includes local="no">limits</includes>
    <includes local="no">string</includes>
    <includes local="no">glpk.h</includes>
    <includes refid="exceptions_8hxx" local="yes">nifty/exceptions/exceptions.hxx</includes>
    <includes refid="ilp__backend_8hxx" local="yes">nifty/ilp_backend/ilp_backend.hxx</includes>
    <incdepgraph>
      <node id="11328">
        <label>limits</label>
      </node>
      <node id="11332">
        <label>stdexcept</label>
      </node>
      <node id="11329">
        <label>string</label>
      </node>
      <node id="11331">
        <label>nifty/exceptions/exceptions.hxx</label>
        <link refid="exceptions_8hxx"/>
        <childnode refid="11332" relation="include">
        </childnode>
      </node>
      <node id="11330">
        <label>glpk.h</label>
      </node>
      <node id="11327">
        <label>/home/tbeier/src/nifty/include/nifty/ilp_backend/glpk.hxx</label>
        <link refid="glpk.hxx"/>
        <childnode refid="11328" relation="include">
        </childnode>
        <childnode refid="11329" relation="include">
        </childnode>
        <childnode refid="11330" relation="include">
        </childnode>
        <childnode refid="11331" relation="include">
        </childnode>
        <childnode refid="11333" relation="include">
        </childnode>
      </node>
      <node id="11333">
        <label>nifty/ilp_backend/ilp_backend.hxx</label>
        <link refid="ilp__backend_8hxx"/>
        <childnode refid="11328" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classnifty_1_1ilp__backend_1_1Glpk" prot="public">nifty::ilp_backend::Glpk</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1ilp__backend">nifty::ilp_backend</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glpk.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exceptions_8hxx" kindref="compound">nifty/exceptions/exceptions.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ilp__backend_8hxx" kindref="compound">nifty/ilp_backend/ilp_backend.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ilp_backend{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classnifty_1_1ilp__backend_1_1Glpk" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1ilp__backend_1_1Glpk" kindref="compound">Glpk</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classnifty_1_1ilp__backend_1_1Glpk_1a8f3191eb733e6a2f08f82adceae32365" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1ilp__backend_1_1IlpBackendSettings" kindref="compound">IlpBackendSettings</ref><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a8f3191eb733e6a2f08f82adceae32365" kindref="member">SettingsType</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a31b71a008ab6c3c16e60a17fbfc8822d" kindref="member">Glpk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SettingsType<sp/>&amp;<sp/>settings<sp/>=<sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a8f3191eb733e6a2f08f82adceae32365" kindref="member">SettingsType</ref>());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a9696f83fd9a1688bcdf5a05b84c03976" kindref="member">~Glpk</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a82a16f1598798e5935d4b56a692d3b5a" kindref="member">initModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a7d71ee633ecc892e6d2e904a30604394" kindref="member">setStart</ref>(Iterator);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VariableIndexIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CoefficientIterator&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a756aac8075dfd7957e0b90e27f1b141d" kindref="member">addConstraint</ref>(VariableIndexIterator,<sp/>VariableIndexIterator,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoefficientIterator,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a2e66c98281cb549ee477d58fbd3b8374" kindref="member">optimize</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a37396f440ddcda1e15b6486ed48642e1" kindref="member">label</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classnifty_1_1ilp__backend_1_1Glpk_1ad86a2c29a1b0c73a47c79d2d5c0ff07d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1ad86a2c29a1b0c73a47c79d2d5c0ff07d" kindref="member">name</ref>(){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;Glpk&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJECTIVE_ITERATOR&gt;</highlight></codeline>
<codeline lineno="38" refid="classnifty_1_1ilp__backend_1_1Glpk_1a31c379a5553eb4fd87a56e71ac589a80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a31c379a5553eb4fd87a56e71ac589a80" kindref="member">changeObjective</ref>(</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OBJECTIVE_ITERATOR<sp/>objectiveIter</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1exceptions_1_1WeightsChangedNotSupported" kindref="compound">exceptions::WeightsChangedNotSupported</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>SettingsType<sp/>settings_;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nVariables_;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>glp_prob<sp/>*<sp/>lp;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addedConstraints_;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classnifty_1_1ilp__backend_1_1Glpk_1a31b71a008ab6c3c16e60a17fbfc8822d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a31b71a008ab6c3c16e60a17fbfc8822d" kindref="member">Glpk::Glpk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SettingsType<sp/>&amp;<sp/>settings)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">:<sp/><sp/><sp/>settings_(settings),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>nVariables_(0),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>lp(nullptr),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>addedConstraints_(0)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;constructor<sp/>\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classnifty_1_1ilp__backend_1_1Glpk_1a9696f83fd9a1688bcdf5a05b84c03976" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a9696f83fd9a1688bcdf5a05b84c03976" kindref="member">Glpk::~Glpk</ref>()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lp<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glp_delete_prob(lp);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glp_free_env();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classnifty_1_1ilp__backend_1_1Glpk_1a82a16f1598798e5935d4b56a692d3b5a" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a82a16f1598798e5935d4b56a692d3b5a" kindref="member">Glpk::initModel</ref>(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfVariables,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>coefficients</highlight></codeline>
<codeline lineno="77"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;init<sp/>model\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>nVariables_<sp/>=<sp/>numberOfVariables;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lp<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glp_delete_prob(lp);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glp_free_env();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>lp<sp/>=<sp/>glp_create_prob();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;add<sp/>cols\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>glp_add_cols(lp,<sp/>nVariables_);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;set<sp/>coeffs\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nVariables_;<sp/>++i){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glp_set_obj_coef(lp,<sp/>i+1,<sp/>coefficients[i]);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glp_set_col_bnds(lp,<sp/>i+1,<sp/>GLP_DB,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glp_set_col_kind(lp,<sp/>i+1,<sp/>GLP_IV);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>glp_term_out(settings_.<ref refid="structnifty_1_1ilp__backend_1_1IlpBackendSettings_1aecafa6adf4695088d0396f232bbe88ba" kindref="member">verbosity</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classnifty_1_1ilp__backend_1_1Glpk_1a2e66c98281cb549ee477d58fbd3b8374" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a2e66c98281cb549ee477d58fbd3b8374" kindref="member">Glpk::optimize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glp_simplex(lp,<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>glp_iocp<sp/>parm;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>glp_init_iocp(&amp;parm);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1ilp__backend_1_1IlpBackendSettings_1a8eed72b9ddbbc94a89197dde0d76d144" kindref="member">relativeGap</ref><sp/>&gt;=<sp/>0.0){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm.mip_gap<sp/>=<sp/>settings_.<ref refid="structnifty_1_1ilp__backend_1_1IlpBackendSettings_1a8bc98f418844336847d868dd88e620f2" kindref="member">absoluteGap</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1ilp__backend_1_1IlpBackendSettings_1a8eed72b9ddbbc94a89197dde0d76d144" kindref="member">relativeGap</ref><sp/>&gt;=<sp/>0.0){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm.mip_gap<sp/>=<sp/>settings_.<ref refid="structnifty_1_1ilp__backend_1_1IlpBackendSettings_1a8bc98f418844336847d868dd88e620f2" kindref="member">absoluteGap</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings_.<ref refid="structnifty_1_1ilp__backend_1_1IlpBackendSettings_1af1e71695a4bd0dd0921ba2db7c0208c6" kindref="member">preSolver</ref><sp/>!=<sp/><ref refid="structnifty_1_1ilp__backend_1_1IlpBackendSettings_1ad16c71cc049dcb37c07f2abdda69dab4ad0065467805a6fba8d8d9e7293e4bfc2" kindref="member">IlpBackendSettings::PRE_SOLVER_NONE</ref>){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm.presolve<sp/>=<sp/>GLP_ON;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm.binarize<sp/>=<sp/>GLP_ON;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>glp_intopt(lp,<sp/>&amp;parm);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classnifty_1_1ilp__backend_1_1Glpk_1a37396f440ddcda1e15b6486ed48642e1" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a37396f440ddcda1e15b6486ed48642e1" kindref="member">Glpk::label</ref>(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>variableIndex</highlight></codeline>
<codeline lineno="127"><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;get<sp/>label\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>glp_mip_col_val<sp/><sp/>(lp,<sp/>variableIndex+1);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VariableIndexIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CoefficientIterator&gt;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classnifty_1_1ilp__backend_1_1Glpk_1a756aac8075dfd7957e0b90e27f1b141d" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a756aac8075dfd7957e0b90e27f1b141d" kindref="member">Glpk::addConstraint</ref>(</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>VariableIndexIterator<sp/>viBegin,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>VariableIndexIterator<sp/>viEnd,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>CoefficientIterator<sp/>coefficient,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerBound,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperBound</highlight></codeline>
<codeline lineno="143"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;add<sp/>constraint<sp/>&quot;&lt;&lt;<sp/>addedConstraints_&lt;&lt;&quot;<sp/>\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>glp_add_rows(lp<sp/>,1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>glp_set_row_bnds(lp,<sp/>addedConstraints_+1,<sp/>GLP_DB,<sp/>lowerBound,<sp/>upperBound);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;nvar<sp/>total<sp/>&quot;&lt;&lt;nVariables_&lt;&lt;&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nVar<sp/>=<sp/>std::distance(viBegin,<sp/>viEnd);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;var<sp/>in<sp/>const<sp/>&quot;&lt;&lt;nVar&lt;&lt;&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>indices(nVar+1);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>coeffs(nVar+1);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//indices.assign(viBegin,<sp/>viEnd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nVar;<sp/>++i){</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[i+1]<sp/>=<sp/>viBegin[i]+1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffs[i+1]<sp/>=<sp/>coefficient[i];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;<sp/>&quot;&lt;&lt;indices[i+1]&lt;&lt;&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::vector&lt;double&gt;<sp/>coeffs(coefficient,coefficient+indices.size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>glp_set_mat_row(lp,<sp/>addedConstraints_+1,nVar,<sp/>indices.data(),<sp/>coeffs.data());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>++addedConstraints_;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classnifty_1_1ilp__backend_1_1Glpk_1a7d71ee633ecc892e6d2e904a30604394" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1ilp__backend_1_1Glpk_1a7d71ee633ecc892e6d2e904a30604394" kindref="member">Glpk::setStart</ref>(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator<sp/>valueIterator</highlight></codeline>
<codeline lineno="174"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ilp_backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/ilp_backend/glpk.hxx"/>
  </compounddef>
</doxygen>

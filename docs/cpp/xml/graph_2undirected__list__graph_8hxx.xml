<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="graph_2undirected__list__graph_8hxx" kind="file" language="C++">
    <compoundname>undirected_list_graph.hxx</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="no">boost/version.hpp</includes>
    <includes local="no">boost/container/flat_set.hpp</includes>
    <includes local="no">boost/iterator/counting_iterator.hpp</includes>
    <includes refid="flat__set_8hxx" local="yes">nifty/container/flat_set.hxx</includes>
    <includes refid="runtime__check_8hxx" local="yes">nifty/tools/runtime_check.hxx</includes>
    <includes refid="undirected__graph__base_8hxx" local="yes">nifty/graph/undirected_graph_base.hxx</includes>
    <includes refid="adjacency_8hxx" local="yes">nifty/graph/detail/adjacency.hxx</includes>
    <includes refid="graph__tags_8hxx" local="yes">nifty/graph/graph_tags.hxx</includes>
    <includes refid="threadpool_8hxx" local="yes">nifty/parallel/threadpool.hxx</includes>
    <includedby refid="cc__fusion__move__impl_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/common/cc_fusion_move_impl.hxx</includedby>
    <includedby refid="lifted__multicut_2fusion__move_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/fusion_move.hxx</includedby>
    <includedby refid="graph_2optimization_2lifted__multicut_2lifted__multicut__objective_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/lifted_multicut_objective.hxx</includedby>
    <includedby refid="mincut__cc__fusion__move_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/mincut/mincut_cc_fusion_move.hxx</includedby>
    <includedby refid="cgc_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/cgc.hxx</includedby>
    <includedby refid="multicut_2fusion__move_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/fusion_move.hxx</includedby>
    <includedby refid="multicut__decomposer_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/multicut_decomposer.hxx</includedby>
    <includedby refid="compute__grid__rag_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/rag/detail_rag/compute_grid_rag.hxx</includedby>
    <includedby refid="compute__grid__rag__hdf5_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/rag/detail_rag/compute_grid_rag_hdf5.hxx</includedby>
    <includedby refid="grid__rag_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag.hxx</includedby>
    <includedby refid="python_2graph_2undirected__list__graph_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/python/graph/undirected_list_graph.hxx</includedby>
    <incdepgraph>
      <node id="11049">
        <label>atomic</label>
      </node>
      <node id="11045">
        <label>nifty/tools/const_iterator_range.hxx</label>
        <link refid="const__iterator__range_8hxx"/>
      </node>
      <node id="11023">
        <label>functional</label>
      </node>
      <node id="11052">
        <label>queue</label>
      </node>
      <node id="11018">
        <label>boost/version.hpp</label>
      </node>
      <node id="11029">
        <label>limits</label>
      </node>
      <node id="11040">
        <label>iterator</label>
      </node>
      <node id="11026">
        <label>cstdint</label>
      </node>
      <node id="11030">
        <label>cmath</label>
      </node>
      <node id="11037">
        <label>cassert</label>
      </node>
      <node id="11032">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="11027">
        <label>stdexcept</label>
      </node>
      <node id="11044">
        <label>numeric</label>
      </node>
      <node id="11031">
        <label>nifty/graph/undirected_graph_base.hxx</label>
        <link refid="undirected__graph__base_8hxx"/>
        <childnode refid="11032" relation="include">
        </childnode>
        <childnode refid="11033" relation="include">
        </childnode>
        <childnode refid="11034" relation="include">
        </childnode>
        <childnode refid="11045" relation="include">
        </childnode>
      </node>
      <node id="11046">
        <label>nifty/graph/detail/adjacency.hxx</label>
        <link refid="adjacency_8hxx"/>
      </node>
      <node id="11038">
        <label>string</label>
      </node>
      <node id="11020">
        <label>boost/iterator/counting_iterator.hpp</label>
      </node>
      <node id="11017">
        <label>map</label>
      </node>
      <node id="11036">
        <label>nifty/marray/andres/marray.hxx</label>
        <link refid="andres_2marray_8hxx"/>
        <childnode refid="11037" relation="include">
        </childnode>
        <childnode refid="11015" relation="include">
        </childnode>
        <childnode refid="11027" relation="include">
        </childnode>
        <childnode refid="11029" relation="include">
        </childnode>
        <childnode refid="11038" relation="include">
        </childnode>
        <childnode refid="11028" relation="include">
        </childnode>
        <childnode refid="11039" relation="include">
        </childnode>
        <childnode refid="11040" relation="include">
        </childnode>
        <childnode refid="11016" relation="include">
        </childnode>
        <childnode refid="11041" relation="include">
        </childnode>
        <childnode refid="11042" relation="include">
        </childnode>
        <childnode refid="11043" relation="include">
        </childnode>
        <childnode refid="11044" relation="include">
        </childnode>
        <childnode refid="11023" relation="include">
        </childnode>
      </node>
      <node id="11053">
        <label>condition_variable</label>
      </node>
      <node id="11019">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="11050">
        <label>future</label>
      </node>
      <node id="11021">
        <label>nifty/container/flat_set.hxx</label>
        <link refid="flat__set_8hxx"/>
        <childnode refid="11015" relation="include">
        </childnode>
        <childnode refid="11016" relation="include">
        </childnode>
        <childnode refid="11022" relation="include">
        </childnode>
        <childnode refid="11023" relation="include">
        </childnode>
        <childnode refid="11024" relation="include">
        </childnode>
      </node>
      <node id="11016">
        <label>vector</label>
      </node>
      <node id="11033">
        <label>nifty/graph/graph_tags.hxx</label>
        <link refid="graph__tags_8hxx"/>
      </node>
      <node id="11024">
        <label>utility</label>
      </node>
      <node id="11028">
        <label>sstream</label>
      </node>
      <node id="11025">
        <label>nifty/tools/runtime_check.hxx</label>
        <link refid="runtime__check_8hxx"/>
        <childnode refid="11026" relation="include">
        </childnode>
        <childnode refid="11027" relation="include">
        </childnode>
        <childnode refid="11028" relation="include">
        </childnode>
        <childnode refid="11016" relation="include">
        </childnode>
        <childnode refid="11029" relation="include">
        </childnode>
        <childnode refid="11030" relation="include">
        </childnode>
      </node>
      <node id="11034">
        <label>nifty/graph/graph_maps.hxx</label>
        <link refid="graph__maps_8hxx"/>
        <childnode refid="11035" relation="include">
        </childnode>
      </node>
      <node id="11042">
        <label>iostream</label>
      </node>
      <node id="11015">
        <label>cstddef</label>
      </node>
      <node id="11047">
        <label>nifty/parallel/threadpool.hxx</label>
        <link refid="threadpool_8hxx"/>
        <childnode refid="11023" relation="include">
        </childnode>
        <childnode refid="11048" relation="include">
        </childnode>
        <childnode refid="11049" relation="include">
        </childnode>
        <childnode refid="11016" relation="include">
        </childnode>
        <childnode refid="11050" relation="include">
        </childnode>
        <childnode refid="11051" relation="include">
        </childnode>
        <childnode refid="11052" relation="include">
        </childnode>
        <childnode refid="11053" relation="include">
        </childnode>
        <childnode refid="11027" relation="include">
        </childnode>
        <childnode refid="11030" relation="include">
        </childnode>
        <childnode refid="11032" relation="include">
        </childnode>
        <childnode refid="11020" relation="include">
        </childnode>
        <childnode refid="11025" relation="include">
        </childnode>
      </node>
      <node id="11051">
        <label>mutex</label>
      </node>
      <node id="11035">
        <label>nifty/marray/marray.hxx</label>
        <link refid="marray_8hxx"/>
        <childnode refid="11036" relation="include">
        </childnode>
        <childnode refid="11025" relation="include">
        </childnode>
      </node>
      <node id="11014">
        <label>/home/tbeier/src/nifty/include/nifty/graph/undirected_list_graph.hxx</label>
        <link refid="graph/undirected_list_graph.hxx"/>
        <childnode refid="11015" relation="include">
        </childnode>
        <childnode refid="11016" relation="include">
        </childnode>
        <childnode refid="11017" relation="include">
        </childnode>
        <childnode refid="11018" relation="include">
        </childnode>
        <childnode refid="11019" relation="include">
        </childnode>
        <childnode refid="11020" relation="include">
        </childnode>
        <childnode refid="11021" relation="include">
        </childnode>
        <childnode refid="11025" relation="include">
        </childnode>
        <childnode refid="11031" relation="include">
        </childnode>
        <childnode refid="11046" relation="include">
        </childnode>
        <childnode refid="11033" relation="include">
        </childnode>
        <childnode refid="11047" relation="include">
        </childnode>
      </node>
      <node id="11048">
        <label>thread</label>
      </node>
      <node id="11041">
        <label>set</label>
      </node>
      <node id="11022">
        <label>algorithm</label>
      </node>
      <node id="11039">
        <label>cstring</label>
      </node>
      <node id="11043">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11073">
        <label>/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_hdf5.hxx</label>
        <link refid="grid__rag__hdf5_8hxx"/>
      </node>
      <node id="11066">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/cc_fusion_move_based.hxx</label>
        <link refid="cc__fusion__move__based_8hxx"/>
      </node>
      <node id="11074">
        <label>/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_stacked_2d.hxx</label>
        <link refid="grid__rag__stacked__2d_8hxx"/>
        <childnode refid="11075" relation="include">
        </childnode>
      </node>
      <node id="11061">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/optimization/lifted_multicut/export_lifted_multicut_solver.hxx</label>
        <link refid="export__lifted__multicut__solver_8hxx"/>
      </node>
      <node id="11056">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/fusion_move.hxx</label>
        <link refid="lifted__multicut_2fusion__move_8hxx"/>
        <childnode refid="11057" relation="include">
        </childnode>
      </node>
      <node id="11064">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/cgc.hxx</label>
        <link refid="cgc_8hxx"/>
      </node>
      <node id="11065">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/fusion_move.hxx</label>
        <link refid="multicut_2fusion__move_8hxx"/>
        <childnode refid="11066" relation="include">
        </childnode>
        <childnode refid="11067" relation="include">
        </childnode>
      </node>
      <node id="11055">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/common/cc_fusion_move_impl.hxx</label>
        <link refid="cc__fusion__move__impl_8hxx"/>
      </node>
      <node id="11067">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/fusion_move_based.hxx</label>
        <link refid="multicut_2fusion__move__based_8hxx"/>
      </node>
      <node id="11059">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/lifted_multicut_mp.hxx</label>
        <link refid="lifted__multicut__mp_8hxx"/>
      </node>
      <node id="11075">
        <label>/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_stacked_2d_hdf5.hxx</label>
        <link refid="grid__rag__stacked__2d__hdf5_8hxx"/>
      </node>
      <node id="11063">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/mincut/mincut_cc_fusion_move_based.hxx</label>
        <link refid="mincut__cc__fusion__move__based_8hxx"/>
      </node>
      <node id="11072">
        <label>/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_features.hxx</label>
        <link refid="grid__rag__features_8hxx"/>
      </node>
      <node id="11077">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/undirected_list_graph.hxx</label>
        <link refid="python_2graph_2undirected__list__graph_8hxx"/>
        <childnode refid="11078" relation="include">
        </childnode>
        <childnode refid="11079" relation="include">
        </childnode>
      </node>
      <node id="11068">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/multicut_decomposer.hxx</label>
        <link refid="multicut__decomposer_8hxx"/>
      </node>
      <node id="11078">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/agglo/export_agglomerative_clustering.hxx</label>
        <link refid="export__agglomerative__clustering_8hxx"/>
      </node>
      <node id="11069">
        <label>/home/tbeier/src/nifty/include/nifty/graph/rag/detail_rag/compute_grid_rag.hxx</label>
        <link refid="compute__grid__rag_8hxx"/>
        <childnode refid="11070" relation="include">
        </childnode>
      </node>
      <node id="11071">
        <label>/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag_accumulate.hxx</label>
        <link refid="grid__rag__accumulate_8hxx"/>
      </node>
      <node id="11057">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/fusion_move_based.hxx</label>
        <link refid="lifted__multicut_2fusion__move__based_8hxx"/>
      </node>
      <node id="11062">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/mincut/mincut_cc_fusion_move.hxx</label>
        <link refid="mincut__cc__fusion__move_8hxx"/>
        <childnode refid="11063" relation="include">
        </childnode>
      </node>
      <node id="11070">
        <label>/home/tbeier/src/nifty/include/nifty/graph/rag/grid_rag.hxx</label>
        <link refid="grid__rag_8hxx"/>
        <childnode refid="11071" relation="include">
        </childnode>
        <childnode refid="11072" relation="include">
        </childnode>
        <childnode refid="11073" relation="include">
        </childnode>
        <childnode refid="11074" relation="include">
        </childnode>
      </node>
      <node id="11079">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/optimization/common/export_solver_factory.hxx</label>
        <link refid="export__solver__factory_8hxx"/>
      </node>
      <node id="11058">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/lifted_multicut_objective.hxx</label>
        <link refid="graph_2optimization_2lifted__multicut_2lifted__multicut__objective_8hxx"/>
        <childnode refid="11056" relation="include">
        </childnode>
        <childnode refid="11059" relation="include">
        </childnode>
        <childnode refid="11060" relation="include">
        </childnode>
      </node>
      <node id="11054">
        <label>/home/tbeier/src/nifty/include/nifty/graph/undirected_list_graph.hxx</label>
        <link refid="graph/undirected_list_graph.hxx"/>
        <childnode refid="11055" relation="include">
        </childnode>
        <childnode refid="11056" relation="include">
        </childnode>
        <childnode refid="11058" relation="include">
        </childnode>
        <childnode refid="11062" relation="include">
        </childnode>
        <childnode refid="11064" relation="include">
        </childnode>
        <childnode refid="11065" relation="include">
        </childnode>
        <childnode refid="11068" relation="include">
        </childnode>
        <childnode refid="11069" relation="include">
        </childnode>
        <childnode refid="11076" relation="include">
        </childnode>
        <childnode refid="11070" relation="include">
        </childnode>
        <childnode refid="11077" relation="include">
        </childnode>
      </node>
      <node id="11076">
        <label>/home/tbeier/src/nifty/include/nifty/graph/rag/detail_rag/compute_grid_rag_hdf5.hxx</label>
        <link refid="compute__grid__rag__hdf5_8hxx"/>
        <childnode refid="11073" relation="include">
        </childnode>
        <childnode refid="11075" relation="include">
        </childnode>
      </node>
      <node id="11060">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/optimization/lifted_multicut/lifted_multicut_objective.hxx</label>
        <link refid="python_2graph_2optimization_2lifted__multicut_2lifted__multicut__objective_8hxx"/>
        <childnode refid="11061" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper" prot="public">nifty::graph::detail_graph::UndirectedGraphTypeHelper</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphNodeIter" prot="public">nifty::graph::detail_graph::SimpleGraphNodeIter</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphEdgeIter" prot="public">nifty::graph::detail_graph::SimpleGraphEdgeIter</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1UndirectedGraph" prot="public">nifty::graph::UndirectedGraph</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph">nifty::graph</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph_1_1detail__graph">nifty::graph::detail_graph</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="graph_2undirected__list__graph_8hxx_1a29caae3c0b376ee87396757e07a3c8a1" prot="public" static="no">
        <name>__setimpl</name>
        <initializer>boost::container::flat_set</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/undirected_list_graph.hxx" line="14" column="11" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/undirected_list_graph.hxx" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/version.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>strange<sp/>reason<sp/>travis<sp/>does<sp/>not<sp/>find<sp/>the<sp/>boost<sp/>flat<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITHIN_TRAVIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__setimpl<sp/>std::set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/container/flat_set.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="graph_2undirected__list__graph_8hxx_1a29caae3c0b376ee87396757e07a3c8a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__setimpl<sp/>boost::container::flat_set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iterator/counting_iterator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="flat__set_8hxx" kindref="compound">nifty/container/flat_set.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="runtime__check_8hxx" kindref="compound">nifty/tools/runtime_check.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="undirected__graph__base_8hxx" kindref="compound">nifty/graph/undirected_graph_base.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="adjacency_8hxx" kindref="compound">nifty/graph/detail/adjacency.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graph__tags_8hxx" kindref="compound">nifty/graph/graph_tags.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="threadpool_8hxx" kindref="compound">nifty/parallel/threadpool.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">graph{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail_graph{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="35" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper" kindref="compound">UndirectedGraphTypeHelper</ref>{</highlight></codeline>
<codeline lineno="36" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1ac7309a31e7a003860ce1f1a882e6813e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE<sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1ac7309a31e7a003860ce1f1a882e6813e" kindref="member">EdgeInternalType</ref>;</highlight></codeline>
<codeline lineno="37" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a4c2041ab030e3eb561a2955a3bbfb5d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a4c2041ab030e3eb561a2955a3bbfb5d7" kindref="member">NodeInteralType</ref>;</highlight></codeline>
<codeline lineno="38" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a626e3edd4cc8c7e33ec89e6a7454561a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail_graph::UndirectedAdjacency&lt;int64_t,int64_t,NodeInteralType,EdgeInternalType&gt;<sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a626e3edd4cc8c7e33ec89e6a7454561a" kindref="member">NodeAdjacency</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//typedef<sp/>std::set&lt;NodeAdjacency<sp/>&gt;<sp/>NodeStorage;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a55013bcacc1d016637b29ab2c33ac52a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1container_1_1FlatSet" kindref="compound">nifty::container::FlatSet &lt;NodeAdjacency&gt;</ref><sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a55013bcacc1d016637b29ab2c33ac52a" kindref="member">NodeStorage</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a43eb7f2cfb5036f87e9496bb6b8d064d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;NodeInteralType,NodeInteralType&gt;<sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a43eb7f2cfb5036f87e9496bb6b8d064d" kindref="member">EdgeStorage</ref>;</highlight></codeline>
<codeline lineno="43" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a33768d5fbeda97627a0e4a67eb50776c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;<sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1a33768d5fbeda97627a0e4a67eb50776c" kindref="member">NodeIter</ref>;</highlight></codeline>
<codeline lineno="44" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1adcb9afc6e254d52edcb21e1be522dce7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;<sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1adcb9afc6e254d52edcb21e1be522dce7" kindref="member">EdgeIter</ref>;</highlight></codeline>
<codeline lineno="45" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1aae80a660c99b4e51c90a98f70496a8ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">NodeStorage::const_iterator</ref><sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGraphTypeHelper_1aae80a660c99b4e51c90a98f70496a8ea" kindref="member">AdjacencyIter</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphNodeIter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphNodeIter" kindref="compound">SimpleGraphNodeIter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;::counting_iterator;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;::operator=;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphEdgeIter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphEdgeIter" kindref="compound">SimpleGraphEdgeIter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;::counting_iterator;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;::operator=;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EDGE_INTERANL_TYPE<sp/>=<sp/>int64_t,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NODE_INTERNAL_TYPE<sp/>=<sp/>int64_t&gt;</highlight></codeline>
<codeline lineno="64" refid="classnifty_1_1graph_1_1UndirectedGraph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph" kindref="compound">UndirectedGraph</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraphBase" kindref="compound">UndirectedGraphBase</ref>&lt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UndirectedGraph&lt;EDGE_INTERANL_TYPE,NODE_INTERNAL_TYPE&gt;,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail_graph::SimpleGraphNodeIter,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail_graph::SimpleGraphEdgeIter,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>detail_graph::UndirectedGraphTypeHelper&lt;EDGE_INTERANL_TYPE,NODE_INTERNAL_TYPE&gt;::AdjacencyIter</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73" refid="classnifty_1_1graph_1_1UndirectedGraph_1a70e38582c25deca5e0ce080277cb30fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a70e38582c25deca5e0ce080277cb30fc" kindref="member">EdgeInternalType</ref>;</highlight></codeline>
<codeline lineno="74" refid="classnifty_1_1graph_1_1UndirectedGraph_1aa3b43dd44281416b7232caae529e8780" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aa3b43dd44281416b7232caae529e8780" kindref="member">NodeInteralType</ref>;</highlight></codeline>
<codeline lineno="75" refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail_graph::UndirectedAdjacency&lt;int64_t,int64_t,NodeInteralType,EdgeInternalType&gt;<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>;</highlight></codeline>
<codeline lineno="76" refid="classnifty_1_1graph_1_1UndirectedGraph_1a3a90ae1386fcc168216856934bf1ec24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1container_1_1FlatSet" kindref="compound">nifty::container::FlatSet&lt;NodeAdjacency&gt;</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3a90ae1386fcc168216856934bf1ec24" kindref="member">NodeStorage</ref>;</highlight></codeline>
<codeline lineno="77" refid="classnifty_1_1graph_1_1UndirectedGraph_1a77256cc943f931180bf84b14d943f39a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;EdgeInternalType,EdgeInternalType&gt;<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a77256cc943f931180bf84b14d943f39a" kindref="member">EdgeStorage</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79" refid="classnifty_1_1graph_1_1UndirectedGraph_1aac54e4ad3a525489e9b29c1bd4c92c88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphNodeIter" kindref="compound">detail_graph::SimpleGraphNodeIter</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aac54e4ad3a525489e9b29c1bd4c92c88" kindref="member">NodeIter</ref>;</highlight></codeline>
<codeline lineno="80" refid="classnifty_1_1graph_1_1UndirectedGraph_1aa37a0dc690ad1257d5eb5105e7d66bba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aa37a0dc690ad1257d5eb5105e7d66bba" kindref="member">EdgeIter</ref>;</highlight></codeline>
<codeline lineno="81" refid="classnifty_1_1graph_1_1UndirectedGraph_1adecb4597d23d097b08c2c03a106bc57b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1container_1_1FlatSet_1a0f4cd26da060859b18742abfd534aa24" kindref="member">NodeStorage::const_iterator</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1adecb4597d23d097b08c2c03a106bc57b" kindref="member">AdjacencyIter</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classnifty_1_1graph_1_1UndirectedGraph_1a5e5a59e9d25ab322da5e8286cadc3e00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1ContiguousTag" kindref="compound">ContiguousTag</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a5e5a59e9d25ab322da5e8286cadc3e00" kindref="member">EdgeIdTag</ref>;</highlight></codeline>
<codeline lineno="85" refid="classnifty_1_1graph_1_1UndirectedGraph_1a5d11b1e802f0be2f967b62f7ea5ff61e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1ContiguousTag" kindref="compound">ContiguousTag</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a5d11b1e802f0be2f967b62f7ea5ff61e" kindref="member">NodeIdTag</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classnifty_1_1graph_1_1UndirectedGraph_1a2f74e8de961bf80dc037ceedf58c46a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1SortedTag" kindref="compound">SortedTag</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a2f74e8de961bf80dc037ceedf58c46a4" kindref="member">EdgeIdOrderTag</ref>;</highlight></codeline>
<codeline lineno="88" refid="classnifty_1_1graph_1_1UndirectedGraph_1a0756fdeac9df76a32f46f2969ffacd80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1SortedTag" kindref="compound">SortedTag</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a0756fdeac9df76a32f46f2969ffacd80" kindref="member">NodeIdOrderTag</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3c2087810feadcef80e0a1a1ca288b43" kindref="member">UndirectedGraph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6c6acc627c6a90269c06fb34a8c1973d" kindref="member">numberOfNodes</ref><sp/>=<sp/>0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>reserveNumberOfEdges<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a0c4b2840735519b961431c64400c2dc2" kindref="member">assign</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6c6acc627c6a90269c06fb34a8c1973d" kindref="member">numberOfNodes</ref><sp/>=<sp/>0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>reserveNumberOfEdges<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a72feacfbdf4fcf8025182cadd1ac62ea" kindref="member">insertEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a65e4fc15d99d3198592231092dbd5cd3" kindref="member">u</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a5d27d9bbc47026eda2223f53e41b1d22" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MUST<sp/>IMPL<sp/>INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a65e4fc15d99d3198592231092dbd5cd3" kindref="member">u</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>e)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a5d27d9bbc47026eda2223f53e41b1d22" kindref="member">v</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>e)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6988247544e191fb6acceb58b826c736" kindref="member">findEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a65e4fc15d99d3198592231092dbd5cd3" kindref="member">u</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a5d27d9bbc47026eda2223f53e41b1d22" kindref="member">v</ref>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a0e62fb3ccc0d599b1d5857bf1f39973b" kindref="member">nodeIdUpperBound</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ac20fc58728aa6d70c5cfca9f4c7d7b9c" kindref="member">edgeIdUpperBound</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a7c5d24028937e4119315bde14a4ccc7d" kindref="member">numberOfEdges</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6c6acc627c6a90269c06fb34a8c1973d" kindref="member">numberOfNodes</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>NodeIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ad343f62b74b5b2ea9d05a3b85a4efc4f" kindref="member">nodesBegin</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>NodeIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a67c4ce1c91980e9ec31aab1376e5db65" kindref="member">nodesEnd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgeIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1adde9dd3a77b87b946acf4b44177d6f89" kindref="member">edgesBegin</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgeIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ae4c6a06e1ffc88a967c10da6c24a6b88" kindref="member">edgesEnd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3158c45f6b045f886bd2b3bb98921d86" kindref="member">adjacencyBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aee5f776e07d2902e36fe5a8e258cb3fc" kindref="member">adjacencyEnd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ac8f9e2e6aff947622a48a875f3c33b15" kindref="member">adjacencyOutBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>optional<sp/>(with<sp/>default<sp/>impl<sp/>in<sp/>base)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int64_t,int64_t&gt;<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3f39f306b8f1e66812abfded1415ae38" kindref="member">uv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>e)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a521eb0c379b3c0f3a14c30dddcec4715" kindref="member">forEachEdge</ref>(F<sp/>&amp;&amp;<sp/>f)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6b04c2efc92ed8e43661a3d3067e7454" kindref="member">forEachNode</ref>(F<sp/>&amp;&amp;<sp/>f)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serialization<sp/>de-serialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a331afe7d6d0765cd71af8bf218d4cc36" kindref="member">serializationSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITER&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ad39b5a1269522c86a7c5469bbf9df2e1" kindref="member">serialize</ref>(ITER<sp/>iter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITER&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ad64103a26a487c730d69e7daaef38191" kindref="member">deserialize</ref>(ITER<sp/>iter);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph" kindref="compound">UndirectedGraph&lt;EdgeInternalType,NodeInteralType&gt;</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a124a705edb8f41f7f2672443fcfb1051" kindref="member">extractSubgraphFromNodes</ref>(</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classandres_1_1View" kindref="compound">marray::View&lt;NODE_INTERNAL_TYPE&gt;</ref><sp/>&amp;<sp/>nodeList,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;EDGE_INTERANL_TYPE&gt;<sp/>&amp;<sp/>innerEdgesOut,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;EDGE_INTERANL_TYPE&gt;<sp/>&amp;<sp/>outerEdgesOut)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a2a97f53b477b71af29c6e8409729e353" kindref="member">insertEdgeOnlyInNodeAdj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a65e4fc15d99d3198592231092dbd5cd3" kindref="member">u</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a5d27d9bbc47026eda2223f53e41b1d22" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PER_THREAD_DATA_VEC&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a397456fa4036ba4606a375e3c78cb9d4" kindref="member">mergeAdjacencies</ref>(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PER_THREAD_DATA_VEC<sp/>&amp;<sp/>perThreadDataVec,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1parallel_1_1ThreadPool" kindref="compound">parallel::ThreadPool</ref><sp/>&amp;<sp/>threadpool</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classnifty_1_1graph_1_1UndirectedGraph_1a4e12e37bede71b7beaca9fdbc7dd9abc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;NodeStorage&gt;<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a4e12e37bede71b7beaca9fdbc7dd9abc" kindref="member">nodes_</ref>;</highlight></codeline>
<codeline lineno="155" refid="classnifty_1_1graph_1_1UndirectedGraph_1adc3e4d3dc0f8bff661042af2a05d342f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;EdgeStorage&gt;<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1adc3e4d3dc0f8bff661042af2a05d342f" kindref="member">edges_</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3c2087810feadcef80e0a1a1ca288b43" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="161" refid="classnifty_1_1graph_1_1UndirectedGraph_1a3c2087810feadcef80e0a1a1ca288b43" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3c2087810feadcef80e0a1a1ca288b43" kindref="member">UndirectedGraph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>numberOfNodes<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>reserveNumberOfEdges<sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">:<sp/><sp/><sp/>nodes_(numberOfNodes),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>edges_()</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1adc3e4d3dc0f8bff661042af2a05d342f" kindref="member">edges_</ref>.reserve(reserveNumberOfEdges);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a0c4b2840735519b961431c64400c2dc2" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="171" refid="classnifty_1_1graph_1_1UndirectedGraph_1a0c4b2840735519b961431c64400c2dc2" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a0c4b2840735519b961431c64400c2dc2" kindref="member">assign</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>numberOfNodes<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>reserveNumberOfEdges<sp/>){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>nodes_.clear();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>edges_.clear();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>nodes_.resize(numberOfNodes);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>edges_.reserve(reserveNumberOfEdges);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">int64_t</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a72feacfbdf4fcf8025182cadd1ac62ea" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="181" refid="classnifty_1_1graph_1_1UndirectedGraph_1a72feacfbdf4fcf8025182cadd1ac62ea" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a72feacfbdf4fcf8025182cadd1ac62ea" kindref="member">insertEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>v){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fres<sp/>=<sp/><sp/>nodes_[u].find(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>(v));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fres<sp/>!=<sp/>nodes_[u].end())</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fres-&gt;edge();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uu<sp/>=<sp/>std::min(u,v);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vv<sp/>=<sp/>std::max(u,v);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a77256cc943f931180bf84b14d943f39a" kindref="member">EdgeStorage</ref>(uu,<sp/>vv);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ei<sp/>=<sp/>edges_.size();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges_.push_back(e);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_[u].insert(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>(v,ei));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_[v].insert(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>(u,ei));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ei;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">int64_t</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a65e4fc15d99d3198592231092dbd5cd3" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="201" refid="classnifty_1_1graph_1_1UndirectedGraph_1a65e4fc15d99d3198592231092dbd5cd3" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a65e4fc15d99d3198592231092dbd5cd3" kindref="member">u</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>e)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(e,&lt;,numberOfEdges());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edges_[e].first;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">int64_t</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a5d27d9bbc47026eda2223f53e41b1d22" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="209" refid="classnifty_1_1graph_1_1UndirectedGraph_1a5d27d9bbc47026eda2223f53e41b1d22" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a5d27d9bbc47026eda2223f53e41b1d22" kindref="member">v</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>e)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(e,&lt;,numberOfEdges());</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edges_[e].second;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">int64_t</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6988247544e191fb6acceb58b826c736" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="217" refid="classnifty_1_1graph_1_1UndirectedGraph_1a6988247544e191fb6acceb58b826c736" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6988247544e191fb6acceb58b826c736" kindref="member">findEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(u,&lt;,numberOfNodes());</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(v,&lt;,numberOfNodes());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fres<sp/>=<sp/><sp/>nodes_[u].find(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>(v));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fres<sp/>!=<sp/>nodes_[u].end())</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fres-&gt;edge();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">int64_t</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a0e62fb3ccc0d599b1d5857bf1f39973b" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="230" refid="classnifty_1_1graph_1_1UndirectedGraph_1a0e62fb3ccc0d599b1d5857bf1f39973b" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a0e62fb3ccc0d599b1d5857bf1f39973b" kindref="member">nodeIdUpperBound</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfNodes()<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>numberOfNodes()-1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">int64_t</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ac20fc58728aa6d70c5cfca9f4c7d7b9c" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="238" refid="classnifty_1_1graph_1_1UndirectedGraph_1ac20fc58728aa6d70c5cfca9f4c7d7b9c" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ac20fc58728aa6d70c5cfca9f4c7d7b9c" kindref="member">edgeIdUpperBound</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfEdges()<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>numberOfEdges()-1;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">uint64_t</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a7c5d24028937e4119315bde14a4ccc7d" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="245" refid="classnifty_1_1graph_1_1UndirectedGraph_1a7c5d24028937e4119315bde14a4ccc7d" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a7c5d24028937e4119315bde14a4ccc7d" kindref="member">numberOfEdges</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edges_.size();</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">uint64_t</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6c6acc627c6a90269c06fb34a8c1973d" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="252" refid="classnifty_1_1graph_1_1UndirectedGraph_1a6c6acc627c6a90269c06fb34a8c1973d" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6c6acc627c6a90269c06fb34a8c1973d" kindref="member">numberOfNodes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodes_.size();</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphNodeIter" kindref="compound">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::NodeIter</ref></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ad343f62b74b5b2ea9d05a3b85a4efc4f" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="259" refid="classnifty_1_1graph_1_1UndirectedGraph_1ad343f62b74b5b2ea9d05a3b85a4efc4f" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ad343f62b74b5b2ea9d05a3b85a4efc4f" kindref="member">nodesBegin</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphNodeIter" kindref="compound">NodeIter</ref>(0);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphNodeIter" kindref="compound">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::NodeIter</ref></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a67c4ce1c91980e9ec31aab1376e5db65" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="266" refid="classnifty_1_1graph_1_1UndirectedGraph_1a67c4ce1c91980e9ec31aab1376e5db65" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a67c4ce1c91980e9ec31aab1376e5db65" kindref="member">nodesEnd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1SimpleGraphNodeIter" kindref="compound">NodeIter</ref>(this-&gt;numberOfNodes());</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aa37a0dc690ad1257d5eb5105e7d66bba" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::EdgeIter</ref></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1adde9dd3a77b87b946acf4b44177d6f89" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="273" refid="classnifty_1_1graph_1_1UndirectedGraph_1adde9dd3a77b87b946acf4b44177d6f89" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1adde9dd3a77b87b946acf4b44177d6f89" kindref="member">edgesBegin</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aa37a0dc690ad1257d5eb5105e7d66bba" kindref="member">EdgeIter</ref>(0);</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aa37a0dc690ad1257d5eb5105e7d66bba" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::EdgeIter</ref></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ae4c6a06e1ffc88a967c10da6c24a6b88" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="280" refid="classnifty_1_1graph_1_1UndirectedGraph_1ae4c6a06e1ffc88a967c10da6c24a6b88" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ae4c6a06e1ffc88a967c10da6c24a6b88" kindref="member">edgesEnd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aa37a0dc690ad1257d5eb5105e7d66bba" kindref="member">EdgeIter</ref>(this-&gt;numberOfEdges());</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1adecb4597d23d097b08c2c03a106bc57b" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::AdjacencyIter</ref></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3158c45f6b045f886bd2b3bb98921d86" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="287" refid="classnifty_1_1graph_1_1UndirectedGraph_1a3158c45f6b045f886bd2b3bb98921d86" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3158c45f6b045f886bd2b3bb98921d86" kindref="member">adjacencyBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(node,&lt;,numberOfNodes());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodes_[node].begin();</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1adecb4597d23d097b08c2c03a106bc57b" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::AdjacencyIter</ref></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aee5f776e07d2902e36fe5a8e258cb3fc" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="295" refid="classnifty_1_1graph_1_1UndirectedGraph_1aee5f776e07d2902e36fe5a8e258cb3fc" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aee5f776e07d2902e36fe5a8e258cb3fc" kindref="member">adjacencyEnd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a1ae39644615984f31785d52a0b624277" kindref="member">NIFTY_ASSERT_OP</ref>(node,&lt;,numberOfNodes());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodes_[node].end();</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1adecb4597d23d097b08c2c03a106bc57b" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::AdjacencyIter</ref></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ac8f9e2e6aff947622a48a875f3c33b15" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="303" refid="classnifty_1_1graph_1_1UndirectedGraph_1ac8f9e2e6aff947622a48a875f3c33b15" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ac8f9e2e6aff947622a48a875f3c33b15" kindref="member">adjacencyOutBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adjacencyBegin(node);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">std::pair&lt;int64_t,int64_t&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3f39f306b8f1e66812abfded1415ae38" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="311" refid="classnifty_1_1graph_1_1UndirectedGraph_1a3f39f306b8f1e66812abfded1415ae38" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a3f39f306b8f1e66812abfded1415ae38" kindref="member">uv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>e)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_uv<sp/>=<sp/>edges_[e];</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;int64_t,int64_t&gt;(_uv.first,<sp/>_uv.second);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a521eb0c379b3c0f3a14c30dddcec4715" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="320" refid="classnifty_1_1graph_1_1UndirectedGraph_1a521eb0c379b3c0f3a14c30dddcec4715" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a521eb0c379b3c0f3a14c30dddcec4715" kindref="member">forEachEdge</ref>(F<sp/>&amp;&amp;<sp/>f)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>edge=0;<sp/>edge&lt;<sp/>numberOfEdges();<sp/>++edge){</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(edge);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6b04c2efc92ed8e43661a3d3067e7454" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="331" refid="classnifty_1_1graph_1_1UndirectedGraph_1a6b04c2efc92ed8e43661a3d3067e7454" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a6b04c2efc92ed8e43661a3d3067e7454" kindref="member">forEachNode</ref>(F<sp/>&amp;&amp;<sp/>f)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>node=0;<sp/>node&lt;<sp/>numberOfNodes();<sp/>++node){</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(node);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">uint64_t</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a331afe7d6d0765cd71af8bf218d4cc36" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="343" refid="classnifty_1_1graph_1_1UndirectedGraph_1a331afe7d6d0765cd71af8bf218d4cc36" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a331afe7d6d0765cd71af8bf218d4cc36" kindref="member">serializationSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>nodes;<sp/><sp/>number<sp/>of<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>this-&gt;numberOfEdges()<sp/>*<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>u,<sp/>v;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITER&gt;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ad39b5a1269522c86a7c5469bbf9df2e1" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="354" refid="classnifty_1_1graph_1_1UndirectedGraph_1ad39b5a1269522c86a7c5469bbf9df2e1" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ad39b5a1269522c86a7c5469bbf9df2e1" kindref="member">serialize</ref>(ITER<sp/>iter)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>this-&gt;numberOfNodes();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>this-&gt;numberOfEdges();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edge<sp/>:<sp/>this-&gt;edges()){</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>this-&gt;u(edge);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>this-&gt;v(edge);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITER&gt;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ad64103a26a487c730d69e7daaef38191" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="373" refid="classnifty_1_1graph_1_1UndirectedGraph_1ad64103a26a487c730d69e7daaef38191" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ad64103a26a487c730d69e7daaef38191" kindref="member">deserialize</ref>(ITER<sp/>iter){</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nNodes<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nEdges<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;assign(nNodes,<sp/>nEdges);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e=0;<sp/>e&lt;nEdges;<sp/>++e){</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;insertEdge(u,<sp/>v);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PER_THREAD_DATA_VEC&gt;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a397456fa4036ba4606a375e3c78cb9d4" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="396" refid="classnifty_1_1graph_1_1UndirectedGraph_1a397456fa4036ba4606a375e3c78cb9d4" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a397456fa4036ba4606a375e3c78cb9d4" kindref="member">mergeAdjacencies</ref>(</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>PER_THREAD_DATA_VEC<sp/>&amp;<sp/>perThreadDataVec,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1parallel_1_1ThreadPool" kindref="compound">parallel::ThreadPool</ref><sp/>&amp;<sp/>threadpool</highlight></codeline>
<codeline lineno="399"><highlight class="normal">){</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numberOfLabels<sp/>=<sp/>this-&gt;numberOfNodes();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merge<sp/>the<sp/>node<sp/>adjacency<sp/>sets<sp/>for<sp/>each<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ParallelProcessing_1ga505ac3d12ecde87341bce7b6f1027c88" kindref="member">nifty::parallel::parallel_foreach</ref>(threadpool,<sp/>numberOfLabels,<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>label){</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>set0<sp/>=<sp/>perThreadDataVec[0].adjacency[label];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i=1;<sp/>i&lt;perThreadDataVec.size();<sp/>++i){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>setI<sp/>=<sp/>perThreadDataVec[i].adjacency[label];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set0.insert(setI.begin(),<sp/>setI.end());</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>otherNode<sp/>:<sp/>set0)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;nodes_[label].insert(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>(otherNode));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>the<sp/>edge<sp/>index<sp/>for<sp/>each<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>edgeIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>edges<sp/>=<sp/>this-&gt;edges_;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>u<sp/>=<sp/>0;<sp/>u&lt;<sp/>numberOfLabels;<sp/>++u){</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>vAdj<sp/>:<sp/><sp/>this-&gt;nodes_[u]){</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>vAdj.node();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(u<sp/>&lt;<sp/>v){</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.push_back(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a77256cc943f931180bf84b14d943f39a" kindref="member">EdgeStorage</ref>(u,<sp/>v));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vAdj.changeEdgeIndex(edgeIndex);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fres<sp/>=<sp/><sp/>this-&gt;nodes_[v].find(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>(u));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fres-&gt;changeEdgeIndex(edgeIndex);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++edgeIndex;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE<sp/>&gt;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a2a97f53b477b71af29c6e8409729e353" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="435" refid="classnifty_1_1graph_1_1UndirectedGraph_1a2a97f53b477b71af29c6e8409729e353" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a2a97f53b477b71af29c6e8409729e353" kindref="member">insertEdgeOnlyInNodeAdj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>v){</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fres<sp/>=<sp/><sp/>nodes_[u].find(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>(v));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fres<sp/>!=<sp/>nodes_[u].end())</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_[u].insert(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>(v));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_[v].insert(<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1ab50d4774bd9a93ac226589352866df69" kindref="member">NodeAdjacency</ref>(u));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_INTERANL_TYPE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_INTERNAL_TYPE&gt;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph" kindref="compound">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;</ref></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a124a705edb8f41f7f2672443fcfb1051" kindref="member">UndirectedGraph&lt;EDGE_INTERANL_TYPE, NODE_INTERNAL_TYPE&gt;::</ref></highlight></codeline>
<codeline lineno="450" refid="classnifty_1_1graph_1_1UndirectedGraph_1a124a705edb8f41f7f2672443fcfb1051" refkind="member"><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a124a705edb8f41f7f2672443fcfb1051" kindref="member">extractSubgraphFromNodes</ref>(</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classandres_1_1View" kindref="compound">marray::View&lt;NODE_INTERNAL_TYPE&gt;</ref><sp/>&amp;<sp/>nodeList,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;EDGE_INTERANL_TYPE&gt;<sp/>&amp;<sp/>innerEdgesOut,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;EDGE_INTERANL_TYPE&gt;<sp/>&amp;<sp/>outerEdgesOut)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;NodeInteralType,NodeInteralType&gt;<sp/>globalToLocalNodes;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nodeList.<ref refid="classandres_1_1View_1afc9504378ae2eefd7540a71d9f227338" kindref="member">size</ref>();<sp/>i++)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalToLocalNodes.insert(<sp/>std::make_pair(nodeList(i),<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph_1aa3b43dd44281416b7232caae529e8780" kindref="member">NodeInteralType</ref>(i))<sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nodeIt<sp/>=<sp/>nodeList.<ref refid="classandres_1_1View_1acd1f71e27ea01d536e1539877afedfa9" kindref="member">begin</ref>();<sp/>nodeIt<sp/>!=<sp/>nodeList.<ref refid="classandres_1_1View_1af778a1e9839f2f90e503514e36d41b78" kindref="member">end</ref>();<sp/>++nodeIt)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>*nodeIt;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>adjacencyIt<sp/>=<sp/>this-&gt;adjacencyBegin(u);<sp/>adjacencyIt<sp/>!=<sp/>this-&gt;adjacencyEnd(u);<sp/>++adjacencyIt)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>adjacencyIt-&gt;node();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>this-&gt;findEdge(u,<sp/>v);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>std::find(nodeList.<ref refid="classandres_1_1View_1acd1f71e27ea01d536e1539877afedfa9" kindref="member">begin</ref>(),<sp/>nodeList.<ref refid="classandres_1_1View_1af778a1e9839f2f90e503514e36d41b78" kindref="member">end</ref>(),<sp/>v)<sp/>!=<sp/>nodeList.<ref refid="classandres_1_1View_1af778a1e9839f2f90e503514e36d41b78" kindref="member">end</ref>()<sp/>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerEdgesOut.push_back(e);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerEdgesOut.push_back(e);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>the<sp/>edges<sp/>unique</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(innerEdgesOut.begin(),innerEdgesOut.end());</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last<sp/>=<sp/>std::unique(innerEdgesOut.begin(),<sp/>innerEdgesOut.end());</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>innerEdgesOut.erase(<sp/>last,<sp/>innerEdgesOut.end()<sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(outerEdgesOut.begin(),outerEdgesOut.end());</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/>std::unique(outerEdgesOut.begin(),<sp/>outerEdgesOut.end());</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>outerEdgesOut.erase(<sp/>last,<sp/>outerEdgesOut.end()<sp/>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>number<sp/>of<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>numberOfNodes<sp/>=<sp/>nodeList.<ref refid="classandres_1_1View_1afc9504378ae2eefd7540a71d9f227338" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraph" kindref="compound">UndirectedGraph&lt;EdgeInternalType,NodeInteralType&gt;</ref><sp/>subgraphOut(numberOfNodes);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>local<sp/>uv<sp/>-<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>innerEdgesOut.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uv<sp/>=<sp/>this-&gt;uv(innerEdgesOut[i]);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subgraphOut.<ref refid="classnifty_1_1graph_1_1UndirectedGraph_1a72feacfbdf4fcf8025182cadd1ac62ea" kindref="member">insertEdge</ref>(globalToLocalNodes[uv.first],<sp/>globalToLocalNodes[uv.second]);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subgraphOut;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/undirected_list_graph.hxx"/>
  </compounddef>
</doxygen>

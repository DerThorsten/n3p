<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="bounds_8hxx" kind="file" language="C++">
    <compoundname>bounds.hxx</compoundname>
    <includes local="no">vector</includes>
    <includes refid="marray_8hxx" local="yes">nifty/marray/marray.hxx</includes>
    <includes refid="topological__grid_8hxx" local="yes">nifty/cgp/topological_grid.hxx</includes>
    <includes refid="arithmetic__array_8hxx" local="yes">nifty/array/arithmetic_array.hxx</includes>
    <includes refid="boost__flat__set_8hxx" local="yes">nifty/container/boost_flat_set.hxx</includes>
    <includedby refid="geometric__features_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/cgp/features/geometric_features.hxx</includedby>
    <includedby refid="topological__features_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/cgp/features/topological_features.hxx</includedby>
    <includedby refid="features_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/cgp/features.hxx</includedby>
    <incdepgraph>
      <node id="6495">
        <label>atomic</label>
      </node>
      <node id="6482">
        <label>functional</label>
      </node>
      <node id="6498">
        <label>queue</label>
      </node>
      <node id="6473">
        <label>limits</label>
      </node>
      <node id="6477">
        <label>iterator</label>
      </node>
      <node id="6484">
        <label>cstdint</label>
      </node>
      <node id="6491">
        <label>nifty/tools/for_each_coordinate.hxx</label>
        <link refid="for__each__coordinate_8hxx"/>
        <childnode refid="6475" relation="include">
        </childnode>
        <childnode refid="6492" relation="include">
        </childnode>
        <childnode refid="6490" relation="include">
        </childnode>
        <childnode refid="6493" relation="include">
        </childnode>
        <childnode refid="6489" relation="include">
        </childnode>
      </node>
      <node id="6485">
        <label>cmath</label>
      </node>
      <node id="6470">
        <label>cassert</label>
      </node>
      <node id="6500">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="6472">
        <label>stdexcept</label>
      </node>
      <node id="6481">
        <label>numeric</label>
      </node>
      <node id="6474">
        <label>string</label>
      </node>
      <node id="6501">
        <label>boost/iterator/counting_iterator.hpp</label>
      </node>
      <node id="6488">
        <label>map</label>
      </node>
      <node id="6505">
        <label>nifty/tools/timer.hxx</label>
        <link refid="timer_8hxx"/>
        <childnode refid="6475" relation="include">
        </childnode>
        <childnode refid="6492" relation="include">
        </childnode>
        <childnode refid="6474" relation="include">
        </childnode>
      </node>
      <node id="6469">
        <label>nifty/marray/andres/marray.hxx</label>
        <link refid="andres_2marray_8hxx"/>
        <childnode refid="6470" relation="include">
        </childnode>
        <childnode refid="6471" relation="include">
        </childnode>
        <childnode refid="6472" relation="include">
        </childnode>
        <childnode refid="6473" relation="include">
        </childnode>
        <childnode refid="6474" relation="include">
        </childnode>
        <childnode refid="6475" relation="include">
        </childnode>
        <childnode refid="6476" relation="include">
        </childnode>
        <childnode refid="6477" relation="include">
        </childnode>
        <childnode refid="6467" relation="include">
        </childnode>
        <childnode refid="6478" relation="include">
        </childnode>
        <childnode refid="6479" relation="include">
        </childnode>
        <childnode refid="6480" relation="include">
        </childnode>
        <childnode refid="6481" relation="include">
        </childnode>
        <childnode refid="6482" relation="include">
        </childnode>
      </node>
      <node id="6499">
        <label>condition_variable</label>
      </node>
      <node id="6504">
        <label>nifty/ufd/ufd.hxx</label>
        <link refid="ufd_8hxx"/>
        <childnode refid="6471" relation="include">
        </childnode>
        <childnode refid="6467" relation="include">
        </childnode>
        <childnode refid="6488" relation="include">
        </childnode>
      </node>
      <node id="6503">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="6496">
        <label>future</label>
      </node>
      <node id="6466">
        <label>/home/tbeier/src/nifty/include/nifty/cgp/bounds.hxx</label>
        <link refid="bounds.hxx"/>
        <childnode refid="6467" relation="include">
        </childnode>
        <childnode refid="6468" relation="include">
        </childnode>
        <childnode refid="6486" relation="include">
        </childnode>
        <childnode refid="6489" relation="include">
        </childnode>
        <childnode refid="6502" relation="include">
        </childnode>
      </node>
      <node id="6467">
        <label>vector</label>
      </node>
      <node id="6502">
        <label>nifty/container/boost_flat_set.hxx</label>
        <link refid="boost__flat__set_8hxx"/>
        <childnode refid="6503" relation="include">
        </childnode>
      </node>
      <node id="6489">
        <label>nifty/array/arithmetic_array.hxx</label>
        <link refid="arithmetic__array_8hxx"/>
        <childnode refid="6490" relation="include">
        </childnode>
        <childnode refid="6467" relation="include">
        </childnode>
        <childnode refid="6483" relation="include">
        </childnode>
      </node>
      <node id="6490">
        <label>array</label>
      </node>
      <node id="6475">
        <label>sstream</label>
      </node>
      <node id="6483">
        <label>nifty/tools/runtime_check.hxx</label>
        <link refid="runtime__check_8hxx"/>
        <childnode refid="6484" relation="include">
        </childnode>
        <childnode refid="6472" relation="include">
        </childnode>
        <childnode refid="6475" relation="include">
        </childnode>
        <childnode refid="6467" relation="include">
        </childnode>
        <childnode refid="6473" relation="include">
        </childnode>
        <childnode refid="6485" relation="include">
        </childnode>
      </node>
      <node id="6479">
        <label>iostream</label>
      </node>
      <node id="6471">
        <label>cstddef</label>
      </node>
      <node id="6487">
        <label>unordered_map</label>
      </node>
      <node id="6493">
        <label>nifty/parallel/threadpool.hxx</label>
        <link refid="threadpool_8hxx"/>
        <childnode refid="6482" relation="include">
        </childnode>
        <childnode refid="6494" relation="include">
        </childnode>
        <childnode refid="6495" relation="include">
        </childnode>
        <childnode refid="6467" relation="include">
        </childnode>
        <childnode refid="6496" relation="include">
        </childnode>
        <childnode refid="6497" relation="include">
        </childnode>
        <childnode refid="6498" relation="include">
        </childnode>
        <childnode refid="6499" relation="include">
        </childnode>
        <childnode refid="6472" relation="include">
        </childnode>
        <childnode refid="6485" relation="include">
        </childnode>
        <childnode refid="6500" relation="include">
        </childnode>
        <childnode refid="6501" relation="include">
        </childnode>
        <childnode refid="6483" relation="include">
        </childnode>
      </node>
      <node id="6486">
        <label>nifty/cgp/topological_grid.hxx</label>
        <link refid="topological__grid_8hxx"/>
        <childnode refid="6467" relation="include">
        </childnode>
        <childnode refid="6487" relation="include">
        </childnode>
        <childnode refid="6488" relation="include">
        </childnode>
        <childnode refid="6468" relation="include">
        </childnode>
        <childnode refid="6489" relation="include">
        </childnode>
        <childnode refid="6491" relation="include">
        </childnode>
        <childnode refid="6502" relation="include">
        </childnode>
        <childnode refid="6504" relation="include">
        </childnode>
        <childnode refid="6505" relation="include">
        </childnode>
      </node>
      <node id="6497">
        <label>mutex</label>
      </node>
      <node id="6492">
        <label>chrono</label>
      </node>
      <node id="6468">
        <label>nifty/marray/marray.hxx</label>
        <link refid="marray_8hxx"/>
        <childnode refid="6469" relation="include">
        </childnode>
        <childnode refid="6483" relation="include">
        </childnode>
      </node>
      <node id="6494">
        <label>thread</label>
      </node>
      <node id="6478">
        <label>set</label>
      </node>
      <node id="6476">
        <label>cstring</label>
      </node>
      <node id="6480">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6507">
        <label>/home/tbeier/src/nifty/include/nifty/cgp/features/geometric_features.hxx</label>
        <link refid="geometric__features_8hxx"/>
      </node>
      <node id="6509">
        <label>/home/tbeier/src/nifty/include/nifty/cgp/features.hxx</label>
        <link refid="features_8hxx"/>
      </node>
      <node id="6508">
        <label>/home/tbeier/src/nifty/include/nifty/cgp/features/topological_features.hxx</label>
        <link refid="topological__features_8hxx"/>
      </node>
      <node id="6506">
        <label>/home/tbeier/src/nifty/include/nifty/cgp/bounds.hxx</label>
        <link refid="bounds.hxx"/>
        <childnode refid="6507" relation="include">
        </childnode>
        <childnode refid="6508" relation="include">
        </childnode>
        <childnode refid="6509" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classnifty_1_1cgp_1_1Bounds" prot="public">nifty::cgp::Bounds</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBoundedByVector" prot="public">nifty::cgp::CellBoundedByVector</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBounds" prot="public">nifty::cgp::CellBounds</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_010_01_4" prot="public">nifty::cgp::CellBounds&lt; 2, 0 &gt;</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_011_01_4" prot="public">nifty::cgp::CellBounds&lt; 2, 1 &gt;</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBoundedBy" prot="public">nifty::cgp::CellBoundedBy</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_011_01_4" prot="public">nifty::cgp::CellBoundedBy&lt; 2, 1 &gt;</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_012_01_4" prot="public">nifty::cgp::CellBoundedBy&lt; 2, 2 &gt;</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBoundsVector" prot="public">nifty::cgp::CellBoundsVector</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBoundedByVector" prot="public">nifty::cgp::CellBoundedByVector</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_011_01_4" prot="public">nifty::cgp::CellBoundedByVector&lt; 2, 1 &gt;</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_012_01_4" prot="public">nifty::cgp::CellBoundedByVector&lt; 2, 2 &gt;</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1Bounds" prot="public">nifty::cgp::Bounds</innerclass>
    <innerclass refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4" prot="public">nifty::cgp::Bounds&lt; 2 &gt;</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1cgp">nifty::cgp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="marray_8hxx" kindref="compound">nifty/marray/marray.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="topological__grid_8hxx" kindref="compound">nifty/cgp/topological_grid.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arithmetic__array_8hxx" kindref="compound">nifty/array/arithmetic_array.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="boost__flat__set_8hxx" kindref="compound">nifty/container/boost_flat_set.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref>{</highlight></codeline>
<codeline lineno="12" refid="namespacenifty_1_1cgp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cgp{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM&gt;</highlight></codeline>
<codeline lineno="15" refid="classnifty_1_1cgp_1_1Bounds" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1Bounds" kindref="compound">Bounds</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CELL_TYPE&gt;</highlight></codeline>
<codeline lineno="18" refid="classnifty_1_1cgp_1_1CellBoundedByVector" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBoundedByVector" kindref="compound">CellBoundedByVector</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CELL_TYPE&gt;</highlight></codeline>
<codeline lineno="22" refid="classnifty_1_1cgp_1_1CellBounds" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBounds" kindref="compound">CellBounds</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="25" refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_010_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBounds" kindref="compound">CellBounds</ref>&lt;2,<sp/>0&gt;{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_010_01_4_1a974e66625691a8938bc5731f85b7b107" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_010_01_4_1a974e66625691a8938bc5731f85b7b107" kindref="member">CellBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>a<sp/>=<sp/>0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>b<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>c<sp/>=<sp/>0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>d<sp/>=<sp/>0):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_{uint32_t(0),<sp/>uint32_t(0),<sp/>uint32_t(0),uint32_t(0)<sp/>}{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenifty_1_1container_1ad9f6bbba60eac29f50d418e4c09d5c7b" kindref="member">nifty::container::BoostFlatSet&lt;uint32_t&gt;</ref><sp/>s;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(a);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(b);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(c);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d){</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(d);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(s.begin(),<sp/>s.end(),<sp/>data_);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46" refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_010_01_4_1ad09d74d0a8967d45487dd590cced23fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_010_01_4_1ad09d74d0a8967d45487dd590cced23fc" kindref="member">size</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[3]<sp/>==<sp/>0<sp/>?<sp/>3:4;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49" refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_010_01_4_1a7deca1e34b15a0a7c916065bcf418b5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>&amp;<sp/><ref refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_010_01_4_1a7deca1e34b15a0a7c916065bcf418b5f" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[i];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>data_[4];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="57" refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_011_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBounds" kindref="compound">CellBounds</ref>&lt;2,<sp/>1&gt;{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_011_01_4_1a6a562932e154f461651c3bfb111ddd11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_011_01_4_1a6a562932e154f461651c3bfb111ddd11" kindref="member">CellBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>a<sp/>=<sp/>0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>b<sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_[0]<sp/>=<sp/>std::min(a,<sp/>b);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_[1]<sp/>=<sp/>std::max(a,<sp/>b);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63" refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_011_01_4_1a4e0ec21b4b702cb9638b559f92bfa457" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_011_01_4_1a4e0ec21b4b702cb9638b559f92bfa457" kindref="member">size</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66" refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_011_01_4_1af8986efdf2c611ed6768fe7c746db9c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>&amp;<sp/><sp/><ref refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_011_01_4_1af8986efdf2c611ed6768fe7c746db9c8" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[i];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>data_[2];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CELL_TYPE&gt;</highlight></codeline>
<codeline lineno="74" refid="classnifty_1_1cgp_1_1CellBoundedBy" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBoundedBy" kindref="compound">CellBoundedBy</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>junctions<sp/>of<sp/>the<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="79" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_011_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBoundedBy" kindref="compound">CellBoundedBy</ref>&lt;2,<sp/>1&gt;{</highlight></codeline>
<codeline lineno="80" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_011_01_4_1abdb37afb9b659d234727be05e2560e42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBoundedByVector" kindref="compound">CellBoundedByVector</ref>&lt;2,1&gt;;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_011_01_4_1ad22d7f083d1f1ac4b379d19281b63986" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_011_01_4_1ad22d7f083d1f1ac4b379d19281b63986" kindref="member">CellBoundedBy</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data_{0,0}{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_011_01_4_1a11cba86b898c087a7b8a8c8d60e043d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_011_01_4_1a11cba86b898c087a7b8a8c8d60e043d4" kindref="member">size</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_[0]<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_[1]<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_011_01_4_1a99d19433fb86ffe10bc37e7e967c2c68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>&amp;<sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_011_01_4_1a99d19433fb86ffe10bc37e7e967c2c68" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[i];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>data_[2];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>edges<sp/>of<sp/>the<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="106" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_012_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBoundedBy" kindref="compound">CellBoundedBy</ref>&lt;2,<sp/>2&gt;{</highlight></codeline>
<codeline lineno="107" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_012_01_4_1ac693d488f7701019d117083cebc4508b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBoundedByVector" kindref="compound">CellBoundedByVector</ref>&lt;2,2&gt;;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_012_01_4_1a1a0bbe867a4d5959bd2dba49c9f61b51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_012_01_4_1a1a0bbe867a4d5959bd2dba49c9f61b51" kindref="member">CellBoundedBy</ref>()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data_(){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_012_01_4_1ab6e16339e9e0729de75c447d19b04228" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_012_01_4_1ab6e16339e9e0729de75c447d19b04228" kindref="member">size</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.size();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115" refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_012_01_4_1aa01c8770393f763d50049a5ed2318338" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>&amp;<sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedBy_3_012_00_012_01_4_1aa01c8770393f763d50049a5ed2318338" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[i];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>data_;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CELL_TYPE&gt;</highlight></codeline>
<codeline lineno="124" refid="classnifty_1_1cgp_1_1CellBoundsVector" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBoundsVector" kindref="compound">CellBoundsVector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;CellBounds&lt;DIM,<sp/>CELL_TYPE&gt;&gt;{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classnifty_1_1cgp_1_1CellBoundsVector_1a88cb0f4daae12ff33da3c2a17786cd08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1Bounds" kindref="compound">Bounds</ref>&lt;DIM&gt;;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classnifty_1_1cgp_1_1CellBoundsVector_1a4db6e267b7ec9e9bfd2db914354c49f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1array_1_1ArrayExtender" kindref="compound">array::StaticArray&lt;uint32_t, DIM +1 &gt;</ref><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundsVector_1a4db6e267b7ec9e9bfd2db914354c49f9" kindref="member">NumberOfCellsType</ref>;</highlight></codeline>
<codeline lineno="130" refid="classnifty_1_1cgp_1_1CellBoundsVector_1ae9467b3782214101f6ca95a0219bbbb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;CellBounds&lt;DIM,<sp/>CELL_TYPE&gt;&gt;<sp/><ref refid="classnifty_1_1cgp_1_1CellBoundsVector_1ae9467b3782214101f6ca95a0219bbbb6" kindref="member">BaseType</ref>;<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>BaseType::BaseType;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classnifty_1_1cgp_1_1CellBoundsVector_1a8ee7d5fa77d9e2c0239f37834e459937" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NumberOfCellsType<sp/>&amp;<sp/><ref refid="classnifty_1_1cgp_1_1CellBoundsVector_1a8ee7d5fa77d9e2c0239f37834e459937" kindref="member">numberOfCells</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfCells_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberOfCellsType<sp/>numberOfCells_;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CELL_TYPE&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CellBoundedByVector;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>junctions<sp/>of<sp/>the<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>&gt;</highlight></codeline>
<codeline lineno="147" refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_011_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBoundedByVector" kindref="compound">CellBoundedByVector</ref>&lt;2,1&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;CellBoundedBy&lt;2,<sp/>1&gt;<sp/>&gt;{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149" refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_011_01_4_1ae67b7b5bea502cf53791b047577eff16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;CellBoundedBy&lt;2,<sp/>1&gt;&gt;<sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_011_01_4_1ae67b7b5bea502cf53791b047577eff16" kindref="member">BaseType</ref>;<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>from<sp/>junctions<sp/>of<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_011_01_4_1a234e9640290d247f90261787b95fcc90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_011_01_4_1a234e9640290d247f90261787b95fcc90" kindref="member">CellBoundedByVector</ref>(</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundsVector" kindref="compound">CellBoundsVector&lt;2, 0&gt;</ref><sp/>&amp;<sp/>cell0Bounds</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>BaseType(cell0Bounds.numberOfCells()[1]){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell0Index=0;<sp/>cell0Index&lt;cell0Bounds.<ref refid="classnifty_1_1cgp_1_1CellBoundsVector_1a8ee7d5fa77d9e2c0239f37834e459937" kindref="member">numberOfCells</ref>()[0];<sp/>++cell0Index){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>bounds<sp/>=<sp/>cell0Bounds[cell0Index];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;bounds.size();<sp/>++i){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell1Label<sp/>=<sp/>bounds[i];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>boundedBy<sp/>=<sp/>this-&gt;operator[](cell1Label-1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>boundedBy.size();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundedBy.data_[s]<sp/>=<sp/>cell0Index<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>edges<sp/>of<sp/>the<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>&gt;</highlight></codeline>
<codeline lineno="172" refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_012_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1CellBoundedByVector" kindref="compound">CellBoundedByVector</ref>&lt;2,2&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;CellBoundedBy&lt;2,<sp/>2&gt;<sp/>&gt;{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="174" refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_012_01_4_1acf1174515755206bce20310f87af4747" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;CellBoundedBy&lt;2,<sp/>2&gt;&gt;<sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_012_01_4_1acf1174515755206bce20310f87af4747" kindref="member">BaseType</ref>;<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>from<sp/>regions<sp/>of<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_012_01_4_1af6f91256e589a2504b9362c4da176893" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundedByVector_3_012_00_012_01_4_1af6f91256e589a2504b9362c4da176893" kindref="member">CellBoundedByVector</ref>(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundsVector" kindref="compound">CellBoundsVector&lt;2, 1&gt;</ref><sp/>&amp;<sp/>cell1Bounds</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>BaseType(cell1Bounds.numberOfCells()[2]){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell1Index=0;<sp/>cell1Index&lt;cell1Bounds.<ref refid="classnifty_1_1cgp_1_1CellBoundsVector_1a8ee7d5fa77d9e2c0239f37834e459937" kindref="member">numberOfCells</ref>()[1];<sp/>++cell1Index){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>bounds<sp/>=<sp/>cell1Bounds[cell1Index];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;bounds.size();<sp/>++i){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell2Label<sp/>=<sp/>bounds[i];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>boundedBy<sp/>=<sp/>this-&gt;operator[](cell2Label-1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundedBy.data_.push_back(cell1Index);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM&gt;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Bounds;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="200" refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1cgp_1_1Bounds" kindref="compound">Bounds</ref>&lt;2&gt;{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4_1aa7c3be371d84aea05e916a30d859d7ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1array_1_1ArrayExtender" kindref="compound">array::StaticArray&lt;uint32_t, 2&gt;</ref><sp/><ref refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4_1aa7c3be371d84aea05e916a30d859d7ff" kindref="member">CoordinateType</ref>;</highlight></codeline>
<codeline lineno="204" refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4_1aa2abaddff55015fc8a158881f4e90571" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1array_1_1ArrayExtender" kindref="compound">array::StaticArray&lt;int64_t, 2&gt;</ref><sp/><sp/><ref refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4_1aa2abaddff55015fc8a158881f4e90571" kindref="member">SignedCoordinateType</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4_1a97f375ade92ba9870b7a31da87626337" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1cgp_1_1TopologicalGrid_3_012_01_4" kindref="compound">TopologicalGrid&lt;2&gt;</ref><sp/><ref refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4_1a97f375ade92ba9870b7a31da87626337" kindref="member">TopologicalGridType</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1Bounds" kindref="compound">Bounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TopologicalGridType<sp/>&amp;<sp/>tGrid);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CELL_TYPE&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundsVector" kindref="compound">CellBoundsVector&lt;2, CELL_TYPE&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="212" refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4_1a543c85c3c2a0bab5202423907ebcffa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4_1a543c85c3c2a0bab5202423907ebcffa1" kindref="member">bounds</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;CELL_TYPE&gt;(bounds_);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tuple&lt;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundsVector" kindref="compound">CellBoundsVector&lt;2, 0&gt;</ref>,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1cgp_1_1CellBoundsVector" kindref="compound">CellBoundsVector&lt;2, 1&gt;</ref></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>bounds_;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classnifty_1_1cgp_1_1Bounds_3_012_01_4_1aadcad33a9b3fa58464bae7aae61f3f5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1cgp_1_1Bounds" kindref="compound">Bounds&lt;2&gt;::Bounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1cgp_1_1TopologicalGrid_3_012_01_4" kindref="compound">TopologicalGridType</ref><sp/>&amp;<sp/>tGrid){</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(bounds_).resize(tGrid.<ref refid="classnifty_1_1cgp_1_1TopologicalGrid_3_012_01_4_1a648f9643f45483ad552c47fc4e6f2474" kindref="member">numberOfCells</ref>()[0]);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;1&gt;(bounds_).resize(tGrid.<ref refid="classnifty_1_1cgp_1_1TopologicalGrid_3_012_01_4_1a648f9643f45483ad552c47fc4e6f2474" kindref="member">numberOfCells</ref>()[1]);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(bounds_).numberOfCells_<sp/><sp/>=<sp/>tGrid.<ref refid="classnifty_1_1cgp_1_1TopologicalGrid_3_012_01_4_1a648f9643f45483ad552c47fc4e6f2474" kindref="member">numberOfCells</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;1&gt;(bounds_).numberOfCells_<sp/><sp/>=<sp/>tGrid.<ref refid="classnifty_1_1cgp_1_1TopologicalGrid_3_012_01_4_1a648f9643f45483ad552c47fc4e6f2474" kindref="member">numberOfCells</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenifty_1_1tools_1a81df2669bba7acc0ad9a253669a28ba4" kindref="member">nifty::tools::forEachCoordinate</ref>(tGrid.<ref refid="classnifty_1_1cgp_1_1TopologicalGrid_3_012_01_4_1a865eb87e808b65cc9aed40730b87f0f9" kindref="member">topologicalGridShape</ref>(),<sp/>[&amp;](</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1array_1_1ArrayExtender" kindref="compound">SignedCoordinateType</ref><sp/>&amp;<sp/>tCoord</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>even0<sp/>=<sp/>tCoord[0]<sp/>%<sp/>2<sp/>==<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>even1<sp/>=<sp/>tCoord[1]<sp/>%<sp/>2<sp/>==<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!even0<sp/>&amp;&amp;<sp/>!even1){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell0Label<sp/>=<sp/>tGrid(tCoord);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cell0Label){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(bounds_)[cell0Label-1]<sp/>=<sp/><ref refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_010_01_4" kindref="compound">CellBounds&lt;2,0&gt;</ref>(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tGrid(tCoord[0]-1,<sp/>tCoord[1]),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tGrid(tCoord[0]+1,<sp/>tCoord[1]),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tGrid(tCoord[0]<sp/><sp/>,<sp/>tCoord[1]+1),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tGrid(tCoord[0]<sp/><sp/>,<sp/>tCoord[1]-1)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(even0<sp/>&amp;&amp;<sp/>even1)){</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell1Label<sp/>=<sp/>tGrid(tCoord);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cell1Label){</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tCoord_<sp/>=<sp/><ref refid="classnifty_1_1array_1_1ArrayExtender" kindref="compound">CoordinateType</ref>({tCoord[0],tCoord[1]});</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>cell2LabelA,<sp/>cell2LabelB;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!even0){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell2LabelA=tGrid(<sp/>tCoord[0]-1,<sp/>tCoord[1]<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell2LabelB=tGrid(<sp/>tCoord[0]+1,<sp/>tCoord[1]<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell2LabelA=tGrid(<sp/>tCoord[0],<sp/>tCoord[1]-1);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell2LabelB=tGrid(<sp/>tCoord[0],<sp/>tCoord[1]+1);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;1&gt;(bounds_)[cell1Label-1]<sp/>=<sp/><ref refid="classnifty_1_1cgp_1_1CellBounds_3_012_00_011_01_4" kindref="compound">CellBounds&lt;2,1&gt;</ref>(cell2LabelA,cell2LabelB);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>the<sp/>bounded<sp/>by<sp/>relation<sp/>of<sp/>2<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>such<sp/>that<sp/>one<sp/>can<sp/>iterate<sp/>over<sp/>them<sp/>in<sp/>order??</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::cgp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/cgp/bounds.hxx"/>
  </compounddef>
</doxygen>

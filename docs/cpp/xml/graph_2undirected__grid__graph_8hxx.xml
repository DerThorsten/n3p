<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="graph_2undirected__grid__graph_8hxx" kind="file" language="C++">
    <compoundname>undirected_grid_graph.hxx</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">boost/iterator/counting_iterator.hpp</includes>
    <includes local="no">boost/iterator/transform_iterator.hpp</includes>
    <includes local="no">boost/iterator/iterator_facade.hpp</includes>
    <includes local="yes">andres/graph/grid-graph.hxx</includes>
    <includes refid="runtime__check_8hxx" local="yes">nifty/tools/runtime_check.hxx</includes>
    <includes refid="undirected__graph__base_8hxx" local="yes">nifty/graph/undirected_graph_base.hxx</includes>
    <includes refid="adjacency_8hxx" local="yes">nifty/graph/detail/adjacency.hxx</includes>
    <includes refid="graph__tags_8hxx" local="yes">nifty/graph/graph_tags.hxx</includes>
    <includes refid="threadpool_8hxx" local="yes">nifty/parallel/threadpool.hxx</includes>
    <includes refid="arithmetic__array_8hxx" local="yes">nifty/array/arithmetic_array.hxx</includes>
    <includedby refid="python_2graph_2undirected__grid__graph_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/python/graph/undirected_grid_graph.hxx</includedby>
    <incdepgraph>
      <node id="5394">
        <label>atomic</label>
      </node>
      <node id="5390">
        <label>nifty/tools/const_iterator_range.hxx</label>
        <link refid="const__iterator__range_8hxx"/>
      </node>
      <node id="5389">
        <label>functional</label>
      </node>
      <node id="5397">
        <label>queue</label>
      </node>
      <node id="5374">
        <label>limits</label>
      </node>
      <node id="5384">
        <label>iterator</label>
      </node>
      <node id="5367">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="5370">
        <label>cstdint</label>
      </node>
      <node id="5368">
        <label>andres/graph/grid-graph.hxx</label>
      </node>
      <node id="5375">
        <label>cmath</label>
      </node>
      <node id="5381">
        <label>cassert</label>
      </node>
      <node id="5366">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="5371">
        <label>stdexcept</label>
      </node>
      <node id="5388">
        <label>numeric</label>
      </node>
      <node id="5376">
        <label>nifty/graph/undirected_graph_base.hxx</label>
        <link refid="undirected__graph__base_8hxx"/>
        <childnode refid="5366" relation="include">
        </childnode>
        <childnode refid="5377" relation="include">
        </childnode>
        <childnode refid="5378" relation="include">
        </childnode>
        <childnode refid="5390" relation="include">
        </childnode>
      </node>
      <node id="5391">
        <label>nifty/graph/detail/adjacency.hxx</label>
        <link refid="adjacency_8hxx"/>
      </node>
      <node id="5382">
        <label>string</label>
      </node>
      <node id="5365">
        <label>boost/iterator/counting_iterator.hpp</label>
      </node>
      <node id="5380">
        <label>nifty/marray/andres/marray.hxx</label>
        <link refid="andres_2marray_8hxx"/>
        <childnode refid="5381" relation="include">
        </childnode>
        <childnode refid="5364" relation="include">
        </childnode>
        <childnode refid="5371" relation="include">
        </childnode>
        <childnode refid="5374" relation="include">
        </childnode>
        <childnode refid="5382" relation="include">
        </childnode>
        <childnode refid="5372" relation="include">
        </childnode>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5384" relation="include">
        </childnode>
        <childnode refid="5373" relation="include">
        </childnode>
        <childnode refid="5385" relation="include">
        </childnode>
        <childnode refid="5386" relation="include">
        </childnode>
        <childnode refid="5387" relation="include">
        </childnode>
        <childnode refid="5388" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5398">
        <label>condition_variable</label>
      </node>
      <node id="5395">
        <label>future</label>
      </node>
      <node id="5373">
        <label>vector</label>
      </node>
      <node id="5377">
        <label>nifty/graph/graph_tags.hxx</label>
        <link refid="graph__tags_8hxx"/>
      </node>
      <node id="5399">
        <label>nifty/array/arithmetic_array.hxx</label>
        <link refid="arithmetic__array_8hxx"/>
        <childnode refid="5400" relation="include">
        </childnode>
        <childnode refid="5373" relation="include">
        </childnode>
        <childnode refid="5369" relation="include">
        </childnode>
      </node>
      <node id="5400">
        <label>array</label>
      </node>
      <node id="5372">
        <label>sstream</label>
      </node>
      <node id="5369">
        <label>nifty/tools/runtime_check.hxx</label>
        <link refid="runtime__check_8hxx"/>
        <childnode refid="5370" relation="include">
        </childnode>
        <childnode refid="5371" relation="include">
        </childnode>
        <childnode refid="5372" relation="include">
        </childnode>
        <childnode refid="5373" relation="include">
        </childnode>
        <childnode refid="5374" relation="include">
        </childnode>
        <childnode refid="5375" relation="include">
        </childnode>
      </node>
      <node id="5363">
        <label>/home/tbeier/src/nifty/include/nifty/graph/undirected_grid_graph.hxx</label>
        <link refid="graph_2undirected__grid__graph_8hxx"/>
        <childnode refid="5364" relation="include">
        </childnode>
        <childnode refid="5365" relation="include">
        </childnode>
        <childnode refid="5366" relation="include">
        </childnode>
        <childnode refid="5367" relation="include">
        </childnode>
        <childnode refid="5368" relation="include">
        </childnode>
        <childnode refid="5369" relation="include">
        </childnode>
        <childnode refid="5376" relation="include">
        </childnode>
        <childnode refid="5391" relation="include">
        </childnode>
        <childnode refid="5377" relation="include">
        </childnode>
        <childnode refid="5392" relation="include">
        </childnode>
        <childnode refid="5399" relation="include">
        </childnode>
      </node>
      <node id="5378">
        <label>nifty/graph/graph_maps.hxx</label>
        <link refid="graph__maps_8hxx"/>
        <childnode refid="5379" relation="include">
        </childnode>
      </node>
      <node id="5386">
        <label>iostream</label>
      </node>
      <node id="5364">
        <label>cstddef</label>
      </node>
      <node id="5392">
        <label>nifty/parallel/threadpool.hxx</label>
        <link refid="threadpool_8hxx"/>
        <childnode refid="5389" relation="include">
        </childnode>
        <childnode refid="5393" relation="include">
        </childnode>
        <childnode refid="5394" relation="include">
        </childnode>
        <childnode refid="5373" relation="include">
        </childnode>
        <childnode refid="5395" relation="include">
        </childnode>
        <childnode refid="5396" relation="include">
        </childnode>
        <childnode refid="5397" relation="include">
        </childnode>
        <childnode refid="5398" relation="include">
        </childnode>
        <childnode refid="5371" relation="include">
        </childnode>
        <childnode refid="5375" relation="include">
        </childnode>
        <childnode refid="5366" relation="include">
        </childnode>
        <childnode refid="5365" relation="include">
        </childnode>
        <childnode refid="5369" relation="include">
        </childnode>
      </node>
      <node id="5396">
        <label>mutex</label>
      </node>
      <node id="5379">
        <label>nifty/marray/marray.hxx</label>
        <link refid="marray_8hxx"/>
        <childnode refid="5380" relation="include">
        </childnode>
        <childnode refid="5369" relation="include">
        </childnode>
      </node>
      <node id="5393">
        <label>thread</label>
      </node>
      <node id="5385">
        <label>set</label>
      </node>
      <node id="5383">
        <label>cstring</label>
      </node>
      <node id="5387">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5402">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/undirected_grid_graph.hxx</label>
        <link refid="python_2graph_2undirected__grid__graph_8hxx"/>
        <childnode refid="5403" relation="include">
        </childnode>
      </node>
      <node id="5403">
        <label>/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/pixel_wise.hxx</label>
        <link refid="pixel__wise_8hxx"/>
      </node>
      <node id="5401">
        <label>/home/tbeier/src/nifty/include/nifty/graph/undirected_grid_graph.hxx</label>
        <link refid="graph_2undirected__grid__graph_8hxx"/>
        <childnode refid="5402" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter" prot="public">nifty::graph::detail_graph::UndirectedGridGraphIter</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1UnaryFunction" prot="public">nifty::graph::detail_graph::UndirectedGridGraphIter::UnaryFunction</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter" prot="public">nifty::graph::detail_graph::UndirectedGridGraphIter::AdjacencyIter</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1NodeIter" prot="public">nifty::graph::detail_graph::UndirectedGridGraphIter::NodeIter</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1EdgeIter" prot="public">nifty::graph::detail_graph::UndirectedGridGraphIter::EdgeIter</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1UndirectedGridGraph" prot="public">nifty::graph::UndirectedGridGraph</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4" prot="public">nifty::graph::UndirectedGridGraph&lt; DIM, true &gt;</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph">nifty::graph</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph_1_1detail__graph">nifty::graph::detail_graph</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iterator/counting_iterator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iterator/transform_iterator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iterator/iterator_facade.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;andres/graph/grid-graph.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="runtime__check_8hxx" kindref="compound">nifty/tools/runtime_check.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="undirected__graph__base_8hxx" kindref="compound">nifty/graph/undirected_graph_base.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="adjacency_8hxx" kindref="compound">nifty/graph/detail/adjacency.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graph__tags_8hxx" kindref="compound">nifty/graph/graph_tags.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="threadpool_8hxx" kindref="compound">nifty/parallel/threadpool.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arithmetic__array_8hxx" kindref="compound">nifty/array/arithmetic_array.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">graph{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail_graph{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SIMPLE_NH&gt;</highlight></codeline>
<codeline lineno="43" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter" kindref="compound">UndirectedGridGraphIter</ref>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1a562bd40c2ea973c15b828062247ddd1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>andres::graph::GridGraph&lt;DIM&gt;<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1a562bd40c2ea973c15b828062247ddd1f" kindref="member">AGridGraph</ref>;</highlight></codeline>
<codeline lineno="46" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1a824924927d819949af2370aa628af595" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AGridGraph::AdjacencyIterator<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1a824924927d819949af2370aa628af595" kindref="member">AGridGraphAdjacencyIter</ref>;</highlight></codeline>
<codeline lineno="47" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1ab102d464df39aae71f7482baa37d8966" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UndirectedAdjacency&lt;int64_t,int64_t,int64_t,int64_t&gt;<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1ab102d464df39aae71f7482baa37d8966" kindref="member">NodeAdjacency</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1UnaryFunction" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1UnaryFunction" kindref="compound">UnaryFunction</ref>{</highlight></codeline>
<codeline lineno="50" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1UnaryFunction_1a4a60979fef293486b48029f101ceaf66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NodeAdjacency<sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1UnaryFunction_1a4a60979fef293486b48029f101ceaf66" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ADJ&gt;</highlight></codeline>
<codeline lineno="52" refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1UnaryFunction_1a6e0c8bc7a5f99bca449d7e8337f5bdd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeAdjacency<sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1UnaryFunction_1a6e0c8bc7a5f99bca449d7e8337f5bdd6" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ADJ<sp/>&amp;<sp/>adjacency)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1ab102d464df39aae71f7482baa37d8966" kindref="member">NodeAdjacency</ref>(adjacency.vertex(),<sp/>adjacency.vertex());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::transform_iterator&lt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1UnaryFunction" kindref="compound">UnaryFunction</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AGridGraph::AdjacencyIterator,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1ab102d464df39aae71f7482baa37d8966" kindref="member">NodeAdjacency</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeAdjacency</highlight></codeline>
<codeline lineno="62" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1a0b2569d896d215175b54ed1f439ad5a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1a0b2569d896d215175b54ed1f439ad5a5" kindref="member">OldAdjacencyIter</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter" kindref="compound">AdjacencyIter</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::iterator_facade&lt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjacencyIter,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeAdjacency,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::random_access_iterator_tag,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>NodeAdjacency<sp/>&amp;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a45cfeba6901be7c013bfbd4b2f1fe99e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a45cfeba6901be7c013bfbd4b2f1fe99e" kindref="member">AdjacencyIter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AGridGraphAdjacencyIter<sp/>&amp;<sp/>iter)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>iter_(iter),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjacency_(){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a7f55cdc0ac39b213ceb202f496cf8ec3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a7f55cdc0ac39b213ceb202f496cf8ec3" kindref="member">equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter" kindref="compound">AdjacencyIter</ref><sp/>&amp;<sp/>other)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter_<sp/>==<sp/>other.iter_;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1ad6a4c23c77e26cd510a5e123eb39ad8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1ad6a4c23c77e26cd510a5e123eb39ad8e" kindref="member">increment</ref>(){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter_;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a8703126f4b9dd746d511980501bc8a51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a8703126f4b9dd746d511980501bc8a51" kindref="member">dencrement</ref>(){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--iter_;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1aea682eb4075c5a9f29e78aa27db56df1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1aea682eb4075c5a9f29e78aa27db56df1" kindref="member">advance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>n){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter_+=n;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a0c0da4fe12cc98b319b357d50b89951d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ptrdiff_t<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a0c0da4fe12cc98b319b357d50b89951d" kindref="member">distance_to</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter" kindref="compound">AdjacencyIter</ref><sp/>&amp;<sp/>other)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::distance(iter_,<sp/>other.iter_);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a2163ccecdb8b5ca962e1ce32b96802d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NodeAdjacency<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter_1a2163ccecdb8b5ca962e1ce32b96802d6" kindref="member">dereference</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjacency_<sp/>=<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1ab102d464df39aae71f7482baa37d8966" kindref="member">NodeAdjacency</ref>(iter_-&gt;vertex(),<sp/>iter_-&gt;edge());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adjacency_;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>AGridGraphAdjacencyIter<sp/>iter_;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>NodeAdjacency<sp/>adjacency_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1NodeIter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1NodeIter" kindref="compound">NodeIter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;::counting_iterator;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;::operator=;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1EdgeIter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1EdgeIter" kindref="compound">EdgeIter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;::counting_iterator;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::counting_iterator&lt;int64_t&gt;::operator=;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SIMPLE_NH&gt;</highlight></codeline>
<codeline lineno="121" refid="classnifty_1_1graph_1_1UndirectedGridGraph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph" kindref="compound">UndirectedGridGraph</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM&gt;</highlight></codeline>
<codeline lineno="126" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph" kindref="compound">UndirectedGridGraph</ref>&lt;DIM,true&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGraphBase" kindref="compound">UndirectedGraphBase</ref>&lt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UndirectedGridGraph&lt;DIM,<sp/>true&gt;,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>detail_graph::UndirectedGridGraphIter&lt;DIM,true&gt;::NodeIter,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>detail_graph::UndirectedGridGraphIter&lt;DIM,true&gt;::EdgeIter,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>detail_graph::UndirectedGridGraphIter&lt;DIM,true&gt;::AdjacencyIter</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>andres::graph::GridGraph&lt;DIM&gt;<sp/>AndresGridGraphType;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AndresGridGraphType::VertexCoordinate<sp/>AndresVertexCoordinate;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1abea92f7d305119d361e2189b00e495ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1array_1_1ArrayExtender" kindref="compound">nifty::array::StaticArray&lt;int64_t, DIM&gt;</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1abea92f7d305119d361e2189b00e495ba" kindref="member">ShapeType</ref>;</highlight></codeline>
<codeline lineno="139" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a45f38cce72559c7bdefa3d219486bae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1array_1_1ArrayExtender" kindref="compound">nifty::array::StaticArray&lt;int64_t, DIM&gt;</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a45f38cce72559c7bdefa3d219486bae4" kindref="member">CoordinateType</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a977e01bd675cc7d454ce18417c6e0397" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1NodeIter" kindref="compound">detail_graph::UndirectedGridGraphIter&lt;DIM,true&gt;::NodeIter</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a977e01bd675cc7d454ce18417c6e0397" kindref="member">NodeIter</ref>;</highlight></codeline>
<codeline lineno="142" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1adc2fd416d91079b5450887b0c2c3cf05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1EdgeIter" kindref="compound">detail_graph::UndirectedGridGraphIter&lt;DIM,true&gt;::EdgeIter</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1adc2fd416d91079b5450887b0c2c3cf05" kindref="member">EdgeIter</ref>;</highlight></codeline>
<codeline lineno="143" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a9779969eb8762908d43eab3d9d3b17b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1UndirectedGridGraphIter_1_1AdjacencyIter" kindref="compound">detail_graph::UndirectedGridGraphIter&lt;DIM,true&gt;::AdjacencyIter</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a9779969eb8762908d43eab3d9d3b17b1" kindref="member">AdjacencyIter</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a0d9a24c893bf3f5f0cd61873bb77dfe1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1ContiguousTag" kindref="compound">ContiguousTag</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a0d9a24c893bf3f5f0cd61873bb77dfe1" kindref="member">EdgeIdTag</ref>;</highlight></codeline>
<codeline lineno="147" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a35ae15ae07ebf58ef26916b417fba878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1ContiguousTag" kindref="compound">ContiguousTag</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a35ae15ae07ebf58ef26916b417fba878" kindref="member">NodeIdTag</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1aca991599ad4c8532f2d07ed7bc507449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1SortedTag" kindref="compound">SortedTag</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1aca991599ad4c8532f2d07ed7bc507449" kindref="member">EdgeIdOrderTag</ref>;</highlight></codeline>
<codeline lineno="150" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1accf075c1b2a1820d15eea368562c93aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structnifty_1_1graph_1_1SortedTag" kindref="compound">SortedTag</ref><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1accf075c1b2a1820d15eea368562c93aa" kindref="member">NodeIdOrderTag</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ae07e559f9d33b543c69a6466bbc10348" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ae07e559f9d33b543c69a6466bbc10348" kindref="member">UndirectedGridGraph</ref>()</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gridGraph_(){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="159" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a6776a2c7c54036eb5c4df8045c6a7d44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a6776a2c7c54036eb5c4df8045c6a7d44" kindref="member">UndirectedGridGraph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1array_1_1ArrayExtender" kindref="compound">nifty::array::StaticArray&lt;T, DIM&gt;</ref><sp/>&amp;<sp/>shape)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gridGraph_(){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AndresVertexCoordinate<sp/>ashape;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(shape.rbegin(),<sp/>shape.rend(),<sp/>ashape.begin());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridGraph_.assign(ashape);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="169" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ad966a5e524bba56b8096c999d41bfeae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ad966a5e524bba56b8096c999d41bfeae" kindref="member">assign</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1array_1_1ArrayExtender" kindref="compound">nifty::array::StaticArray&lt;T, DIM&gt;</ref><sp/>&amp;<sp/>shape){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AndresVertexCoordinate<sp/>ashape;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(shape.rbegin(),<sp/>shape.rend(),<sp/>ashape.begin());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridGraph_.assign(ashape);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>assign(const<sp/>uint64_t<sp/>numberOfNodes<sp/>=<sp/>0,<sp/>const<sp/>uint64_t<sp/>reserveNumberOfEdges<sp/>=<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MUST<sp/>IMPL<sp/>INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a061e5fc87fa6db797c9dce8aa7f49693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a061e5fc87fa6db797c9dce8aa7f49693" kindref="member">u</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>e)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gridGraph_.vertexOfEdge(e,0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a931c1a92fb28eab2e47e7abb5a2cd941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a931c1a92fb28eab2e47e7abb5a2cd941" kindref="member">v</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>e)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gridGraph_.vertexOfEdge(e,1);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a91ed1b6c9e79f2fa44d451675e832aee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a91ed1b6c9e79f2fa44d451675e832aee" kindref="member">findEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>gridGraph_.findEdge(u,v);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.first)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r.second;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a97394903dbcf9f0f673a66d0a70df5ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a97394903dbcf9f0f673a66d0a70df5ff" kindref="member">nodeIdUpperBound</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfNodes()<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>numberOfNodes()-1;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ad632562621035fd08b7a69c7da651f5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ad632562621035fd08b7a69c7da651f5d" kindref="member">edgeIdUpperBound</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfEdges()<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>numberOfEdges()-1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1abcddb53f15e1bb22a2a344433d0b2445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1abcddb53f15e1bb22a2a344433d0b2445" kindref="member">numberOfEdges</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gridGraph_.numberOfEdges();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a1530c652a7e0537f291795360180f1b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a1530c652a7e0537f291795360180f1b3" kindref="member">numberOfNodes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gridGraph_.numberOfVertices();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a80d8927ae70538acbb291a3287527dd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NodeIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a80d8927ae70538acbb291a3287527dd6" kindref="member">nodesBegin</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NodeIter(0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a43de71583952ce340db152eff0b3cd12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NodeIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a43de71583952ce340db152eff0b3cd12" kindref="member">nodesEnd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NodeIter(this-&gt;numberOfNodes());</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ac02f2089caac5d43fbad8fe0e7cb164f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgeIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ac02f2089caac5d43fbad8fe0e7cb164f" kindref="member">edgesBegin</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EdgeIter(0);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a8f736738431d2684bec9c5cc2a0bbfcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgeIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a8f736738431d2684bec9c5cc2a0bbfcd" kindref="member">edgesEnd</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EdgeIter(this-&gt;numberOfEdges());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1afa50731ffdc02fa8d25caf4edafc1474" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1afa50731ffdc02fa8d25caf4edafc1474" kindref="member">adjacencyBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AdjacencyIter(gridGraph_.adjacenciesFromVertexBegin(node));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a2cd326774c5b5656af52a2e1690f3546" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a2cd326774c5b5656af52a2e1690f3546" kindref="member">adjacencyEnd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AdjacencyIter(gridGraph_.adjacenciesFromVertexEnd(node));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1af0463bdc61a84d1120556d53f8740c1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1af0463bdc61a84d1120556d53f8740c1b" kindref="member">adjacencyOutBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AdjacencyIter(gridGraph_.adjacenciesFromVertexBegin(node));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a0f11853661461e518fecbf8a18ed9a07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>AdjacencyIter<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a0f11853661461e518fecbf8a18ed9a07" kindref="member">adjacencyOutEnd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AdjacencyIter(gridGraph_.adjacenciesFromVertexEnd(node));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>optional<sp/>(with<sp/>default<sp/>impl<sp/>in<sp/>base)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::pair&lt;int64_t,int64_t&gt;<sp/>uv(const<sp/>int64_t<sp/>e)const;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="242" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ac559f5d9e568eb7979b6f6c978a3cbc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1ac559f5d9e568eb7979b6f6c978a3cbc1" kindref="member">forEachEdge</ref>(F<sp/>&amp;&amp;<sp/>f)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>edge=0;<sp/>edge&lt;<sp/>numberOfEdges();<sp/>++edge){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(edge);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="249" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a2754658f397ec50145cea160431543ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a2754658f397ec50145cea160431543ad" kindref="member">forEachNode</ref>(F<sp/>&amp;&amp;<sp/>f)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>node=0;<sp/>node&lt;<sp/>numberOfNodes();<sp/>++node){</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(node);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serialization<sp/>de-serialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a4b12d3a469349695a992fd8d0302556b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a4b12d3a469349695a992fd8d0302556b" kindref="member">serializationSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DIM<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITER&gt;</highlight></codeline>
<codeline lineno="263" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a89772b8b8c60820c32dab6b1d5156a55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a89772b8b8c60820c32dab6b1d5156a55" kindref="member">serialize</ref>(ITER<sp/>iter)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d=0;<sp/>d&lt;DIM;<sp/>++d){</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>gridGraph_.shape(d);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>nh?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITER&gt;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deserialize(ITER<sp/>iter);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IMAGE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>BINARY_FUNCTOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_MAP&gt;</highlight></codeline>
<codeline lineno="290" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a098c2cac9dfa7bd48bf68c89b046014c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a098c2cac9dfa7bd48bf68c89b046014c" kindref="member">imageToEdgeMap</ref>(</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IMAGE<sp/>&amp;<sp/>image,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BINARY_FUNCTOR<sp/>binaryFunctor,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EDGE_MAP<sp/>&amp;<sp/>edgeMap</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edge<sp/>:<sp/>this-&gt;edges()){</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uv<sp/>=<sp/>this-&gt;uv(edge);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoordinateType<sp/>cU,cV;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeToCoordinate(uv.first,<sp/><sp/>cU);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeToCoordinate(uv.second,<sp/>cV);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uVal<sp/>=<sp/>image(cU.asStdArray());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vVal<sp/>=<sp/>image(cU.asStdArray());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMap[edge]<sp/>=<sp/>binaryFunctor(uVal,<sp/>vVal);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IMAGE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDGE_MAP&gt;</highlight></codeline>
<codeline lineno="321" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1abb575399f65b3e51f83e957105bea6a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1abb575399f65b3e51f83e957105bea6a2" kindref="member">imageToInterpixelEdgeMap</ref>(</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IMAGE<sp/>&amp;<sp/>image,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EDGE_MAP<sp/>&amp;<sp/>edgeMap</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d=0;<sp/>d&lt;DIM;<sp/>++d){</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="runtime__check_8hxx_1a7fdb092c4b634ea3958b7d7aa2f801eb" kindref="member">NIFTY_CHECK_OP</ref>(shape(d)*2-1,<sp/>==,<sp/>image.shape(d),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>shape<sp/>foer<sp/>image<sp/>to<sp/>interpixel<sp/>edge<sp/>map&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edge<sp/>:<sp/>this-&gt;edges()){</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uv<sp/>=<sp/>this-&gt;uv(edge);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoordinateType<sp/>cU,cV;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeToCoordinate(uv.first,<sp/><sp/>cU);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeToCoordinate(uv.second,<sp/>cV);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uVal<sp/>=<sp/>image(cU.asStdArray());</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cU<sp/>+=<sp/>cV;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMap[edge]<sp/>=<sp/>image(cU.asStdArray());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a206b74a50e85536e1adcb973a462b948" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a206b74a50e85536e1adcb973a462b948" kindref="member">shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>d)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gridGraph_.shape(DIM-1-d);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>COORDINATE<sp/>RELATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a4ef30ed981eacce6fa7df7e3fafcdf46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CoordinateType<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a4ef30ed981eacce6fa7df7e3fafcdf46" kindref="member">nodeToCoordinate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>node)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoordinateType<sp/>ret;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeToCoordinate(node,<sp/>ret);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_COORDINATE&gt;</highlight></codeline>
<codeline lineno="355" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1aaeddd017b04ed56d66c0626b0919b664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1aaeddd017b04ed56d66c0626b0919b664" kindref="member">nodeToCoordinate</ref>(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>node,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NODE_COORDINATE<sp/>&amp;<sp/>coordinate</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AndresVertexCoordinate<sp/>aCoordinate;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridGraph_.vertex(node,<sp/>aCoordinate);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d=0;<sp/>d&lt;DIM;<sp/>++d){</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinate[d]<sp/>=<sp/>aCoordinate[DIM-1-d];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_COORDINATE&gt;</highlight></codeline>
<codeline lineno="367" refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a232a767bec4c9a0cf9fb4e9a14945112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classnifty_1_1graph_1_1UndirectedGridGraph_3_01DIM_00_01true_01_4_1a232a767bec4c9a0cf9fb4e9a14945112" kindref="member">coordianteToNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NODE_COORDINATE<sp/>&amp;<sp/>coordinate)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AndresVertexCoordinate<sp/>aCoordinate;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d=0;<sp/>d&lt;DIM;<sp/>++d){</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aCoordinate[DIM-1-d]<sp/>=<sp/>coordinate[d];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gridGraph_.vertex(aCoordinate);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>andres::graph::GridGraph&lt;DIM&gt;<sp/>gridGraph_;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/undirected_grid_graph.hxx"/>
  </compounddef>
</doxygen>

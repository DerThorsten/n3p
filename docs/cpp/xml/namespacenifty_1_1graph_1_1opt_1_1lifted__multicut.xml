<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut" kind="namespace" language="C++">
    <compoundname>nifty::graph::opt::lifted_multicut</compoundname>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1ChainedSolvers" prot="public">nifty::graph::opt::lifted_multicut::ChainedSolvers</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1FusionMove" prot="public">nifty::graph::opt::lifted_multicut::FusionMove</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1FusionMoveBased" prot="public">nifty::graph::opt::lifted_multicut::FusionMoveBased</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutAndresGreedyAdditive" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutAndresGreedyAdditive</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutAndresKernighanLin" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutAndresKernighanLin</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutBase" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutBase</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutGreedyAdditive" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutGreedyAdditive</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutIlp" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutIlp</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutKernighanLin" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutKernighanLin</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutMp" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutMp</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjective" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutObjective</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjectiveBase" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutObjectiveBase</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjectiveName" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutObjectiveName</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjectiveName_3_01LearnableLift9b306d43ea6163b268db721a94da381d" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutObjectiveName&lt; LearnableLiftedMulticutObjective&lt; GRAPH, T &gt; &gt;</innerclass>
    <innerclass refid="structnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjectiveName_3_01PyDefaultMult7d81b84533086244a956eef2fae6e1d8" prot="public">nifty::graph::opt::lifted_multicut::LiftedMulticutObjectiveName&lt; PyDefaultMulticutObjective&lt; GRAPH &gt; &gt;</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1PixelWiseLmcConnetedComponentsFusion" prot="public">nifty::graph::opt::lifted_multicut::PixelWiseLmcConnetedComponentsFusion</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1PixelWiseLmcConnetedComponentsFusion_3_012_01_4" prot="public">nifty::graph::opt::lifted_multicut::PixelWiseLmcConnetedComponentsFusion&lt; 2 &gt;</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1PixelWiseLmcConnetedComponentsFusion_3_013_01_4" prot="public">nifty::graph::opt::lifted_multicut::PixelWiseLmcConnetedComponentsFusion&lt; 3 &gt;</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1PixelWiseLmcObjective" prot="public">nifty::graph::opt::lifted_multicut::PixelWiseLmcObjective</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1ProposalGeneratorBase" prot="public">nifty::graph::opt::lifted_multicut::ProposalGeneratorBase</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1ProposalGeneratorFactory" prot="public">nifty::graph::opt::lifted_multicut::ProposalGeneratorFactory</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1ProposalGeneratorFactoryBase" prot="public">nifty::graph::opt::lifted_multicut::ProposalGeneratorFactoryBase</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1PyLiftedMulticutBase" prot="public">nifty::graph::opt::lifted_multicut::PyLiftedMulticutBase</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1PyLiftedMulticutVisitorBase" prot="public">nifty::graph::opt::lifted_multicut::PyLiftedMulticutVisitorBase</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1PyProposalGeneratorFactoryBase" prot="public">nifty::graph::opt::lifted_multicut::PyProposalGeneratorFactoryBase</innerclass>
    <innerclass refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1WatershedProposalGenerator" prot="public">nifty::graph::opt::lifted_multicut::WatershedProposalGenerator</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut_1a3350124f8869505fecf39d697b9b2718" prot="public" static="no">
        <type><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1VisitorBase" kindref="compound">nifty::graph::opt::common::VisitorBase</ref>&lt; <ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutBase" kindref="compound">LiftedMulticutBase</ref>&lt; OBJECTIVE &gt; &gt;</type>
        <definition>using nifty::graph::opt::lifted_multicut::LiftedMulticutVisitorBase = typedef nifty::graph::opt::common::VisitorBase&lt; LiftedMulticutBase&lt;OBJECTIVE&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LiftedMulticutVisitorBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_visitor_base.hxx" line="19" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_visitor_base.hxx" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut_1a820671dadb730a13fd57f011e3c0f6ce" prot="public" static="no">
        <type><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1VerboseVisitor" kindref="compound">nifty::graph::opt::common::VerboseVisitor</ref>&lt; <ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutBase" kindref="compound">LiftedMulticutBase</ref>&lt; OBJECTIVE &gt; &gt;</type>
        <definition>using nifty::graph::opt::lifted_multicut::LiftedMulticutVerboseVisitor = typedef nifty::graph::opt::common::VerboseVisitor&lt; LiftedMulticutBase&lt;OBJECTIVE&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LiftedMulticutVerboseVisitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_visitor_base.hxx" line="22" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_visitor_base.hxx" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut_1a5004a60975a330999c409f23ae3b74e9" prot="public" static="no">
        <type><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1EmptyVisitor" kindref="compound">nifty::graph::opt::common::EmptyVisitor</ref>&lt; <ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutBase" kindref="compound">LiftedMulticutBase</ref>&lt; OBJECTIVE &gt; &gt;</type>
        <definition>using nifty::graph::opt::lifted_multicut::LiftedMulticutEmptyVisitor = typedef nifty::graph::opt::common::EmptyVisitor&lt; LiftedMulticutBase&lt;OBJECTIVE&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LiftedMulticutEmptyVisitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_visitor_base.hxx" line="25" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_visitor_base.hxx" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut_1a2b56d863219c7b968e884cc86a4e56a7" prot="public" static="no">
        <type><ref refid="classnifty_1_1graph_1_1opt_1_1common_1_1VisitorProxy" kindref="compound">nifty::graph::opt::common::VisitorProxy</ref>&lt; <ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutBase" kindref="compound">LiftedMulticutBase</ref>&lt; OBJECTIVE &gt; &gt;</type>
        <definition>using nifty::graph::opt::lifted_multicut::LiftedMulticutVisitorProxy = typedef nifty::graph::opt::common::VisitorProxy&lt; LiftedMulticutBase&lt;OBJECTIVE&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LiftedMulticutVisitorProxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_visitor_base.hxx" line="28" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_multicut_visitor_base.hxx" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut_1a50eb6f4cbd7b34af026c6031669b85cb" prot="public" static="no">
        <type><ref refid="classnifty_1_1graph_1_1opt_1_1lifted__multicut_1_1LiftedMulticutObjective" kindref="compound">LiftedMulticutObjective</ref>&lt; GRAPH, double &gt;</type>
        <definition>using nifty::graph::opt::lifted_multicut::PyDefaultMulticutObjective = typedef LiftedMulticutObjective&lt;GRAPH, double&gt;</definition>
        <argsstring></argsstring>
        <name>PyDefaultMulticutObjective</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/python/graph/opt/lifted_multicut/lifted_multicut_objective.hxx" line="17" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/python/graph/opt/lifted_multicut/lifted_multicut_objective.hxx" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut_1a65f5a56b03ea304933a314eae9078f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LIFTED_MULTICUT_OBJECTIVE</type>
          </param>
          <param>
            <type>class EDGE_INDICATORS</type>
          </param>
          <param>
            <type>class EDGE_SIZES</type>
          </param>
          <param>
            <type>class NODE_SIZES</type>
          </param>
          <param>
            <type>class OUT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::graph::opt::lifted_multicut::liftedUcmFeatures</definition>
        <argsstring>(const LIFTED_MULTICUT_OBJECTIVE &amp;objective, const EDGE_INDICATORS &amp;edgeIndicators, const EDGE_SIZES &amp;edgeSizes, const NODE_SIZES &amp;nodeSizes, std::vector&lt; double &gt; sizeRegularizers, OUT &amp;out)</argsstring>
        <name>liftedUcmFeatures</name>
        <param>
          <type>const LIFTED_MULTICUT_OBJECTIVE &amp;</type>
          <declname>objective</declname>
        </param>
        <param>
          <type>const EDGE_INDICATORS &amp;</type>
          <declname>edgeIndicators</declname>
        </param>
        <param>
          <type>const EDGE_SIZES &amp;</type>
          <declname>edgeSizes</declname>
        </param>
        <param>
          <type>const NODE_SIZES &amp;</type>
          <declname>nodeSizes</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>sizeRegularizers</declname>
        </param>
        <param>
          <type>OUT &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_graph_features.hxx" line="27" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_graph_features.hxx" bodystart="27" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut_1aa59f63a687c2d9216d3abd0d9926e06c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LIFTED_MULTICUT_OBJECTIVE</type>
          </param>
          <param>
            <type>class EDGE_INDICATORS</type>
          </param>
          <param>
            <type>class EDGE_SIZES</type>
          </param>
          <param>
            <type>class NODE_SIZES</type>
          </param>
          <param>
            <type>class OUT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nifty::graph::opt::lifted_multicut::liftedShortedPathFeatures</definition>
        <argsstring>(const LIFTED_MULTICUT_OBJECTIVE &amp;objective, const EDGE_INDICATORS &amp;edgeIndicators, std::vector&lt; double &gt; offsets, OUT &amp;out, const int nThreads=-1)</argsstring>
        <name>liftedShortedPathFeatures</name>
        <param>
          <type>const LIFTED_MULTICUT_OBJECTIVE &amp;</type>
          <declname>objective</declname>
        </param>
        <param>
          <type>const EDGE_INDICATORS &amp;</type>
          <declname>edgeIndicators</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>OUT &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nThreads</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_graph_features.hxx" line="127" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/lifted_graph_features.hxx" bodystart="127" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut_1a1f91d320198cd16ee6b0867a08f1e09e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class D_WEIGHTS</type>
          </param>
          <param>
            <type>class D_OFFSETS</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto nifty::graph::opt::lifted_multicut::pixel_wise_lmc_edge_gt_2d</definition>
        <argsstring>(const xt::xexpression&lt; D_WEIGHTS &gt; &amp;e_gt, const xt::xexpression&lt; D_OFFSETS &gt; &amp;e_offsets)</argsstring>
        <name>pixel_wise_lmc_edge_gt_2d</name>
        <param>
          <type>const xt::xexpression&lt; D_WEIGHTS &gt; &amp;</type>
          <declname>e_gt</declname>
        </param>
        <param>
          <type>const xt::xexpression&lt; D_OFFSETS &gt; &amp;</type>
          <declname>e_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/pixel_wise.hxx" line="186" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/pixel_wise.hxx" bodystart="186" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="namespacenifty_1_1graph_1_1opt_1_1lifted__multicut_1a6f456f29118031b4510e2b92fc4af8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SOLVER</type>
          </param>
        </templateparamlist>
        <type>py::class_&lt; typename SOLVER::SettingsType &gt;</type>
        <definition>py::class_&lt;typename SOLVER::SettingsType&gt; nifty::graph::opt::lifted_multicut::exportLiftedMulticutSolver</definition>
        <argsstring>(py::module &amp;liftedMulticutModule, const std::string &amp;solverName)</argsstring>
        <name>exportLiftedMulticutSolver</name>
        <param>
          <type>py::module &amp;</type>
          <declname>liftedMulticutModule</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>solverName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tbeier/src/nifty/include/nifty/python/graph/opt/lifted_multicut/export_lifted_multicut_solver.hxx" line="24" column="1" bodyfile="/home/tbeier/src/nifty/include/nifty/python/graph/opt/lifted_multicut/export_lifted_multicut_solver.hxx" bodystart="24" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/opt/lifted_multicut/chained_solvers.hxx" line="18" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="solver__docstring_8hxx" kind="file" language="C++">
    <compoundname>solver_docstring.hxx</compoundname>
    <includes refid="graph__name_8hxx" local="yes">nifty/python/graph/graph_name.hxx</includes>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes local="no">sstream</includes>
    <includedby refid="export__multicut__solver_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/python/graph/optimization/multicut/export_multicut_solver.hxx</includedby>
    <incdepgraph>
      <node id="12222">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="12221">
        <label>nifty/python/graph/graph_name.hxx</label>
        <link refid="graph__name_8hxx"/>
      </node>
      <node id="12220">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/optimization/solver_docstring.hxx</label>
        <link refid="solver_docstring.hxx"/>
        <childnode refid="12221" relation="include">
        </childnode>
        <childnode refid="12222" relation="include">
        </childnode>
        <childnode refid="12223" relation="include">
        </childnode>
      </node>
      <node id="12223">
        <label>sstream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12224">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/optimization/solver_docstring.hxx</label>
        <link refid="solver_docstring.hxx"/>
        <childnode refid="12225" relation="include">
        </childnode>
      </node>
      <node id="12225">
        <label>/home/tbeier/src/nifty/include/nifty/python/graph/optimization/multicut/export_multicut_solver.hxx</label>
        <link refid="export__multicut__solver_8hxx"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper" prot="public">nifty::graph::optimization::SolverDocstringHelper</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph">nifty::graph</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph_1_1optimization">nifty::graph::optimization</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graph__name_8hxx" kindref="compound">nifty/python/graph/graph_name.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">graph{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">optimization{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper" kindref="compound">SolverDocstringHelper</ref>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a05728e75bb9cbabe2a3a1bd1ae5774e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a05728e75bb9cbabe2a3a1bd1ae5774e1" kindref="member">SolverDocstringHelper</ref>(){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SOLVER&gt;</highlight></codeline>
<codeline lineno="19" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a794e86a248f308ad06f384dc6945fba6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a794e86a248f308ad06f384dc6945fba6" kindref="member">solverDocstring</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SOLVER::GraphType<sp/>GraphType;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SOLVER::ObjectiveType<sp/>ObjectiveType;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graphClsName<sp/>=<sp/><ref refid="structnifty_1_1graph_1_1GraphName" kindref="compound">GraphName&lt;GraphType&gt;::name</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graphModName<sp/>=<sp/><ref refid="structnifty_1_1graph_1_1GraphName" kindref="compound">GraphName&lt;GraphType&gt;::moduleName</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;upperFirst(<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ab80d4e0f698b2851dd4b7135a69feb03" kindref="member">objectiveName</ref>)&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>solver<sp/>`&quot;</highlight><highlight class="normal">&lt;&lt;upperFirst(<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a5c0d1278ffa5b2b6d0ec25755d475286" kindref="member">name</ref>)&lt;&lt;</highlight><highlight class="stringliteral">&quot;.`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>main<sp/>text<sp/>from<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a80179c0d46e95052f851a848dd102b37" kindref="member">mainText</ref>.empty()){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a80179c0d46e95052f851a848dd102b37" kindref="member">mainText</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>the<sp/>related<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;See<sp/>Also:\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Objective<sp/>Class:<sp/>:class:`&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ae7b5b360d8e5df90688b53ad5e0c91f5" kindref="member">objectiveClsName</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Graph<sp/>Class:<sp/>:class:`&quot;</highlight><highlight class="normal">&lt;&lt;graphModName&lt;&lt;</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">&lt;&lt;graphClsName&lt;&lt;</highlight><highlight class="stringliteral">&quot;`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Solver<sp/>Base<sp/>Class:<sp/>:class:`&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a6d16acb879006a23a5db2460a2239797" kindref="member">solverBaseClsName</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Solver<sp/>Factory<sp/>Class:<sp/>:class:`&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a561d4f53b345e5d899fcc711d6770631" kindref="member">factoryClsName</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(!seeAlso.empty()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for(const<sp/>auto<sp/>&amp;<sp/>sa:<sp/>seeAlso){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;sa&lt;&lt;&quot;,&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>ss&lt;&lt;&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>citations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ab7a93e23ee6e2d178935f3811b09fe53" kindref="member">cites</ref>.empty()){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;**Cite:**<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>cite:<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ab7a93e23ee6e2d178935f3811b09fe53" kindref="member">cites</ref>){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;:cite:`&quot;</highlight><highlight class="normal">&lt;&lt;cite&lt;&lt;</highlight><highlight class="stringliteral">&quot;`<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a9ae95c397db0f006097af0f2e6494609" kindref="member">note</ref>.empty()){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;Note:\n&quot;</highlight><highlight class="normal">&lt;&lt;insertTabs(<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a9ae95c397db0f006097af0f2e6494609" kindref="member">note</ref>)&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a7bfc4ddf7f8bb43184293bfe5cf04895" kindref="member">warning</ref>.empty()){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning:\n\n&quot;</highlight><highlight class="normal">&lt;&lt;insertTabs(<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a7bfc4ddf7f8bb43184293bfe5cf04895" kindref="member">warning</ref>)&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>example(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a7f4f5770fcd31bc828457576cde13e10" kindref="member">examples</ref>.empty()){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a7f4f5770fcd31bc828457576cde13e10" kindref="member">examples</ref>.size()&gt;=2)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;Examples:\n&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;Example:\n&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>example:<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a7f4f5770fcd31bc828457576cde13e10" kindref="member">examples</ref>){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;insertTabs(example)&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO,<sp/>this<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>never<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>/<sp/>can<sp/>point<sp/>to<sp/>base<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a9418eafa1958ff7f04eee9e701db8e40" kindref="member">seeAlso</ref>.empty()){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;See<sp/>Also:\n&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>sa:<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a9418eafa1958ff7f04eee9e701db8e40" kindref="member">seeAlso</ref>){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;sa&lt;&lt;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FACTORY&gt;</highlight></codeline>
<codeline lineno="93" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a914cde84ecd596245cf85256a52bb846" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a914cde84ecd596245cf85256a52bb846" kindref="member">factoryDocstring</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FACTORY::ObjectiveType<sp/><sp/><sp/><sp/><sp/>ObjectiveType;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectiveType::GraphType<sp/><sp/><sp/>GraphType;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graphClsName<sp/>=<sp/><ref refid="structnifty_1_1graph_1_1GraphName" kindref="compound">GraphName&lt;GraphType&gt;::name</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graphModName<sp/>=<sp/><ref refid="structnifty_1_1graph_1_1GraphName" kindref="compound">GraphName&lt;GraphType&gt;::moduleName</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;Factory<sp/>for<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ab80d4e0f698b2851dd4b7135a69feb03" kindref="member">objectiveName</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>solver<sp/>`&quot;</highlight><highlight class="normal">&lt;&lt;upperFirst(<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a5c0d1278ffa5b2b6d0ec25755d475286" kindref="member">name</ref>)&lt;&lt;</highlight><highlight class="stringliteral">&quot;.`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;Factory<sp/>class<sp/>to<sp/>create<sp/>instances<sp/>of<sp/>:class:`&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1aa177817962c27ae9382808ea82cc76b7" kindref="member">solverClsName</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>the<sp/>related<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;See<sp/>Also:\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Objective<sp/>Class:<sp/>:class:`&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ae7b5b360d8e5df90688b53ad5e0c91f5" kindref="member">objectiveClsName</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Graph<sp/>Class:<sp/>:class:`&quot;</highlight><highlight class="normal">&lt;&lt;graphModName&lt;&lt;</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">&lt;&lt;graphClsName&lt;&lt;</highlight><highlight class="stringliteral">&quot;`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Solver<sp/>Class:<sp/>:class:`&quot;</highlight><highlight class="normal">&lt;&lt;solverClsName&lt;&lt;</highlight><highlight class="stringliteral">&quot;`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Factory<sp/>Base<sp/>Class:<sp/>:class:`&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a20643330eb9414eeca53c6dbf3f17df3" kindref="member">factoryBaseClsName</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;`\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a80179c0d46e95052f851a848dd102b37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a80179c0d46e95052f851a848dd102b37" kindref="member">mainText</ref>;</highlight></codeline>
<codeline lineno="119" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ab80d4e0f698b2851dd4b7135a69feb03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ab80d4e0f698b2851dd4b7135a69feb03" kindref="member">objectiveName</ref>;</highlight></codeline>
<codeline lineno="120" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ae7b5b360d8e5df90688b53ad5e0c91f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ae7b5b360d8e5df90688b53ad5e0c91f5" kindref="member">objectiveClsName</ref>;</highlight></codeline>
<codeline lineno="121" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a5c0d1278ffa5b2b6d0ec25755d475286" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a5c0d1278ffa5b2b6d0ec25755d475286" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="122" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a77f726127042a539d8c806dc0278203c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a77f726127042a539d8c806dc0278203c" kindref="member">clsName</ref>;</highlight></codeline>
<codeline lineno="123" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a9418eafa1958ff7f04eee9e701db8e40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a9418eafa1958ff7f04eee9e701db8e40" kindref="member">seeAlso</ref>;</highlight></codeline>
<codeline lineno="124" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a7bfc4ddf7f8bb43184293bfe5cf04895" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a7bfc4ddf7f8bb43184293bfe5cf04895" kindref="member">warning</ref>;</highlight></codeline>
<codeline lineno="125" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a9ae95c397db0f006097af0f2e6494609" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a9ae95c397db0f006097af0f2e6494609" kindref="member">note</ref>;</highlight></codeline>
<codeline lineno="126" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a7f4f5770fcd31bc828457576cde13e10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a7f4f5770fcd31bc828457576cde13e10" kindref="member">examples</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ab7a93e23ee6e2d178935f3811b09fe53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1ab7a93e23ee6e2d178935f3811b09fe53" kindref="member">cites</ref>;</highlight></codeline>
<codeline lineno="129" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a4417f651373221474dab247a34f36d96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a4417f651373221474dab247a34f36d96" kindref="member">requirements</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>autofilled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a20643330eb9414eeca53c6dbf3f17df3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a20643330eb9414eeca53c6dbf3f17df3" kindref="member">factoryBaseClsName</ref>;</highlight></codeline>
<codeline lineno="134" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a6d16acb879006a23a5db2460a2239797" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a6d16acb879006a23a5db2460a2239797" kindref="member">solverBaseClsName</ref>;</highlight></codeline>
<codeline lineno="135" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1aa177817962c27ae9382808ea82cc76b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1aa177817962c27ae9382808ea82cc76b7" kindref="member">solverClsName</ref>;</highlight></codeline>
<codeline lineno="136" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a561d4f53b345e5d899fcc711d6770631" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a561d4f53b345e5d899fcc711d6770631" kindref="member">factoryClsName</ref>;</highlight></codeline>
<codeline lineno="137" refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a671e6895a3ef5c7e89f667293a2c58b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a671e6895a3ef5c7e89f667293a2c58b7" kindref="member">factoryFactoryName</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>upperFirst(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>name)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classnifty_1_1graph_1_1optimization_1_1SolverDocstringHelper_1a5c0d1278ffa5b2b6d0ec25755d475286" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret[0]<sp/>=<sp/>std::toupper(ret[0]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>insertTabs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>rawString)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>rawString;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::replace_all(ret,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)+ret;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/python/graph/optimization/solver_docstring.hxx"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="node__labels__to__edge__labels__iterator_8hxx" kind="file" language="C++">
    <compoundname>node_labels_to_edge_labels_iterator.hxx</compoundname>
    <includes local="no">boost/iterator/transform_iterator.hpp</includes>
    <includedby refid="lifted__multicut__ilp_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/lifted_multicut_ilp.hxx</includedby>
    <includedby refid="multicut__ilp_8hxx" local="yes">/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/multicut_ilp.hxx</includedby>
    <incdepgraph>
      <node id="7425">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="7424">
        <label>/home/tbeier/src/nifty/include/nifty/graph/detail/node_labels_to_edge_labels_iterator.hxx</label>
        <link refid="node_labels_to_edge_labels_iterator.hxx"/>
        <childnode refid="7425" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7428">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/multicut/multicut_ilp.hxx</label>
        <link refid="multicut__ilp_8hxx"/>
      </node>
      <node id="7426">
        <label>/home/tbeier/src/nifty/include/nifty/graph/detail/node_labels_to_edge_labels_iterator.hxx</label>
        <link refid="node_labels_to_edge_labels_iterator.hxx"/>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
      </node>
      <node id="7427">
        <label>/home/tbeier/src/nifty/include/nifty/graph/optimization/lifted_multicut/lifted_multicut_ilp.hxx</label>
        <link refid="lifted__multicut__ilp_8hxx"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction" prot="public">nifty::graph::detail_graph::NodeLabelsToEdgeLabelsUnaryFunction</innerclass>
    <innernamespace refid="namespacenifty">nifty</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph">nifty::graph</innernamespace>
    <innernamespace refid="namespacenifty_1_1graph_1_1detail__graph">nifty::graph::detail_graph</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iterator/transform_iterator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenifty" kindref="compound">nifty</ref>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">graph{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail_graph{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_MAP&gt;</highlight></codeline>
<codeline lineno="11" refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction" kindref="compound">NodeLabelsToEdgeLabelsUnaryFunction</ref>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a50e0f9bfa5b0ce4c60fb0f010cd15110" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a50e0f9bfa5b0ce4c60fb0f010cd15110" kindref="member">Reference</ref>;</highlight></codeline>
<codeline lineno="14" refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a69f2d0e0bef04e6172466755efee4a8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a69f2d0e0bef04e6172466755efee4a8e" kindref="member">Value</ref>;</highlight></codeline>
<codeline lineno="15" refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a298c22998b3dcc8aea86f29bb0e9c9b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a298c22998b3dcc8aea86f29bb0e9c9b7" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="16" refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1ab0985d82c405b9b0e4422751a2a8b18b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1ab0985d82c405b9b0e4422751a2a8b18b" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a27e93a8f9e44784d8c17e40fbf295db8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a27e93a8f9e44784d8c17e40fbf295db8" kindref="member">NodeLabelsToEdgeLabelsUnaryFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GRAPH<sp/>&amp;<sp/>graph,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NODE_MAP<sp/>&amp;<sp/>nodeLabels)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>valBuffer_(),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_(graph),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeLabels_(nodeLabels){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a9325812abd92290323172cb501929d36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1a9325812abd92290323172cb501929d36" kindref="member">NodeLabelsToEdgeLabelsUnaryFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction" kindref="compound">NodeLabelsToEdgeLabelsUnaryFunction</ref><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>valBuffer_(other.valBuffer_),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_(other.graph_),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeLabels_(other.nodeLabels_){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1abdc5a66fc34a0e0b8323e12362452036" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>&amp;<sp/><ref refid="classnifty_1_1graph_1_1detail__graph_1_1NodeLabelsToEdgeLabelsUnaryFunction_1abdc5a66fc34a0e0b8323e12362452036" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>edgeId)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uv<sp/>=<sp/>graph_.uv(edgeId);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valBuffer_<sp/>=<sp/><sp/>nodeLabels_[uv.first]<sp/>!=<sp/>nodeLabels_[uv.second]<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valBuffer_;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>uint8_t<sp/>valBuffer_;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GRAPH<sp/>&amp;<sp/>graph_;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NODE_MAP<sp/>&amp;<sp/>nodeLabels_;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GRAPH,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NODE_MAP&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::transform_iterator&lt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeLabelsToEdgeLabelsUnaryFunction&lt;GRAPH,<sp/>NODE_MAP&gt;<sp/>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GRAPH::EdgeIter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>&amp;<sp/>,<sp/>uint8_t</highlight></codeline>
<codeline lineno="46" refid="namespacenifty_1_1graph_1_1detail__graph_1abfe97acf5c16e1fbb32f1eb7fef344b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/><ref refid="namespacenifty_1_1graph_1_1detail__graph_1abfe97acf5c16e1fbb32f1eb7fef344b1" kindref="member">nodeLabelsToEdgeLabelsIterBegin</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GRAPH<sp/>&amp;<sp/>graph,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NODE_MAP<sp/>&amp;<sp/>nodeLabels</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NodeLabelsToEdgeLabelsUnaryFunction&lt;GRAPH,<sp/>NODE_MAP&gt;<sp/>UFunc;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GRAPH::EdgeIter<sp/>EdgeIter;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UFunc<sp/>uFunc(graph,<sp/>nodeLabels);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::transform_iterator&lt;<sp/>UFunc<sp/>,<sp/>EdgeIter,<sp/>const<sp/>uint8_t<sp/>&amp;<sp/>,<sp/>uint8_t&gt;(graph.edgesBegin(),<sp/>uFunc);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail_graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty::graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nifty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tbeier/src/nifty/include/nifty/graph/detail/node_labels_to_edge_labels_iterator.hxx"/>
  </compounddef>
</doxygen>
